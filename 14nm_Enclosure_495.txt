//CELLB

Q: 
CELLB_EN_1 {
@ CELLB enclosure of ALL_AA in S/D direction, except DMCB1 region >= 0.08um
 err1 = ENC (ALL_AA AND CELLB) CELLB_v_edges < 0.08 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE DMCB1
}

Q: 
CELLB_EN_2 {
@ CELLB enclosure of ALL_AA in GATE poly direction, except DMCB1 region = 0.048+0.048*num
 err1 = ENC ALL_AA_h_edges CELLB < 0.048 ABUT<90 OPPOSITE REGION  //;ouside AA covered by CELLB.R.1
 err1 NOT INSIDE DMCB1

 err2 = DFM COPY (OFFGRID (ALL_AA_h_edges NOT INSIDE EDGE DMCB1) 1 480 OFFSET 0 480 INSIDE OF LAYER CELLB ABSOLUTE) REGION
 err2 NOT INSIDE DMCB1
}

Q: 
CELLB_EN_3 {
@ CELLB enclosure of the outmost FIN within CELLB in GATE poly direction = 0.019um
@ DRC Hints: all FIN vertical sides should be butted with CELLB
 CELLB_inside_shrink = ANGLE ((EXPAND EDGE CELLB_h_edges INSIDE BY 0.019) INSIDE EDGE CELLB) == 0
 err1 = CELLB_inside_shrink NOT COIN EDGE FIN
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

//AA

Q: 
AA_EN_1a {
@ P+AA enclosure by NW, except INST and DIOMK2 regions >= 0.048um
 err1 = ENC (PAA AND NW) NW < 0.048 ABUT<90 REGION
 err1 NOT INSIDE INST_DIOMK2
}

Q: 
AA_EN_1b {
@ N+ pick-up AA enclosure by NW, except INST and DIOMK2 regions >= 0.048um
 err1 = ENC (NAA AND NW) NWRN < 0.048 ABUT<90 REGION  //;exclude RESNW, NW straddle on NACT/NTAP in NW resistor
 err1 NOT INSIDE INST_DIOMK2
}

Q: 
AA_EN_1c {
@ P+AA (AA vertical edge extend 1/2 GT width) enclosure by NW in S/D direction, except INST and DIOMK2 regions >= 0.065um
 err1 = ENC (edge_gate_AA_pact AND NW) NW_v_edges < 0.065 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err1 NOT INSIDE INST_DIOMK2
}

Q: 
AA_EN_1d {
@ N+ pick-up AA (AA vertical edge extend 1/2 GT width) enclosure by NW in S/D direction, except INST and DIOMK2 regions >= 0.065um
 err1 = ENC (edge_gate_AA_ntap AND NW) (ANGLE NWRN > 88 <= 90) < 0.065 ABUT<90 OPPOSITE REGION  //;exclude RESNW, NW straddle on NACT/NTAP in NW resistor
 err1 NOT INSIDE INST_DIOMK2
}

Q: 
AA_EN_1f {
@ P+AA enclosure by NW in I/O region, except DIOMK2 region >= 0.144um
 chk_pact = (PACT NOT OUTSIDE DG) NOT COIN EDGE PTAP_RAW
 err1 = (ENC chk_pact NW < 0.144 ABUT<90 REGION) NOT OUTSIDE DG
 err1 NOT INSIDE DIOMK2
}

Q: 
AA_EN_1g {
@ P+AA (AA vertical edge extend 1/2 GT width) enclosure by NW in I/O region in S/D direction, except DIOMK2 region >= 0.162um
 err1 = ENC (edge_gate_AA_pact NOT OUTSIDE DG) NW_v_edges < 0.162 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err1 NOT INSIDE DIOMK2
}

Q: 
AA_EN_2 {
@ The outmost FIN enclosure by ALL_AA in GATE poly direction, except LDBK, DMCMK1, INST and MARKS regions = 0.019um
 WAIVE_AREA = OR INST_LDBK DMCMK1 MARKS
 chk_EDGE = ANGLE ((EXPAND EDGE ALL_AA_h_edges INSIDE BY 0.019) NOT COIN EDGE ALL_AA) == 0
 err1 = chk_EDGE NOT COIN EDGE FIN
 err1 NOT INSIDE EDGE WAIVE_AREA

 err2 = ALL_AA_h_edges NOT OUTSIDE EDGE FIN
 err2 NOT INSIDE EDGE WAIVE_AREA
}

VARIABLE AA_EN_2a_val_ver 0.061
VARIABLE AA_EN_2a_val_hor 0.079

Q: 
AA_EN_2a {
@ P+AA (AA vertical edge extend 1/2 GT width) enclosure by NW corner in GATE poly direction when enclosure in S/D direction < 0.079um. >= 0.061um
 y1 = (ENC [PACT_v_edges_ov] NWRN < AA_EN_2a_val_hor ABUT<90 OPPOSITE EXTENDED AA_EN_2a_val_ver) OR EDGE 
   (ENC [PACT_h_edges_ov] NWRN < AA_EN_2a_val_ver ABUT<90 OPPOSITE EXTENDED AA_EN_2a_val_hor)
 y2 = (ENC PACT_v_edges_ov [NWRN] < AA_EN_2a_val_hor ABUT<90 OPPOSITE EXTENDED AA_EN_2a_val_ver) OR EDGE 
   (ENC PACT_h_edges_ov [NWRN] < AA_EN_2a_val_ver ABUT<90 OPPOSITE EXTENDED AA_EN_2a_val_hor)
 y3 = ENC pact_convex_corner_aa_ov NWRN_convex_corner < AA_EN_2a_val_hor ABUT<90 OPPOSITE EXTENDED AA_EN_2a_val_hor
 y4 = ENC pact_concave_corner_aa_ov NWRN_concave_corner < AA_EN_2a_val_hor ABUT<90 OPPOSITE EXTENDED AA_EN_2a_val_hor
 err1_a = INT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_b = INT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_a = EXT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_b = EXT y2 < 0.001 ABUT==90 INTERSECTING ONLY

 err1_c = DFM PROPERTY y3 err1_a err1_b ABUT ALSO OVERLAP MULTI [-= (count(err1_a) > 0 && count(err1_b) > 0) ? 1 : 0] > 0
 err2_c = DFM PROPERTY y4 err2_a err2_b ABUT ALSO OVERLAP MULTI [-= (count(err2_a) > 0 && count(err2_b) > 0) ? 1 : 0] > 0
 err1 = DFM COPY err1_c REGION
 err2 = DFM COPY err2_c REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

VARIABLE AA_EN_2b_val_ver 0.061
VARIABLE AA_EN_2b_val_hor 0.079

Q: 
AA_EN_2b {
@ P+AA (AA vertical edge extend 1/2 GT width) enclosure by NW corner in S/D direction when enclosure in GATE poly direction < 0.061um. >= 0.079um
 y1 = (ENC [PACT_v_edges_ov] NWRN < AA_EN_2b_val_hor ABUT<90 OPPOSITE EXTENDED AA_EN_2a_val_ver) OR EDGE 
   (ENC [PACT_h_edges_ov] NWRN < AA_EN_2a_val_ver ABUT<90 OPPOSITE EXTENDED AA_EN_2b_val_hor)
 y2 = (ENC PACT_v_edges_ov [NWRN] < AA_EN_2b_val_hor ABUT<90 OPPOSITE EXTENDED AA_EN_2a_val_ver) OR EDGE 
   (ENC PACT_h_edges_ov [NWRN] < AA_EN_2a_val_ver ABUT<90 OPPOSITE EXTENDED AA_EN_2b_val_hor)
 y3 = ENC pact_convex_corner_aa_ov NWRN_convex_corner < AA_EN_2b_val_hor ABUT<90 OPPOSITE EXTENDED AA_EN_2b_val_hor
 y4 = ENC pact_concave_corner_aa_ov NWRN_concave_corner < AA_EN_2b_val_hor ABUT<90 OPPOSITE EXTENDED AA_EN_2b_val_hor
 err1_a = INT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_b = INT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_a = EXT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_b = EXT y2 < 0.001 ABUT==90 INTERSECTING ONLY

 err1_c = DFM PROPERTY y3 err1_a err1_b ABUT ALSO OVERLAP MULTI [-= (count(err1_a) > 0 && count(err1_b) > 0) ? 1 : 0] > 0
 err2_c = DFM PROPERTY y4 err2_a err2_b ABUT ALSO OVERLAP MULTI [-= (count(err2_a) > 0 && count(err2_b) > 0) ? 1 : 0] > 0
 err1 = DFM COPY err1_c REGION
 err2 = DFM COPY err2_c REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: 
AA_EN_2c {
@ AA (AA vertical edge extend 1/2 GT width) enclosure by NW line-end in S/D direction (line-end vertical width <= 0.296um between two consecutive 90-90 degree corners with both sides length >= 0.09um) >= 0.079um
 chk_nw = CONVEX EDGE NW ANGLE1 == 90 LENGTH1 >= 0.09 ANGLE2 == 90 LENGTH2 >= 0.09 WITH LENGTH <= 0.296
 err1 = ENC edge_gate_AA_all_v_edges chk_nw < 0.079 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

VARIABLE AA_EN_2d_val_ver 0.071
VARIABLE AA_EN_2d_val_hor 0.140+GLOBAL_TOLERANCE

Q: 
AA_EN_2d {
@ AA line-end (AA vertical edge extend 1/2 GT width) enclosure by NW line-end in GATE poly direction when enclosure in S/D direction <= 0.14um, except INST region. >= 0.071um
@ NW line-end: vertical width < 0.24um between two consecutive 90-90 degree corners with both sides length >= 0.09um
@ AA line-end: vertical width <= 0.096um between two consecutive 90-90 degree corners
 y1 = (ENC [edge_gate_AA_all_v_edges] NW_v_N_end < AA_EN_2d_val_hor ABUT<90 OPPOSITE EXTENDED AA_EN_2d_val_ver) OR EDGE 
   (ENC [edge_gate_AA_all_h_edges] NW < AA_EN_2d_val_ver ABUT<90 OPPOSITE EXTENDED AA_EN_2d_val_hor)
 y2 = (ENC edge_gate_AA_all_v_edges [NW_v_N_end] < AA_EN_2d_val_hor ABUT<90 OPPOSITE EXTENDED AA_EN_2d_val_ver) OR EDGE 
   (ENC edge_gate_AA_all_h_edges [NW] < AA_EN_2d_val_ver ABUT<90 OPPOSITE EXTENDED AA_EN_2d_val_hor)
 y3 = ENC AA_convex_corner_aa_ov NW_convex_corner < AA_EN_2d_val_hor ABUT<90 OPPOSITE EXTENDED AA_EN_2d_val_hor
 err1_a = INT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_b = INT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_c = DFM PROPERTY y3 err1_a err1_b NW_v_N_end AA_v_lend ABUT ALSO OVERLAP MULTI [-= (count(err1_a) > 0 && count(err1_b) > 0 && count(NW_v_N_end) > 0 && count(AA_v_lend) > 0) ? 1 : 0] > 0
 err1 = DFM COPY err1_c REGION
 err1 NOT INSIDE INST
}

VARIABLE AA_EN_2e_val_ver 0.061+GLOBAL_TOLERANCE
VARIABLE AA_EN_2e_val_hor 0.088

Q: 
AA_EN_2e {
@ AA line-end (AA vertical edge extend 1/2 GT width) enclosure by NW line-end in S/D direction when enclosure in GATE poly direction <= 0.061um, except INST region. >= 0.088um
@ NW line-end: vertical width < 0.24um between two consecutive 90-90 degree corners with both sides length >= 0.09um
@ AA line-end: vertical width <= 0.096um between two consecutive 90-90 degree corners
 y1 = (ENC [edge_gate_AA_all_v_edges] NW_v_N_end < AA_EN_2e_val_hor ABUT<90 OPPOSITE EXTENDED AA_EN_2e_val_ver) OR EDGE 
   (ENC [edge_gate_AA_all_h_edges] NW < AA_EN_2e_val_ver ABUT<90 OPPOSITE EXTENDED AA_EN_2e_val_hor)
 y2 = (ENC edge_gate_AA_all_v_edges [NW_v_N_end] < AA_EN_2e_val_hor ABUT<90 OPPOSITE EXTENDED AA_EN_2e_val_ver) OR EDGE 
   (ENC edge_gate_AA_all_h_edges [NW] < AA_EN_2e_val_ver ABUT<90 OPPOSITE EXTENDED AA_EN_2e_val_hor)
 y3 = ENC AA_convex_corner_aa_ov NW_convex_corner < AA_EN_2e_val_hor ABUT<90 OPPOSITE EXTENDED AA_EN_2e_val_hor
 err1_a = INT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_b = INT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_c = DFM PROPERTY y3 err1_a err1_b NW_v_N_end AA_v_lend ABUT ALSO OVERLAP MULTI [-= (count(err1_a) > 0 && count(err1_b) > 0 && count(NW_v_N_end) > 0 && count(AA_v_lend) > 0) ? 1 : 0] > 0
 err1 = DFM COPY err1_c REGION
 err1 NOT INSIDE INST
}

#IFDEF Delta_Voltage_Rules_Check YES
VARIABLE AA_EN_3a_val 0.144
VARIABLE AA_EN_3b_val 0.162

Q: 
AA_EN_3a {
@ NW enclosure of P+ ACTIVE (Maximum delta V > 3.63V, 3.3V+10%) >= 0.144um
 err1 = DFM DV PSD PW_0 < AA_EN_3a_val DVPARAMS net_vol_assign "min_vol" 0 "max_vol" 0 "syncID" > 3.63 ANNOTATE NOT CONNECTED SINGULAR MEASURE ALL
 DFM COPY err1
}

AA_EN_3b {
@ NW enclosure of P+ ACTIVE (AA vertical edge extend 1/2 GT width) in S/D direction (Maximum delta V > 3.63V, 3.3V+10%) >= 0.162um
 PSD_c_all = AA_c_all TOUCH EDGE (ANGLE (AA_c_all INTERACT PSD) == 90)
 err1 = DFM DV PSD_c_all PW_0 < AA_EN_3b_val DVPARAMS net_vol_assign "min_vol" 0 "max_vol" 0 "syncID" > 3.63 ANNOTATE NOT CONNECTED OPPOSITE MEASURE ALL
 DFM COPY err1
}
#ENDIF

//DNW

Q: 
DNW_EN_1 {
@ N+AA enclosure by DNW >= 0.42um
 err1 = ENC NACT DNW < 0.42 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//NW

Q: 
NW_EN_1 {
@ NW enclosure of DOP_AA (Except Dummy_Cell_WO_IMP) >= 0.048um
 err1 = ENC (DOP_AA AND NW) NW < 0.048 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE Dummy_Cell_WO_IMP
}

Q: 
NW_EN_1a {
@ NW enclosure of DOP_AA (AA vertical edge extend 1/2 GT width) in S/D direction, except Dummy_Cell_WO_IMP >= 0.065um
 err1 = ENC (edge_gate_dopAA_all AND NW) NW_v_edges < 0.065 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err1 NOT INSIDE Dummy_Cell_WO_IMP
}

//DG

Q: 
DG_EN_1a {
@ DG enclosure of GATE along the S/D direction >= 0.313um
 err1 = ENC (GATE AND DG) DG_v_edges < 0.313 ABUT<90 OPPOSITE REGION
 err2 = ENC GATE DG < 0.001 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: 
DG_EN_1b {
@ DG enclosure of AA, except pick-up AA >= 0.098um
 err1 = ENC (AA_NOT_TAP AND DG) DG < 0.098 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
DG_EN_1c {
@ DG enclosure of AA (AA vertical edge extend 1/2 GT width) in S/D direction, except pick-up AA >= 0.116um
 chk_AA = AA_NOT_TAP OR (edge_gate_AA_uGT NOT INTERACT TAP_RAW)
 err1 = ENC (chk_AA AND DG) DG_v_edges < 0.116 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
DG_EN_1d {
@ DG enclosure of DUM_AA >= 0.053um
 err1 = ENC (DUM_AA AND DG) DG < 0.053 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
DG_EN_1e {
@ DG enclosure of DUM_AA (AA vertical edge extend 1/2 GT width) in S/D direction >= 0.07um
 chk_AA = DUM_AA OR edge_gate_dumAA
 err1 = ENC chk_AA DG_v_edges < 0.07 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
DG_EN_2a {
@ DG extension outside of NW (extension = 0um is allowed) >= 0.238um
 err1 = ENC NW DG < 0.238 ABUT>0<90 SINGULAR REGION
 err2 = ENC DG NW < 0.001 ABUT>0<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: 
DG_EN_2b {
@ DG enclosure by NW (enclosure = 0um is allowed) >= 0.238um
 err1 = ENC DG NW < 0.238 ABUT>0<90 SINGULAR REGION
 err2 = ENC NW DG < 0.001 ABUT>0<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

//EGATE

Q: 
EGATE_EN_1_GTMK1_SN {
@ GTMK1/GTMK2 (INTERACT AA not abut RESNW) enclosure by NW, SN, SP in S/D direction >= 0.066um
@ Exclude NW for NW resistor
 err1 = ENC (GTMK1_v_edges COIN EDGE (GTMK1_interact_AA AND SN)) SN < EGATE_EN_1_val ABUT<90 MEASURE ALL OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
EGATE_EN_1_GTMK1_SP {
@ GTMK1/GTMK2 (INTERACT AA not abut RESNW) enclosure by NW, SN, SP in S/D direction >= 0.066um
@ Exclude NW for NW resistor
 err1 = ENC (GTMK1_v_edges COIN EDGE (GTMK1_interact_AA AND SP)) SP < EGATE_EN_1_val ABUT<90 MEASURE ALL OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
EGATE_EN_1_GTMK1_NW {
@ GTMK1/GTMK2 (INTERACT AA not abut RESNW) enclosure by NW, SN, SP in S/D direction >= 0.066um
@ Exclude NW for NW resistor
 err1 = ENC (GTMK1_v_edges COIN EDGE (GTMK1_interact_AA AND NWRN)) NWRN < EGATE_EN_1_val ABUT<90 MEASURE ALL OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
EGATE_EN_1_GTMK2_SN {
@ GTMK1/GTMK2 (INTERACT AA not abut RESNW) enclosure by NW, SN, SP in S/D direction >= 0.066um
@ Exclude NW for NW resistor
 err1 = ENC (GTMK2_v_edges COIN EDGE (GTMK2_interact_AA AND SN)) SN < EGATE_EN_1_val ABUT<90 MEASURE ALL OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
EGATE_EN_1_GTMK2_SP {
@ GTMK1/GTMK2 (INTERACT AA not abut RESNW) enclosure by NW, SN, SP in S/D direction >= 0.066um
@ Exclude NW for NW resistor
 err1 = ENC (GTMK2_v_edges COIN EDGE (GTMK2_interact_AA AND SP)) SP < EGATE_EN_1_val ABUT<90 MEASURE ALL OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
EGATE_EN_1_GTMK2_NW {
@ GTMK1/GTMK2 (INTERACT AA not abut RESNW) enclosure by NW, SN, SP in S/D direction >= 0.066um
@ Exclude NW for NW resistor
 err1 = ENC (GTMK2_v_edges COIN EDGE (GTMK2_interact_AA AND NW)) NW < EGATE_EN_1_val ABUT<90 MEASURE ALL OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//GT_P96

Q: 
GT_P96_EN_1 {
@ GT_P96 enclosure of GATE >= 0.048um
 err1 = ENC (GATE AND GT_P96) GT_P96 < 0.048 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
GT_P96_EN_2 {
@ GT_P96 enclosure of GATE in S/D direction >= 0.313um
 err1 = ENC (GATE AND GT_P96) GT_P96_v_edges < 0.313 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
GT_P96_EN_3 {
@ GT_P96 enclosure of AOP_GT in S/D direction, except DMCMK1 >= 0.035um
 err1 = ENC AOP_GT GT_P96_v_edges < 0.035 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE DMCMK1
}

//SN

Q: 
SN_EN_5 {
@ SN enclosure of N+AA, except MARKS and INST and DIOMK2 regions >= 0.048um
 err1 = ENC NACT SN < 0.048 ABUT<90 REGION
 err1 NOT INSIDE (OR MARKS_INST DIOMK2)
}

Q: 
SN_EN_5a {
@ SN enclosure of N+AA (AA vertical edge extend 1/2 GT width) in S/D direction, except INST and DIOMK2 region >= 0.065um
 err1 = ENC edge_gate_AA_nact SN_v_edges < 0.065 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE INST_DIOMK2
}

Q: 
SN_EN_6 {
@ SN enclosure of N+ pick-up AA, except INST and DIOMK2 region >= 0.048um
 err1 = ENC NTAPi_RAW SN < 0.048 ABUT<90 REGION
 err1 NOT INSIDE INST_DIOMK2
}

Q: 
SN_EN_6a {
@ SN enclosure of N+ pick-up AA (AA vertical edge extend 1/2 GT width) in horizontal direction, except INST and DIOMK2 region >= 0.065um
 err1 = ENC edge_gate_AA_ntap SN_v_edges < 0.065 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE INST_DIOMK2
}

Q: 
SN_EN_7 {
@ SN enclosure of DOP_AA >= 0.048um
 err1 = ENC (DOP_AA AND SN) SN < 0.048 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
SN_EN_7a {
@ SN enclosure of DOP_AA (AA vertical edge extend 1/2 GT width) in S/D direction, except LOGO region >= 0.065um
 err1 = ENC (edge_gate_dopAA_all AND SN) SN_v_edges < 0.065 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE LOGO
}

VARIABLE SN_EN_8_val_ver 0.061
VARIABLE SN_EN_8_val_hor 0.087

Q: 
SN_EN_8 {
@ SN enclosure of N+AA in GATE poly direction when enclosure in S/D direction < 0.087um at each SN corner, except INST and DIOMK2 region >= 0.061um
 y1 = (ENC [NACT_inside_SN_v_edges] SN < SN_EN_8_val_hor ABUT<90 OPPOSITE EXTENDED SN_EN_8_val_ver) OR EDGE (ENC [NACT_inside_SN_h_edges] SN < SN_EN_8_val_ver ABUT<90 OPPOSITE EXTENDED SN_EN_8_val_hor)
 y2 = (ENC NACT_inside_SN_v_edges [SN] < SN_EN_8_val_hor ABUT<90 OPPOSITE EXTENDED SN_EN_8_val_ver) OR EDGE (ENC NACT_inside_SN_h_edges [SN] < SN_EN_8_val_ver ABUT<90 OPPOSITE EXTENDED SN_EN_8_val_hor)
 y3 = ENC nact_convex_corner sn_convex_corner < SN_EN_8_val_hor ABUT<90 OPPOSITE EXTENDED SN_EN_8_val_hor
 y4 = ENC nact_concave_corner sn_concave_corner < SN_EN_8_val_hor ABUT<90 OPPOSITE EXTENDED SN_EN_8_val_hor
 err1_a = INT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_b = INT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_a = EXT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_b = EXT y2 < 0.001 ABUT==90 INTERSECTING ONLY

 err1_c = DFM PROPERTY y3 err1_a err1_b ABUT ALSO OVERLAP MULTI [-= (count(err1_a) > 0 && count(err1_b) > 0) ? 1 : 0] > 0
 err2_c = DFM PROPERTY y4 err2_a err2_b ABUT ALSO OVERLAP MULTI [-= (count(err2_a) > 0 && count(err2_b) > 0) ? 1 : 0] > 0
 err1 = DFM COPY err1_c REGION
 err2 = DFM COPY err2_c REGION
 err1 NOT INSIDE INST_DIOMK2
 err2 NOT INSIDE INST_DIOMK2
}

VARIABLE SN_EN_8a_val_ver 0.061
VARIABLE SN_EN_8a_val_hor 0.079

Q: 
SN_EN_8a {
@ SN enclosure of N+AA (AA vertical edge extend 1/2 GT width) in S/D direction when enclosure in GATE poly direction < 0.061um at each SN corner, except INST and DIOMK2 region >= 0.079um
 y1 = (ENC [NACT_inside_SN_v_edges_ov] SN < SN_EN_8a_val_hor ABUT<90 OPPOSITE EXTENDED SN_EN_8a_val_ver) OR EDGE (ENC [NACT_inside_SN_h_edges_ov] SN < SN_EN_8a_val_ver ABUT<90 OPPOSITE EXTENDED SN_EN_8a_val_hor)
 y2 = (ENC NACT_inside_SN_v_edges_ov [SN] < SN_EN_8a_val_hor ABUT<90 OPPOSITE EXTENDED SN_EN_8a_val_ver) OR EDGE (ENC NACT_inside_SN_h_edges_ov [SN] < SN_EN_8a_val_ver ABUT<90 OPPOSITE EXTENDED SN_EN_8a_val_hor)
 y3 = ENC nact_convex_corner_ov sn_convex_corner < SN_EN_8a_val_hor ABUT<90 OPPOSITE EXTENDED SN_EN_8a_val_hor
 y4 = ENC nact_concave_corner_ov sn_concave_corner < SN_EN_8a_val_hor ABUT<90 OPPOSITE EXTENDED SN_EN_8a_val_hor
 err1_a = INT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_b = INT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_a = EXT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_b = EXT y2 < 0.001 ABUT==90 INTERSECTING ONLY

 err1_c = DFM PROPERTY y3 err1_a err1_b ABUT ALSO OVERLAP MULTI [-= (count(err1_a) > 0 && count(err1_b) > 0) ? 1 : 0] > 0
 err2_c = DFM PROPERTY y4 err2_a err2_b ABUT ALSO OVERLAP MULTI [-= (count(err2_a) > 0 && count(err2_b) > 0) ? 1 : 0] > 0
 err1 = DFM COPY err1_c REGION
 err2 = DFM COPY err2_c REGION
 err1 NOT INSIDE INST_DIOMK2
 err2 NOT INSIDE INST_DIOMK2
}

Q: 
SN_EN_9 {
@ SN line-end (vertical width <= 0.296um between two consecutive 90-90 degree corners with both sides length >= 0.09um) enclosure of AA (AA vertical edge extend 1/2 GT width) in S/D direction, except INST region >= 0.079um
 chk_sn = CONVEX EDGE SN ANGLE1 == 90 LENGTH1 >= 0.09 ANGLE2 == 90 LENGTH2 >= 0.09 WITH LENGTH <= 0.296
 err1 = ENC edge_gate_AA_all_v_edges chk_sn < 0.079 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err1 NOT INSIDE INST
}

//SP

Q: 
SP_EN_5 {
@ SP enclosure of P+AA, except INST and DIOMK2 region >= 0.048um
 err1 = ENC PACT SP < 0.048 ABUT<90 REGION
 err1 NOT INSIDE INST_DIOMK2
}

Q: 
SP_EN_5a {
@ SP enclosure of P+AA (AA vertical edge extend 1/2 GT width) in S/D direction, except INST and DIOMK2 region >= 0.065um
 err1 = ENC edge_gate_AA_pact SP_v_edges < 0.065 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE INST_DIOMK2
}

Q: 
SP_EN_6 {
@ SP enclosure of P+ pick-up AA, except MARKS, INST and DIOMK2 regions >= 0.048um
 err1 = ENC PTAP_RAW SP < 0.048 ABUT<90 REGION
 err1 NOT INSIDE (OR MARKS_INST DIOMK2)
}

Q: 
SP_EN_6a {
@ SP enclosure of P+ pick-up AA (AA vertical edge extend 1/2 GT width) in S/D direction, except INST and DIOMK2 region >= 0.065um
 err1 = ENC edge_gate_AA_ptap SP_v_edges < 0.065 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE INST_DIOMK2
}

Q: 
SP_EN_7 {
@ SP enclosure of DOP_AA >= 0.048um
 err1 = ENC DOP_AA SP < 0.048 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
SP_EN_7a {
@ SP enclosure of DOP_AA (AA vertical edge extend 1/2 GT width) in S/D direction >= 0.065um
 err1 = ENC (edge_gate_dopAA_all AND SP) SP_v_edges < 0.065 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

VARIABLE SP_EN_8_val_ver 0.061
VARIABLE SP_EN_8_val_hor 0.087

Q: 
SP_EN_8 {
@ SP enclosure of P+AA in GATE poly direction when enclosure in S/D direction < 0.087um at each SP corner, except INST and DIOMK2 region >= 0.061um
 y1 = (ENC [PACT_inside_SP_v_edges] SP < SP_EN_8_val_hor ABUT<90 OPPOSITE EXTENDED SP_EN_8_val_ver) OR EDGE (ENC [PACT_inside_SP_h_edges] SP < SP_EN_8_val_ver ABUT<90 OPPOSITE EXTENDED SP_EN_8_val_hor)
 y2 = (ENC PACT_inside_SP_v_edges [SP] < SP_EN_8_val_hor ABUT<90 OPPOSITE EXTENDED SP_EN_8_val_ver) OR EDGE (ENC PACT_inside_SP_h_edges [SP] < SP_EN_8_val_ver ABUT<90 OPPOSITE EXTENDED SP_EN_8_val_hor)
 y3 = ENC pact_convex_corner sp_convex_corner < SP_EN_8_val_hor ABUT<90 OPPOSITE EXTENDED SP_EN_8_val_hor
 y4 = ENC pact_concave_corner sp_concave_corner < SP_EN_8_val_hor ABUT<90 OPPOSITE EXTENDED SP_EN_8_val_hor
 err1_a = INT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_b = INT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_a = EXT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_b = EXT y2 < 0.001 ABUT==90 INTERSECTING ONLY

 err1_c = DFM PROPERTY y3 err1_a err1_b ABUT ALSO OVERLAP MULTI [-= (count(err1_a) > 0 && count(err1_b) > 0) ? 1 : 0] > 0
 err2_c = DFM PROPERTY y4 err2_a err2_b ABUT ALSO OVERLAP MULTI [-= (count(err2_a) > 0 && count(err2_b) > 0) ? 1 : 0] > 0
 err1 = DFM COPY err1_c REGION
 err2 = DFM COPY err2_c REGION
 err1 NOT INSIDE INST_DIOMK2
 err2 NOT INSIDE INST_DIOMK2
}

VARIABLE SP_EN_8a_val_ver 0.061
VARIABLE SP_EN_8a_val_hor 0.079

Q: 
SP_EN_8a {
@ SP enclosure of P+AA (AA vertical edge extend 1/2 GT width) in S/D direction when enclosure in GATE poly direction < 0.061um at each SP corner, except INST and DIOMK2 region >= 0.079um
 y1 = (ENC [PACT_inside_SP_v_edges_ov] SP < SP_EN_8a_val_hor ABUT<90 OPPOSITE EXTENDED SP_EN_8a_val_ver) OR EDGE (ENC [PACT_inside_SP_h_edges_ov] SP < SP_EN_8a_val_ver ABUT<90 OPPOSITE EXTENDED SP_EN_8a_val_hor)
 y2 = (ENC PACT_inside_SP_v_edges_ov [SP] < SP_EN_8a_val_hor ABUT<90 OPPOSITE EXTENDED SP_EN_8a_val_ver) OR EDGE (ENC PACT_inside_SP_h_edges_ov [SP] < SP_EN_8a_val_ver ABUT<90 OPPOSITE EXTENDED SP_EN_8a_val_hor)
 y3 = ENC pact_convex_corner_ov sp_convex_corner < SP_EN_8a_val_hor ABUT<90 OPPOSITE EXTENDED SP_EN_8a_val_hor
 y4 = ENC pact_concave_corner_ov sp_concave_corner < SP_EN_8a_val_hor ABUT<90 OPPOSITE EXTENDED SP_EN_8a_val_hor
 err1_a = INT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_b = INT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_a = EXT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_b = EXT y2 < 0.001 ABUT==90 INTERSECTING ONLY

 err1_c = DFM PROPERTY y3 err1_a err1_b ABUT ALSO OVERLAP MULTI [-= (count(err1_a) > 0 && count(err1_b) > 0) ? 1 : 0] > 0
 err2_c = DFM PROPERTY y4 err2_a err2_b ABUT ALSO OVERLAP MULTI [-= (count(err2_a) > 0 && count(err2_b) > 0) ? 1 : 0] > 0
 err1 = DFM COPY err1_c REGION
 err2 = DFM COPY err2_c REGION
 err1 NOT INSIDE INST_DIOMK2
 err2 NOT INSIDE INST_DIOMK2
}

Q: 
SP_EN_9 {
@ SP line-end (vertical width <= 0.296um between two consecutive 90-90 degree corners with both sides length >= 0.09um) enclosure of AA (AA vertical edge extend 1/2 GT width) in S/D direction, except INST region >= 0.079um
 chk_sp = CONVEX EDGE SP ANGLE1 == 90 LENGTH1 >= 0.09 ANGLE2 == 90 LENGTH2 >= 0.09 WITH LENGTH <= 0.296
 err1 = ENC edge_gate_AA_all_v_edges chk_sp < 0.079 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err1 NOT INSIDE INST
}

//V0

Q: 
V0_EN_17a_ME {
@ V0 enclosure by M1 (short side of M1 width > 0.046um and <= 0.056um) for two opposite sides with the other two sides >= 0.009um when V0 interact with M0G (width = 0.05um), for 9T standard cell design, except INST region >= 0.025um
 err1_TMP = RECTANGLE ENCLOSURE via_V0_17a M1 ABUT<90 SINGULAR
 GOOD 0.009 0.025 OPPOSITE 0.009 0.025 OPPOSITE
 err1 = err1_TMP NOT OUTSIDE PowerRail_Area_90T
 err1 NOT INSIDE INST
}

Q: 
V0_EN_17a1_ME {
@ V0 enclosure by M1 (short side of M1 width > 0.046um and <= 0.056um) for two opposite sides with the other two sides >= 0.006um when V0 interact with M0G (width = 0.05um), for 7.5T standard cell design, except INST region >= 0.025um
 err1_TMP = RECTANGLE ENCLOSURE via_V0_17a M1 ABUT<90 SINGULAR
 GOOD 0.006 0.025 OPPOSITE 0.006 0.025 OPPOSITE
 err1 = err1_TMP NOT OUTSIDE PowerRail_Area_75T
 err1 NOT INSIDE INST
}

Q: 
V0_EN_27_ME {
@ V0 enclosure by M1 edge at opposite side of M1 inner vertex (projection space between V0 and the M1 inner vertex = 0~ 0.012um
@ the inner vertex with width = 0.035~0.046um and jog height >= 0.004um), except INST region >= 0.003um
 tar_enc1 = M1 TOUCH EDGE (ENC V0N [M1] < 0.003 ABUT<90 OPPOSITE)
 tar_enc2 = M1 TOUCH EDGE (INT tar_enc1 [M1_convex_lt_two_edges] >= 0.035 <= 0.046 PARA ONLY OPPOSITE)
 tar_corner = EXT tar_enc2 (LENGTH M1_convex_lt_two_edges >= 0.004) < 0.001 ABUT INTERSECTING ONLY REGION

 tar_enc3 = tar_enc2 TOUCH EDGE tar_corner
 tar_enc4 = M1 TOUCH EDGE tar_corner
 tar_wide = INT tar_enc3 M1 >= 0.035 <= 0.046 PARA ONLY OPPOSITE REGION
 tar_side = M1 TOUCH EDGE (INT tar_enc3 [M1] >= 0.035 <= 0.046 PARA ONLY OPPOSITE)

 tar_vias = V0N WITH EDGE (ENC [V0N] tar_side < 0.003 ABUT<90 OPPOSITE)
 tar_vias_corner = tar_enc4 COIN EDGE (M1 ENCLOSE tar_vias)
 tar_vias_apart = EXT [tar_vias] tar_vias_corner < 0.012 ABUT<90 OPPOSITE EXTENDED 0.046-V0_MiniWidth+GLOBAL_TOLERANCE MEASURE ALL
 tar_vias_cross = SIZE ((tar_vias NOT WITH EDGE tar_vias_apart) NOT INSIDE tar_wide) BY 0.046-V0_MiniWidth+GLOBAL_TOLERANCE
 tar_vias_touch = SIZE (((tar_vias NOT WITH EDGE tar_vias_apart) INSIDE tar_wide) WITH EDGE (tar_vias COIN EDGE (tar_wide NOT COIN EDGE M1))) BY 0.046-V0_MiniWidth+GLOBAL_TOLERANCE
 err1 = tar_vias WITH EDGE tar_vias_apart
 err2 = tar_vias INTERACT (tar_vias_cross INTERACT (tar_vias_cross AND tar_corner))
 err3 = tar_vias INTERACT (tar_vias_touch INTERACT (tar_vias_touch AND tar_corner))
 err1 NOT INSIDE INST
 err2 NOT INSIDE INST
 err3 NOT INSIDE INST
}

Q: 
V0_EN_1 {
@ V0 must be fully covered by (M0 NOT M0C) or M0G, and must follow V0.EN.2, V0.EN.2a, or V0.EN.3, or V0.EN.4, or (V0.EN.5a and V0.EN.5b), or V0.EN.6, or V0.EN.7 as below
@ DRC waive the violation either V0/M0 or V0/M0G pass the enclosure rules when V0 INTERACT (M0 AND M0G)
 err1 = (V0N NOT INSIDE M0_NOT_M0C) NOT INSIDE M0G
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the V0.EN.2 derivations
 met_V0_2_gen = COPY M0_NOT_M0C_040
 via_V0_2_gen = V0N INTERACT met_V0_2_gen
 via_V0_2_bad = RECTANGLE ENCLOSURE via_V0_2_gen M0_NOT_M0C ABUT<90 SINGULAR
 GOOD 0.004 OPPOSITE 0.014 OPPOSITE 0.004 OPPOSITE 0.014 OPPOSITE

 met_V0_2a_gen = COPY M0_NOT_M0C_042
 via_V0_2a_gen = V0N INTERACT met_V0_2a_gen
 via_V0_2a_bad = RECTANGLE ENCLOSURE via_V0_2a_gen M0_NOT_M0C ABUT<90 SINGULAR
 GOOD 0.005 OPPOSITE 0.014 OPPOSITE 0.005 OPPOSITE 0.014 OPPOSITE
 via_V0_2_good = OR (via_V0_2_gen NOT via_V0_2_bad) (via_V0_2a_gen NOT via_V0_2a_bad)
//;end of the V0.EN.2 derivations

Q: 
V0_EN_2 {
@ V0.EN.2: V0 enclosure by (M0 NOT M0C) (M0 width = 0.04um) for two opposite sides with other two sides = 0.004um, except INST region >= 0.014um
@ V0.EN.2a: V0 enclosure by (M0 NOT M0C) (M0 width = 0.042um) for two opposite sides with other two sides = 0.005um, except INSTregion >= 0.014um
 err1 = (OR via_V0_2_bad via_V0_2a_bad) NOT (OR via_V0_3_good via_V0_4_good via_V0_5a_good via_V0_5b_good via_V0_6_good via_V0_7_good)
 err1 NOT INSIDE INST
}

//;beginning of the V0.EN.3 derivations
 met_V0_3_gen = COPY M0_NOT_M0C_054
 via_V0_3_gen = V0N INTERACT met_V0_3_gen
 via_V0_3_bad = RECTANGLE ENCLOSURE via_V0_3_gen M0_NOT_M0C ABUT<90 SINGULAR
 GOOD 0.011 OPPOSITE 0.017 OPPOSITE 0.011 OPPOSITE 0.017 OPPOSITE
 via_V0_3_good = via_V0_3_gen NOT via_V0_3_bad
//;end of the V0.EN.3 derivations

Q: 
V0_EN_3 {
@ V0 enclosure by (M0 NOT M0C) (M0 width = 0.054um) for two opposite sides with other two sides = 0.011um. >= 0.017um
 err1 = via_V0_3_bad NOT (OR via_V0_2_good via_V0_4_good via_V0_5a_good via_V0_5b_good via_V0_6_good via_V0_7_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the V0.EN.4 derivations
 met_V0_4_gen = M0G_WIDTH_040 OR M0G_040
 via_V0_4_gen = V0N INTERACT met_V0_4_gen
 via_V0_4_bad = RECTANGLE ENCLOSURE via_V0_4_gen M0G ABUT<90 SINGULAR
 GOOD 0.004 OPPOSITE 0.011 OPPOSITE 0.004 OPPOSITE 0.011 OPPOSITE
 via_V0_4_good = via_V0_4_gen NOT via_V0_4_bad
//;end of the V0.EN.4 derivations

Q: 
V0_EN_4 {
@ V0 enclosure by M0G (width = 0.04um) for two opposite sides with other two sides = 0.004um, except INST region >= 0.011um
 err1 = via_V0_4_bad NOT (OR via_V0_2_good via_V0_3_good via_V0_5a_good via_V0_5b_good via_V0_6_good via_V0_7_good)
 err1 NOT INSIDE INST
}

//;beginning of the V0.EN.5a derivations
 met_V0_5a_gen = COPY M0G_W050_L050  //; only check 50x50 M0G
 via_V0_5a_gen = V0N INTERACT met_V0_5a_gen
 via_V0_5a_bad = RECTANGLE ENCLOSURE via_V0_5a_gen M0G ABUT<90 SINGULAR
 GOOD 0 0.008 OPPOSITE 0 0.008 OPPOSITE
 via_V0_5a_good = via_V0_5a_gen NOT via_V0_5a_bad
//;end of the V0.EN.5a derivations

Q: 
V0_EN_5a {
@ V0 enclosure by M0G (width = 0.05um) for two opposite sides with other two sides >= 0um. >= 0.008um
 err1 = via_V0_5a_bad NOT (OR via_V0_2_good via_V0_3_good via_V0_4_good via_V0_5b_good via_V0_6_good via_V0_7_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the V0.EN.5b derivations
 met_V0_5b_gen = OR M0G_W050_L057 M0G_W050_L058 M0G_W050_L060 M0G_W050_L061
 via_V0_5b_gen = V0N INTERACT met_V0_5b_gen
 via_V0_5b_bad = RECTANGLE ENCLOSURE via_V0_5b_gen M0G ABUT<90 SINGULAR
 GOOD 0.009 OPPOSITE 0.011 OPPOSITE 0.009 OPPOSITE 0.011 OPPOSITE
 via_V0_5b_good = via_V0_5b_gen NOT via_V0_5b_bad
//;end of the V0.EN.5b derivations

Q: 
V0_EN_5b {
@ V0 enclosure by M0G (width = 0.05um, length = 0.057~0.058/0.06~0.061um) for two opposite sides with other two sides >= 0.009um. >= 0.011um
 err1 = via_V0_5b_bad NOT (OR via_V0_2_good via_V0_3_good via_V0_4_good via_V0_5a_good via_V0_6_good via_V0_7_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the V0.EN.6 derivations
 met_V0_6_gen = M0G_WIDTH_060 OR M0G_060
 via_V0_6_gen = V0N INTERACT met_V0_6_gen
 via_V0_6_bad = RECTANGLE ENCLOSURE via_V0_6_gen M0G ABUT<90 SINGULAR
 GOOD 0.014 OPPOSITE 0.029 OPPOSITE 0.014 OPPOSITE 0.029 OPPOSITE
 via_V0_6_good = via_V0_6_gen NOT via_V0_6_bad
//;end of the V0.EN.6 derivations

Q: 
V0_EN_6 {
@ V0 enclosure by M0G (width = 0.06um) for two opposite sides with other two sides >= 0.014um. >= 0.029um
 err1 = via_V0_6_bad NOT (OR via_V0_2_good via_V0_3_good via_V0_4_good via_V0_5a_good via_V0_5b_good via_V0_7_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the V0.EN.7 derivations
 met_V0_7_gen = copy M0G_WIDTH_051_To_055
 via_V0_7_gen = V0N INTERACT met_V0_7_gen
 via_V0_7_bad = RECTANGLE ENCLOSURE via_V0_7_gen M0G ABUT<90 SINGULAR
 GOOD 0.009 OPPOSITE 0.028 OPPOSITE 0.009 OPPOSITE 0.028 OPPOSITE
 via_V0_7_good = via_V0_7_gen NOT via_V0_7_bad
//;end of the V0.EN.7 derivations

Q: 
V0_EN_7 {
@ V0 enclosure by M0G (width = 0.051~0.053/0.054~0.055um) for two opposite sides with the other two sides >= 0.009um. >= 0.028um
 err1 = via_V0_7_bad NOT (OR via_V0_2_good via_V0_3_good via_V0_4_good via_V0_5a_good via_V0_5b_good via_V0_6_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

#IFDEF DFM_RULES_PRIORITY_1 YES
Q: 
V0_EN_1_DFM1 {
@ Recommended square V0 enclosure of M0 (width = 0.04/0.042/0.054um) is defined by V0.EN.2.DFM/V0.EN.3.DFM respectively
@ Recommended square V0 enclosure of M0G (width = 0.04/0.05um) is defined by V0.EN.4.DFM/V0.EN.5.DFM respectively
@ DRC waive the violation either V0/M0 or V0/M0G pass the enclosure rules whenV0 INTERACT (M0 AND M0G)
 err1 = (V0N NOT INSIDE M0) NOT INSIDE M0G
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the V0.EN.2.DFM derivations
 met_V0_2_R = OR M0_NOT_M0C_040 M0_NOT_M0C_042
 via_V0_2_R = V0N INTERACT met_V0_2_R
 via_V0_2_R_bad = RECTANGLE ENCLOSURE via_V0_2_R M0_NOT_M0C ABUT<90 SINGULAR
 GOOD 0.004 OPPOSITE 0.020 OPPOSITE 0.004 OPPOSITE 0.020 OPPOSITE
 via_V0_2_R_good = via_V0_2_R NOT via_V0_2_R_bad
//;end of the V0.EN.2.DFM derivations

Q: 
V0_EN_2_DFM1 {
@ Recommended square V0 enclosure by (M0 NOT M0C) which M0 width = 0.04/0.042um for two opposite sides with the other two sides >= 0.004um. >= 0.020um
 err1 = via_V0_2_R_bad NOT (OR via_V0_3_R_good via_V0_4_R_good via_V0_5_R_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the V0.EN.3.DFM derivations
 met_V0_3_R = COPY M0_NOT_M0C_054
 via_V0_3_R = V0N INTERACT met_V0_3_R
 via_V0_3_R_bad = RECTANGLE ENCLOSURE via_V0_3_R M0_NOT_M0C ABUT<90 SINGULAR
 GOOD 0.011 OPPOSITE 0.025 OPPOSITE 0.011 OPPOSITE 0.025 OPPOSITE
 via_V0_3_R_good = via_V0_3_R NOT via_V0_3_R_bad
//;end of the V0.EN.3.DFM derivations

Q: 
V0_EN_3_DFM1 {
@ Recommended square V0 enclosure by (M0 NOT MOC) which M0 width = 0.054um for two opposite sides with the other two sides >= 0.011um. >= 0.025um
 err1 = via_V0_3_R_bad NOT (OR via_V0_2_R_good via_V0_4_R_good via_V0_5_R_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the V0.EN.4.DFM derivations
 met_V0_4_R = M0G_WIDTH_040 OR M0G_040
 via_V0_4_R = V0N INTERACT met_V0_4_R
 via_V0_4_R_bad = RECTANGLE ENCLOSURE via_V0_4_R M0G ABUT<90 SINGULAR
 GOOD 0.004 OPPOSITE 0.018 OPPOSITE 0.004 OPPOSITE 0.018 OPPOSITE
 via_V0_4_R_good = via_V0_4_R NOT via_V0_4_R_bad
//;end of the V0.EN.4.DFM derivations

Q: 
V0_EN_4_DFM1 {
@ Recommended square V0 enclosure by M0G with width = 0.04um for two opposite sides with the other two sides >= 0.004um. >= 0.018um
 err1 = via_V0_4_R_bad NOT (OR via_V0_2_R_good via_V0_3_R_good via_V0_5_R_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the V0.EN.5.DFM derivations
 met_V0_5_R = M0G_WIDTH_050 OR M0G_050
 via_V0_5_R = V0N INTERACT met_V0_5_R
 via_V0_5_R_bad = RECTANGLE ENCLOSURE via_V0_5_R M0G ABUT<90 SINGULAR
 GOOD 0.009 OPPOSITE 0.005 OPPOSITE 0.009 OPPOSITE 0.005 OPPOSITE
 via_V0_5_R_good = via_V0_5_R NOT via_V0_5_R_bad
//;end of the V0.EN.5.DFM derivations

Q: 
V0_EN_5_DFM1 {
@ Recommended square V0 enclosure by M0G with width = 0.05um for two opposite sides with the other two sides >= 0.009um. >= 0.005um
 err1 = via_V0_5_R_bad NOT (OR via_V0_2_R_good via_V0_3_R_good via_V0_4_R_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
V0_EN_9_DFM1 {
@ Recommended square V0 enclosure by M1 is defined by either V0.EN.10.DFM or V0.EN.13.DFM or V0.EN.13a.DFM
 err1 = V0N NOT INSIDE M1
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the V0.EN.10.DFM derivations
 met_V0_10_R = COPY M1
 via_V0_10_R = V0N INTERACT met_V0_10_R
 via_V0_10_R_bad = RECTANGLE ENCLOSURE via_V0_10_R M1 ABUT<90 SINGULAR
 GOOD 0.020 0.020 0.020 0.020 OPPOSITE
 via_V0_10_R_good = via_V0_10_R NOT via_V0_10_R_bad
//;end of the V0.EN.10.DFM derivations

Q: 
V0_EN_10_DFM1 {
@ Recommended square V0 enclosure by M1 for all sides to avoid high Rc >= 0.02um
 err1 = via_V0_10_R_bad NOT (OR via_V0_13_R_good via_V0_13a_R_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the V0.EN.13.DFM derivations
 met_V0_13_R = M1 WITH WIDTH < 0.05
 via_V0_13_R = V0N INTERACT met_V0_13_R
 via_V0_13_R_bad = RECTANGLE ENCLOSURE via_V0_13_R M1 ABUT<90 SINGULAR
 GOOD 0.007 0.050 OPPOSITE 0.007 0.050 OPPOSITE
 via_V0_13_R_good = via_V0_13_R NOT via_V0_13_R_bad
//;end of the V0.EN.13.DFM derivations

Q: 
V0_EN_13_DFM1 {
@ Recommended square V0 enclosure by M1(width < 0.05um) for two opposite sides with the other two sides >= 0.007um. >= 0.05um
 err1 = via_V0_13_R_bad NOT (OR via_V0_10_R_good via_V0_13a_R_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the V0.EN.13a.DFM derivations
 met_V0_13a_R = COPY M1
 via_V0_13a_R = (V0N INTERACT met_V0_13a_R) NOT INSIDE met_V0_13_R
 via_V0_13a_R_bad = RECTANGLE ENCLOSURE via_V0_13a_R M1 ABUT<90 SINGULAR
 GOOD 0.009 0.050 OPPOSITE 0.009 0.050 OPPOSITE
 via_V0_13a_R_good = via_V0_13a_R NOT via_V0_13a_R_bad
//;end of the V0.EN.13a.DFM derivations

Q: 
V0_EN_13a_DFM1 {
@ Recommended square V0 enclosure by M1(width >= 0.05um) for two opposite sides with the other two sides >= 0.009um. >= 0.05um
 err1 = via_V0_13a_R_bad NOT (OR via_V0_10_R_good via_V0_13_R_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
#ENDIF

Q: 
V0_EN_8 {
@ V0 must be fully covered by M1, and must follow V0.EN.9, or V0.EN.11, or V0.EN.12, or V0.EN.13, or V0.EN.14, or V0.EN.15, or V0.EN.16c, or (V0.EN.17a and V0.EN.17b), or V0.EN.18, or (V0.EN.19a and V0.EN.19b), or V0.EN.20, or (V0.EN.21a and V0.EN.21b), or V0.EN.22, or V0.EN.23 as below
 err1 = V0N NOT M1
 err1 NOT INSIDE SealR_NOT_BULK
}

VARIABLE V0_EN_9_val 0.015

//;beginning of the V0.EN.10 derivations
 via_V0_10_bad = RECTANGLE ENCLOSURE V0N M1 ABUT<90 SINGULAR
 GOOD V0_EN_9_val V0_EN_9_val V0_EN_9_val V0_EN_9_val OPPOSITE
 via_V0_10_good = V0N NOT via_V0_10_bad
//;end of the V0.EN.10 derivations

Q: 
V0_EN_9 {
@ V0 enclosure by M1 for all sides >= 0.015um
 err1 = COPY (V0N NOT M1)
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the V0.EN.11, V0.EN.12 derivations
 met_V0_11_12_t = M1 WITH WIDTH == 0.032
 met_V0_11_12 = met_V0_11_12_t INTERACT V0N
 met_V0_11_12_side = INT [met_V0_11_12] == 0.032 ABUT<90 OPPOSITE
 via_V0_11_12_TMP = V0N NOT OUTSIDE met_V0_11_12
 via_V0_11_12 = via_V0_11_12_TMP NOT via_V0_10_good

 v0_11_12_non_iso_end = via_V0_11_12 NOT TOUCH EDGE met_V0_11_12_side
 v0_11_12_non_iso_side = via_V0_11_12 TOUCH EDGE met_V0_11_12_side
 v0_11_12_non_iso_s1 = EXT [v0_11_12_non_iso_end] M1 <= V0_EN_11_denseV0_LengthDirection ABUT<90 OPPOSITE MEASURE ALL
 v0_11_12_non_iso_s2 = EXT [v0_11_12_non_iso_side] M1 <= V0_EN_11_denseV0_WidthDirection ABUT<90 OPPOSITE EXTENDED V0_EN_11_denseV0_LengthDirection+GLOBAL_TOLERANCE MEASURE ALL
 v0_11_12_non_iso_via = via_V0_11_12 WITH EDGE (OR EDGE v0_11_12_non_iso_s1 v0_11_12_non_iso_s2)
 v0_11_12_iso_via = via_V0_11_12 NOT v0_11_12_non_iso_via

//;V0_EN_11 non_iso via
 v0_11_bad_1 = RECTANGLE ENCLOSURE v0_11_12_non_iso_via M1 ABUT<90 SINGULAR
 GOOD 0 V0_EN_11_E1E2 OPPOSITE 0 V0_EN_11_E1E2 OPPOSITE
 v0_11_bad_2 = RECTANGLE ENCLOSURE v0_11_12_non_iso_via M1 ABUT<90 SINGULAR
 GOOD 0 0.035 OPPOSITE 0 0.044 OPPOSITE
 GOOD 0 0.036 OPPOSITE 0 0.043 OPPOSITE
 GOOD 0 0.037 OPPOSITE 0 0.042 OPPOSITE
 GOOD 0 0.038 OPPOSITE 0 0.041 OPPOSITE
 GOOD 0 0.039 OPPOSITE 0 0.040 OPPOSITE
 v0_11_good = v0_11_12_non_iso_via NOT (OR v0_11_bad_1 v0_11_bad_2)

//;V0_EN_12 iso via
 v0_12_bad_1 = RECTANGLE ENCLOSURE v0_11_12_iso_via M1 ABUT<90 SINGULAR
 GOOD 0 V0_EN_12_E1E2 OPPOSITE 0 V0_EN_12_E1E2 OPPOSITE
 v0_12_bad_2 = RECTANGLE ENCLOSURE v0_11_12_iso_via M1 ABUT<90 SINGULAR
 GOOD 0 0.030 OPPOSITE 0 0.039 OPPOSITE
 GOOD 0 0.031 OPPOSITE 0 0.038 OPPOSITE
 GOOD 0 0.032 OPPOSITE 0 0.037 OPPOSITE
 GOOD 0 0.033 OPPOSITE 0 0.036 OPPOSITE
 GOOD 0 0.034 OPPOSITE 0 0.035 OPPOSITE
 v0_12_good = v0_11_12_iso_via NOT (OR v0_12_bad_1 v0_12_bad_2)

 via_V0_11_12_bad = OR v0_11_bad_1 v0_11_bad_2 v0_12_bad_1 v0_12_bad_2
//;end of the V0.EN.11, V0.EN.12 derivations

via_V0_11_12_good = OR v0_11_good v0_12_good

VARIABLE V0_EN_11_E1E2 0.035
VARIABLE V0_EN_12_E1E2 0.030
VARIABLE V0_EN_11_val 0.079
VARIABLE V0_EN_12_val 0.069
VARIABLE V0_EN_11_denseV0_LengthDirection 0.129
VARIABLE V0_EN_11_denseV0_WidthDirection 0.089

Q: 
V0_EN_11 {
@ Total V0 enclosure (E1+E2) by M1 (short side of M1 width = 0.032um, both two opposite sides (E1/E2) >= 0.035um) with the other two sides >= 0um, except INST region >= 0.079um
@ When meet either one of below conditions:
@ 1. Space between V0 and metal in metal length direction <= 0.129um
@ 2. Space between V0 and metal in metal width direction <= 0.089um
 err1 = COPY v0_11_bad_1
 err2 = COPY v0_11_bad_2
 err1 NOT INSIDE INST
 err2 NOT INSIDE INST
}

Q: 
V0_EN_12 {
@ Total enclosure (E1+E2) by M1 (short side of M1 width = 0.032um, both two opposite sides (E1/E2) >= 0.03um) with the other two sides >= 0um for isolated V0 condition >= 0.069um
@ Isolated V0 condition:
@ Space between V0 and metal in metal length direction > 0.129um and in metal width direction > 0.089um
 err1 = COPY v0_12_bad_1
 err2 = COPY v0_12_bad_2
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the V0.EN.13 ~ V0.EN.15 derivations
 met_V0_13_14_15 = M1 WITH WIDTH > 0.032 <= 0.046
 via_V0_13_14_15 = V0N INTERACT met_V0_13_14_15

 via_V0_13_14_15_bad = RECTANGLE ENCLOSURE via_V0_13_14_15 M1 ABUT<90 SINGULAR
 GOOD 0.003 0.032 OPPOSITE 0.003 0.047 OPPOSITE
 GOOD 0.0 0.036 OPPOSITE 0.0 0.043 OPPOSITE
 GOOD 0.0 0.039 OPPOSITE 0.0 0.039 OPPOSITE
 via_V0_13_14_15_good = via_V0_13_14_15 NOT via_V0_13_14_15_bad
 via_V0_10_11_12_13_14_15_good = OR via_V0_10_good via_V0_11_12_good via_V0_13_14_15_good
//;end of the V0.EN.13 ~ V0.EN.15 derivations

Q: 
V0_EN_13_14_15 {
@ V0.EN.13: V0 enclosure by M1 (short side of M1 width > 0.032um and <= 0.046um) for opposite side >= 0.032um with the other two sides >= 0.003um. >= 0.047um
@ V0.EN.14: V0 enclosure by M1 (short side of M1 width > 0.032um and <= 0.046um) for opposite side >= 0.036um with the other two sides >= 0um. >= 0.043um
@ V0.EN.15: V0 enclosure by M1 (short side of M1 width > 0.032um and <= 0.046um) for two opposite sides with the other two sides >= 0um. >= 0.039um
 err1 = via_V0_13_14_15_bad NOT (OR via_V0_10_good via_V0_11_12_good via_V0_16b_16c_16d_good)  //;exclude V0.EN.16 (V0.EN.16a can't be excluded)
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the V0.EN.16a derivations
 met_V0_16a = M1 WITH WIDTH > 0.032 <= 0.046
 via_V0_16a_raw = V0N INTERACT met_V0_16a
 via_V0_16a_edges = INT [met_V0_16a] > 0.032 <= 0.046 OPPOSITE
 via_V0_16a_met_space_match_1 = EXT via_V0_16a_edges M1 >= 0.058 < 0.063 OPPOSITE REGION
 via_V0_16a_met_space_match_2 = via_V0_16a_met_space_match_1 ENCLOSE RECTANGLE 0.001 0.113 ORTHOGONAL ONLY
 via_V0_16a_met_space_match = via_V0_16a_edges COIN EDGE via_V0_16a_met_space_match_2
 via_V0_16a = via_V0_16a_raw INTERACT (met_V0_16a WITH EDGE via_V0_16a_met_space_match)
 via_V0_16a_bad_edge = ENC [via_V0_16a] via_V0_16a_met_space_match < 0.003 ABUT<90 OPPOSITE
 via_V0_16a_bad = via_V0_16a WITH EDGE via_V0_16a_bad_edge

 via_V0_16a_good = via_V0_16a NOT via_V0_16a_bad
//;end of the V0.EN.16a derivations

Q: 
V0_EN_16a {
@ V0 enclosure by M1 in adjacent S1 side, when
@ 1. 0.032um < short side of M1 width <= 0.046
@ 2. 0.058um <= S1 < 0.063um, PRL >= 0.113um >= 0.003um
 err1 = via_V0_16a_bad NOT (OR via_V0_10_good via_V0_11_12_good) //;additional restriction, so V0_13_14_15_16a_16c can't be excluded
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the V0.EN.16_c derivations
 met_V0_16_b_c_d = M1 WITH WIDTH == 0.036
 met_V0_16_b_c_d_edges = M1 COIN EDGE (INT [met_V0_16_b_c_d] == 0.036 OPPOSITE)
 via_V0_16_b_c_d_raw = V0N INTERACT met_V0_16_b_c_d
 met_V0_16_b_c_d_meet_s = met_V0_16_b_c_d_edges COIN EDGE (EXT (M1) >= 0.058 < 0.063 ABUT<90 OPPOSITE)
 met_V0_16_b_c_d_meet = (INT met_V0_16_b_c_d_meet_s == 0.036 OPPOSITE REGION) OR (INT met_V0_16_b_c_d_meet_s M1 == 0.036 OPPOSITE REGION)
 via_V0_16_b_c_d = via_V0_16_b_c_d_raw INTERACT met_V0_16_b_c_d_meet

 via_V0_16b_16c_16d_bad = RECTANGLE ENCLOSURE via_V0_16_b_c_d M1 ABUT<90 SINGULAR
 GOOD 0.002 0.032 OPPOSITE 0.002 0.047 OPPOSITE

 via_V0_16b_16c_16d_good = via_V0_16_b_c_d NOT via_V0_16b_16c_16d_bad //; 0.002 is minimum requirement
//;end of the V0.EN.16_c derivations

Q: 
V0_EN_16c {
@ V0 enclosure by M1 at least one side (short side of M1 width = 0.036um, space < 0.058um or >= 0.063um) for the opposite side >= 0.032um and the other two sides >= 0.002um. >= 0.047um
 err1 = via_V0_16b_16c_16d_bad NOT via_V0_10_11_12_13_14_15_good  //;V0.EN.16a can't be excluded
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the V0.EN.17 derivations
 met_V0_17 = M1 WITH WIDTH > 0.046 <= 0.056
 via_V0_17 = V0N INTERACT met_V0_17
 via_V0_17a = via_V0_17 INTERACT M0G_050_ALL
 via_V0_17b = via_V0_17 NOT via_V0_17a

 via_V0_17a_bad_1 = RECTANGLE ENCLOSURE via_V0_17a M1 ABUT<90 SINGULAR
 GOOD V0_EN_9_val V0_EN_9_val V0_EN_9_val V0_EN_9_val OPPOSITE
 GOOD 0.006 V0_EN_17a_val OPPOSITE 0.006 V0_EN_17a_val OPPOSITE
 via_V0_17b_bad_1 = RECTANGLE ENCLOSURE via_V0_17b M1 ABUT<90 SINGULAR
 GOOD V0_EN_9_val V0_EN_9_val V0_EN_9_val V0_EN_9_val OPPOSITE
 GOOD 0.009 V0_EN_17b_val OPPOSITE 0.009 V0_EN_17b_val OPPOSITE

 via_V0_17a_bad = via_V0_17a_bad_1 NOT via_V0_18_good
 via_V0_17b_bad = via_V0_17b_bad_1 NOT via_V0_18_good
 via_V0_17a_good = via_V0_17a NOT via_V0_17a_bad
 via_V0_17b_good = via_V0_17b NOT via_V0_17b_bad
  via_V0_17a_17b_good = OR via_V0_17a_good via_V0_17b_good
//;end of the V0.EN.17 derivations

//;beginning of the V0.EN.18 derivations
 met_V0_18 = M1 WITH WIDTH == 0.056
 via_V0_18 = V0N INTERACT met_V0_18
 via_V0_18a = via_V0_18 INTERACT M0G_050_ALL
 via_V0_18b = via_V0_18 NOT via_V0_18a

 via_V0_18_bad_1 = RECTANGLE ENCLOSURE via_V0_18a M1 ABUT<90 SINGULAR
 GOOD V0_EN_9_val V0_EN_9_val V0_EN_9_val V0_EN_9_val OPPOSITE
 GOOD 0.006 V0_EN_17a_val OPPOSITE 0.006 V0_EN_17a_val OPPOSITE  //;exclude good V0.EN.17a
 GOOD 0.012 V0_EN_18_val OPPOSITE 0.012 V0_EN_18_val OPPOSITE
 via_V0_18_bad_2 = RECTANGLE ENCLOSURE via_V0_18b M1 ABUT<90 SINGULAR
 GOOD V0_EN_9_val V0_EN_9_val V0_EN_9_val V0_EN_9_val OPPOSITE
 GOOD 0.009 V0_EN_17b_val OPPOSITE 0.009 V0_EN_17b_val OPPOSITE  //;exclude good V0.EN.17b
 GOOD 0.012 V0_EN_18_val OPPOSITE 0.012 V0_EN_18_val OPPOSITE

 via_V0_18_bad = OR via_V0_18_bad_1 via_V0_18_bad_2
 via_V0_18_good_1 = via_V0_18a NOT via_V0_18_bad_1
 via_V0_18_good_2 = via_V0_18b NOT via_V0_18_bad_2
 via_V0_18_good = OR via_V0_18_good_1 via_V0_18_good_2
//;end of the V0.EN.18 derivations

VARIABLE V0_EN_17a_val 0.023
VARIABLE V0_EN_17b_val 0.024
VARIABLE V0_EN_18_val 0.023

Q: 
V0_EN_17a {
@ V0 enclosure by M1 (short side of M1 width > 0.046um and <= 0.056um) for two opposite sides with the other two sides >= 0.006um when V0 interact with M0G (width = 0.05um) >= 0.023um
 err1 = via_V0_17a_bad NOT (OR via_V0_10_11_12_13_14_15_good via_V0_16b_16c_16d_good via_V0_18_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
V0_EN_17b {
@ V0 enclosure by M1 (short side of M1 width > 0.046um and <= 0.056um) for two opposite sides with the other two sides >= 0.009um, except V0 interact with M0G (width = 0.05um) and INST region >= 0.024um
 err1 = via_V0_17b_bad NOT (OR via_V0_10_11_12_13_14_15_good via_V0_16b_16c_16d_good via_V0_18_good)
 err1 NOT INSIDE INST
}

Q: 
V0_EN_18 {
@ V0 enclosure by M1 (short side of M1 width = 0.056um) for two opposite sides with the other two sides = 0.012um. >= 0.023um
 err1 = via_V0_18_bad NOT (OR via_V0_10_11_12_13_14_15_good via_V0_16b_16c_16d_good via_V0_17a_17b_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

//;V0.EN.19a/19b derivations
 met_V0_19 = M1 WITH WIDTH > 0.056 <= 0.090
 via_V0_19 = V0N INTERACT met_V0_19

//;beginning of the V0.EN.19a derivations
 via_V0_19a = via_V0_19 INTERACT M0G_050_ALL
 via_V0_19a_bad = RECTANGLE ENCLOSURE via_V0_19a M1 ABUT<90 SINGULAR
 GOOD V0_EN_9_val V0_EN_9_val V0_EN_9_val V0_EN_9_val OPPOSITE
 GOOD 0.006 V0_EN_19a_val OPPOSITE 0.006 V0_EN_19a_val OPPOSITE
 via_V0_19a_good = via_V0_19a NOT via_V0_19a_bad
//;end of the V0.EN.19a derivations

//;beginning of the V0.EN.19b derivations
 via_V0_19b = via_V0_19 NOT via_V0_19a
 via_V0_19b_bad = RECTANGLE ENCLOSURE via_V0_19b M1 ABUT<90 SINGULAR
 GOOD V0_EN_9_val V0_EN_9_val V0_EN_9_val V0_EN_9_val OPPOSITE
 GOOD 0.009 V0_EN_19b_val OPPOSITE 0.009 V0_EN_19b_val OPPOSITE
 via_V0_19b_good = via_V0_19b NOT via_V0_19b_bad
//;end of the V0.EN.19b derivations

via_V0_19a_19b_good = OR via_V0_19a_good via_V0_19b_good
via_V0_10_11_12_13_14_15_16_17_18 = OR via_V0_10_11_12_13_14_15_good via_V0_16b_16c_16d_good via_V0_17a_17b_good via_V0_18_good

VARIABLE V0_EN_19a_val 0.023
VARIABLE V0_EN_19b_val 0.024

Q: 
V0_EN_19a {
@ V0 enclosure by M1 (short side of M1 width > 0.056um and <= 0.09um) for two opposite sides with the other two sides >= 0.006um when V0 interact with M0G (width = 0.05um) >= 0.023um
 err1 = via_V0_19a_bad NOT (OR via_V0_10_11_12_13_14_15_16_17_18 via_V0_19b_good via_V0_20_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
V0_EN_19b {
@ V0 enclosure by M1 (short side of M1 width > 0.056um and <= 0.09um) for two opposite sides with the other two sides >= 0.009um, except V0 interact with M0G (width = 0.05um), INST region >= 0.024um
 err1 = via_V0_19b_bad NOT (OR via_V0_10_11_12_13_14_15_16_17_18 via_V0_19a_good via_V0_20_good)
 err1 NOT INSIDE INST
}

//;beginning of the V0.EN.20 derivations
 met_V0_20 = (M1 WITH WIDTH == 0.084) OR (M1 WITH WIDTH == 0.09)
 met_V0_20_l_side = met_V0_20 TOUCH EDGE ((INT [met_V0_20] == 0.084 OPPOSITE EXCLUDE SHIELDED) OR EDGE (INT [met_V0_20] == 0.09 OPPOSITE EXCLUDE SHIELDED))
 via_V0_20 = V0N INTERACT met_V0_20
//;end of the V0.EN.20 derivations

 
//;condition 1 
via_V0_20_enc_0.005 = ENC [via_V0_20] met_V0_20 == 0.005 ABUT<90 OPPOSITE
via_V0_20_ext_0.005_condition_1 = EXT (via_V0_20_enc_0.005) M1 >= 0.058+0.005 <= 0.062+0.005 ABUT<90 OPPOSITE EXTENDED 0.015 MEASURE ALL
via_V0_20_0.005_condition_1 = via_V0_20 WITH EDGE via_V0_20_ext_0.005_condition_1
via_V0_20_bad_0.005_condition_1 = RECTANGLE ENCLOSURE via_V0_20_0.005_condition_1 M1 ABUT<90 SINGULAR 
GOOD 0.005 0.059 OPPOSITE 0.005 0.059 OPPOSITE
//;condition 2 
via_V0_20_ext_0.005_condition_2_min = EXT [via_V0_20_enc_0.005] M1 >= 0.058+0.005 <= 0.062+0.005 ABUT<90 OPPOSITE EXTENDED 0.015 MEASURE ALL
via_V0_20_ext_0.005_condition_2_max = EXT [via_V0_20_enc_0.005] M1 >= 0.058+0.005 <= 0.062+0.005 ABUT<90 OPPOSITE EXTENDED 0.154 MEASURE ALL
via_V0_20_ext_0.005_condition_2_prl = via_V0_20_ext_0.005_condition_2_max NOT TOUCH EDGE (via_V0_20 TOUCH EDGE via_V0_20_ext_0.005_condition_2_min)
via_V0_20_0.005_condition_2 = via_V0_20 WITH EDGE via_V0_20_ext_0.005_condition_2_prl
via_V0_20_bad_0.005_condition_2 = RECTANGLE ENCLOSURE via_V0_20_0.005_condition_2 M1 ABUT<90 SINGULAR 
GOOD 0.005 0.059 OPPOSITE 0.005 0.059 OPPOSITE
via_V0_20_bad_0.005 = OR via_V0_20_bad_0.005_condition_1 via_V0_20_bad_0.005_condition_2
via_V0_20_good_0.005 = (OR via_V0_20_0.005_condition_1 via_V0_20_0.005_condition_2) NOT via_V0_20_bad_0.005
 
//;condition 1 
via_V0_20_enc_0.006 = ENC [via_V0_20] met_V0_20 == 0.006 ABUT<90 OPPOSITE
via_V0_20_ext_0.006_condition_1 = EXT (via_V0_20_enc_0.006) M1 >= 0.058+0.006 <= 0.062+0.006 ABUT<90 OPPOSITE EXTENDED 0.015 MEASURE ALL
via_V0_20_0.006_condition_1 = via_V0_20 WITH EDGE via_V0_20_ext_0.006_condition_1
via_V0_20_bad_0.006_condition_1 = RECTANGLE ENCLOSURE via_V0_20_0.006_condition_1 M1 ABUT<90 SINGULAR 
GOOD 0.006 0.059 OPPOSITE 0.006 0.059 OPPOSITE
//;condition 2 
via_V0_20_ext_0.006_condition_2_min = EXT [via_V0_20_enc_0.006] M1 >= 0.058+0.006 <= 0.062+0.006 ABUT<90 OPPOSITE EXTENDED 0.015 MEASURE ALL
via_V0_20_ext_0.006_condition_2_max = EXT [via_V0_20_enc_0.006] M1 >= 0.058+0.006 <= 0.062+0.006 ABUT<90 OPPOSITE EXTENDED 0.154 MEASURE ALL
via_V0_20_ext_0.006_condition_2_prl = via_V0_20_ext_0.006_condition_2_max NOT TOUCH EDGE (via_V0_20 TOUCH EDGE via_V0_20_ext_0.006_condition_2_min)
via_V0_20_0.006_condition_2 = via_V0_20 WITH EDGE via_V0_20_ext_0.006_condition_2_prl
via_V0_20_bad_0.006_condition_2 = RECTANGLE ENCLOSURE via_V0_20_0.006_condition_2 M1 ABUT<90 SINGULAR 
GOOD 0.006 0.059 OPPOSITE 0.006 0.059 OPPOSITE
via_V0_20_bad_0.006 = OR via_V0_20_bad_0.006_condition_1 via_V0_20_bad_0.006_condition_2
via_V0_20_good_0.006 = (OR via_V0_20_0.006_condition_1 via_V0_20_0.006_condition_2) NOT via_V0_20_bad_0.006
 
//;condition 1 
via_V0_20_enc_0.007 = ENC [via_V0_20] met_V0_20 == 0.007 ABUT<90 OPPOSITE
via_V0_20_ext_0.007_condition_1 = EXT (via_V0_20_enc_0.007) M1 >= 0.058+0.007 <= 0.062+0.007 ABUT<90 OPPOSITE EXTENDED 0.015 MEASURE ALL
via_V0_20_0.007_condition_1 = via_V0_20 WITH EDGE via_V0_20_ext_0.007_condition_1
via_V0_20_bad_0.007_condition_1 = RECTANGLE ENCLOSURE via_V0_20_0.007_condition_1 M1 ABUT<90 SINGULAR 
GOOD 0.007 0.059 OPPOSITE 0.007 0.059 OPPOSITE
//;condition 2 
via_V0_20_ext_0.007_condition_2_min = EXT [via_V0_20_enc_0.007] M1 >= 0.058+0.007 <= 0.062+0.007 ABUT<90 OPPOSITE EXTENDED 0.015 MEASURE ALL
via_V0_20_ext_0.007_condition_2_max = EXT [via_V0_20_enc_0.007] M1 >= 0.058+0.007 <= 0.062+0.007 ABUT<90 OPPOSITE EXTENDED 0.154 MEASURE ALL
via_V0_20_ext_0.007_condition_2_prl = via_V0_20_ext_0.007_condition_2_max NOT TOUCH EDGE (via_V0_20 TOUCH EDGE via_V0_20_ext_0.007_condition_2_min)
via_V0_20_0.007_condition_2 = via_V0_20 WITH EDGE via_V0_20_ext_0.007_condition_2_prl
via_V0_20_bad_0.007_condition_2 = RECTANGLE ENCLOSURE via_V0_20_0.007_condition_2 M1 ABUT<90 SINGULAR 
GOOD 0.007 0.059 OPPOSITE 0.007 0.059 OPPOSITE
via_V0_20_bad_0.007 = OR via_V0_20_bad_0.007_condition_1 via_V0_20_bad_0.007_condition_2
via_V0_20_good_0.007 = (OR via_V0_20_0.007_condition_1 via_V0_20_0.007_condition_2) NOT via_V0_20_bad_0.007
 
//;condition 1 
via_V0_20_enc_0.008 = ENC [via_V0_20] met_V0_20 == 0.008 ABUT<90 OPPOSITE
via_V0_20_ext_0.008_condition_1 = EXT (via_V0_20_enc_0.008) M1 >= 0.058+0.008 <= 0.062+0.008 ABUT<90 OPPOSITE EXTENDED 0.015 MEASURE ALL
via_V0_20_0.008_condition_1 = via_V0_20 WITH EDGE via_V0_20_ext_0.008_condition_1
via_V0_20_bad_0.008_condition_1 = RECTANGLE ENCLOSURE via_V0_20_0.008_condition_1 M1 ABUT<90 SINGULAR 
GOOD 0.008 0.059 OPPOSITE 0.008 0.059 OPPOSITE
//;condition 2 
via_V0_20_ext_0.008_condition_2_min = EXT [via_V0_20_enc_0.008] M1 >= 0.058+0.008 <= 0.062+0.008 ABUT<90 OPPOSITE EXTENDED 0.015 MEASURE ALL
via_V0_20_ext_0.008_condition_2_max = EXT [via_V0_20_enc_0.008] M1 >= 0.058+0.008 <= 0.062+0.008 ABUT<90 OPPOSITE EXTENDED 0.154 MEASURE ALL
via_V0_20_ext_0.008_condition_2_prl = via_V0_20_ext_0.008_condition_2_max NOT TOUCH EDGE (via_V0_20 TOUCH EDGE via_V0_20_ext_0.008_condition_2_min)
via_V0_20_0.008_condition_2 = via_V0_20 WITH EDGE via_V0_20_ext_0.008_condition_2_prl
via_V0_20_bad_0.008_condition_2 = RECTANGLE ENCLOSURE via_V0_20_0.008_condition_2 M1 ABUT<90 SINGULAR 
GOOD 0.008 0.059 OPPOSITE 0.008 0.059 OPPOSITE
via_V0_20_bad_0.008 = OR via_V0_20_bad_0.008_condition_1 via_V0_20_bad_0.008_condition_2
via_V0_20_good_0.008 = (OR via_V0_20_0.008_condition_1 via_V0_20_0.008_condition_2) NOT via_V0_20_bad_0.008

via_V0_20_good = OR via_V0_20_good_0.005 via_V0_20_good_0.006 via_V0_20_good_0.007 via_V0_20_good_0.008
via_V0_19_20_good = OR via_V0_19a_19b_good via_V0_20_good

via_V0_10_11_12_13_14_15_16_17_18_19 = OR via_V0_10_11_12_13_14_15_16_17_18 via_V0_19a_19b_good

Q: 
V0_EN_20 {
@ V0 enclosure by M1 (short side of M1 width = 0.084 or 0.09um) for two opposite sides, when
@ 1. M1 space: S < 0.058um or > 0.062um and the adjacent side enclosure 0.005 <= E <= 0.008um, with PRL > -0.015
@ 2. At most one M1 polygon (0.058um <= M1 space <= 0.062um, and the adjacent side enclosure 0.005 <= E <= 0.008um, -0.154um < PRL <= -0.015um) >= 0.059um
 err1_0.005 = via_V0_20_bad_0.005 NOT via_V0_10_11_12_13_14_15_16_17_18_19
 err1_0.005 NOT INSIDE SealR_NOT_BULK
 err1_0.006 = via_V0_20_bad_0.006 NOT via_V0_10_11_12_13_14_15_16_17_18_19
 err1_0.006 NOT INSIDE SealR_NOT_BULK
 err1_0.007 = via_V0_20_bad_0.007 NOT via_V0_10_11_12_13_14_15_16_17_18_19
 err1_0.007 NOT INSIDE SealR_NOT_BULK
 err1_0.008 = via_V0_20_bad_0.008 NOT via_V0_10_11_12_13_14_15_16_17_18_19
 err1_0.008 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the V0.EN.21 ~ V0.EN.23 derivations
 met_V0_21 = M1 WITH WIDTH > 0.09
 via_V0_21 = V0N INTERACT met_V0_21
 via_V0_21a = via_V0_21 INTERACT M0G_050_ALL
 via_V0_21b = via_V0_21 NOT via_V0_21a

 via_V0_21a_bad = RECTANGLE ENCLOSURE via_V0_21a M1 ABUT<90 SINGULAR
 GOOD V0_EN_9_val V0_EN_9_val V0_EN_9_val V0_EN_9_val OPPOSITE
 GOOD 0.015 V0_EN_21a_val OPPOSITE 0.015 V0_EN_21a_val OPPOSITE
 via_V0_21b_bad = RECTANGLE ENCLOSURE via_V0_21b M1 ABUT<90 SINGULAR
 GOOD V0_EN_9_val V0_EN_9_val V0_EN_9_val V0_EN_9_val OPPOSITE
 GOOD 0.014 V0_EN_21b_val OPPOSITE 0.014 V0_EN_21b_val OPPOSITE

via_V0_21a_good = via_V0_21a NOT via_V0_21a_bad
via_V0_21b_good = via_V0_21b NOT via_V0_21b_bad
//;end of the V0.EN.21 ~ V0.EN.23 derivations

VARIABLE V0_EN_21a_val 0.023
VARIABLE V0_EN_21b_val 0.024

Q: 
V0_EN_21a {
@ V0 enclosure by M1 (short side of M1 width > 0.09um) for two opposite sides with the other two sides >= 0.015um when V0 interact with M0G (width = 0.05um) >= 0.023um
 err1 = via_V0_21a_bad NOT (OR via_V0_10_11_12_13_14_15_16_17_18_19 via_V0_20_good via_V0_21b_good via_V0_22_23_good)  //;can't exclude
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
V0_EN_21b {
@ V0 enclosure by M1 (short side of M1 width > 0.09um) for two opposite sides with the other two sides >= 0.014um, except V0 interact with M0G (width = 0.05um) >= 0.024um
 err1 = via_V0_21b_bad NOT (OR via_V0_10_11_12_13_14_15_16_17_18_19 via_V0_20_good via_V0_21a_good via_V0_22_23_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the V0.EN.22 derivations
 met_V0_22 = met_V0_21 WITH WIDTH > 0.09 <= 0.2
 via_V0_22 = (V0N INTERACT met_V0_22) INTERACT M0G_050_ALL

 via_V0_22_bad = RECTANGLE ENCLOSURE via_V0_22 M1 ABUT<90 SINGULAR
 GOOD V0_EN_9_val V0_EN_9_val V0_EN_9_val V0_EN_9_val OPPOSITE
 GOOD 0.015 V0_EN_21a_val OPPOSITE 0.015 V0_EN_21a_val OPPOSITE  //;exclude V0_EN_21a
 GOOD 0.024 OPPOSITE 0.009 OPPOSITE V0_EN_22_val OPPOSITE V0_EN_22_val OPPOSITE
 GOOD 0.009 OPPOSITE 0.024 OPPOSITE V0_EN_22_val OPPOSITE V0_EN_22_val OPPOSITE

 via_V0_22_good = (via_V0_22 NOT via_V0_22_bad) NOT WITH EDGE (ENC [via_V0_22] M1 < 0.009 ABUT<90 SINGULAR)
//;beginning of the V0.EN.22 derivations

VARIABLE V0_EN_22_val 0.059
VARIABLE V0_EN_23_val 0.059

Q: 
V0_EN_22 {
@ V0 enclosure by M1 (short side of M1 width > 0.09um and <= 0.2um) for at least two adjacent edges with the other two sides >= 0.024um and >= 0.009um when V0 interact with M0G (width = 0.05um) >= 0.059um
 err1 = via_V0_22_bad NOT (OR via_V0_10_11_12_13_14_15_16_17_18_19 via_V0_20_good via_V0_21a_good via_V0_23_good)
 err2 = ENC (via_V0_22 NOT (OR via_V0_10_11_12_13_14_15_16_17_18_19 via_V0_20_good via_V0_21a_good via_V0_23_good)) M1 < 0.009 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the V0.EN.23 derivations
 met_V0_23 = met_V0_21 WITH WIDTH > 0.09 <= 0.2
 via_V0_23 = (V0N INTERACT met_V0_23) NOT INTERACT M0G_050_ALL

 via_V0_23_bad = RECTANGLE ENCLOSURE via_V0_23 M1 ABUT<90 SINGULAR
 GOOD V0_EN_9_val V0_EN_9_val V0_EN_9_val V0_EN_9_val OPPOSITE
 GOOD 0.014 V0_EN_21b_val OPPOSITE 0.014 V0_EN_21b_val OPPOSITE  //;exclude V0_EN_21b
 GOOD 0.025 OPPOSITE 0.009 OPPOSITE V0_EN_23_val OPPOSITE V0_EN_23_val OPPOSITE
 GOOD 0.009 OPPOSITE 0.025 OPPOSITE V0_EN_23_val OPPOSITE V0_EN_23_val OPPOSITE

 via_V0_23_good = (via_V0_23 NOT via_V0_23_bad) NOT WITH EDGE (ENC [via_V0_23] M1 < 0.009 ABUT<90 SINGULAR)
 via_V0_22_23_good = OR via_V0_22_good via_V0_23_good
//;beginning of the V0.EN.23 derivations

Q: 
V0_EN_23 {
@ V0 enclosure by M1 (short side of M1 width > 0.09um and <= 0.2um) for at least two adjacent edges with the other two sides >= 0.025um and >= 0.009um, except V0 interact with M0G (width = 0.05um) >= 0.059um
 err1 = via_V0_23_bad NOT (OR via_V0_10_11_12_13_14_15_16_17_18_19 via_V0_20_good via_V0_21b_good via_V0_22_good)
 err2 = ENC (via_V0_23 NOT (OR via_V0_10_11_12_13_14_15_16_17_18_19 via_V0_20_good via_V0_21b_good via_V0_22_good)) M1 < 0.009 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: 
V0_EN_24 {
@ V0 enclosure by M1 for two opposite sides (projection space between V0 and M1 inner vertex = -0.007 ~ -0.026um, enclosure by M1 edge < 0.003um at opposite side of M1 inner vertex, the inner vertex with M1 width <= 0.046um and jog height > 0.014um) >= 0.039um
 tar_CHK_JOG = LENGTH M1_convex_270_90_edges > 0.014
 tar_CHK_MET_SIDE = CONVEX EDGE M1 ANGLE1 >= 90 LENGTH1 > 0 ANGLE2 == 270 LENGTH2 > 0.014
 tar_CHK_PRL_MET_SIDE = LENGTH (ENC V0N [tar_CHK_MET_SIDE] <= 0.046-V0_MiniWidth ABUT<90 OPPOSITE PARA) >= (V0_MiniWidth - 0.026) <= (V0_MiniWidth - 0.007)
 tar_CHK_PRL_VIA_SIDE = LENGTH (ENC [V0N] tar_CHK_MET_SIDE <= 0.046-V0_MiniWidth ABUT<90 OPPOSITE PARA) >= (V0_MiniWidth - 0.026) <= (V0_MiniWidth - 0.007)
 tar_CHK_PRL_VIA = V0N WITH EDGE tar_CHK_PRL_VIA_SIDE

 tar_ENC_JOG_TMP = ENC [tar_CHK_PRL_VIA] tar_CHK_JOG <= 0.046-V0_MiniWidth+0.0001 PERP ONLY
 tar_ENC_JOG = tar_ENC_JOG_TMP TOUCH EDGE (tar_CHK_PRL_VIA TOUCH EDGE (ENC [V0N] tar_CHK_MET_SIDE <= 0.046-V0_MiniWidth ABUT<90 OPPOSITE PARA))
 tar_ENC_VIA_SIDE = tar_CHK_PRL_VIA TOUCH EDGE tar_ENC_JOG
 tar_ENC_VIA_CHECK = tar_CHK_PRL_VIA TOUCH EDGE (ENC [tar_ENC_VIA_SIDE] M1 <= 0.046-V0_MiniWidth ABUT<90 OPPOSITE)
 tar_TWO_JOG_BESIDE = INT [tar_ENC_VIA_CHECK] <= V0_MiniWidth OPPOSITE
 tar_ONE_JOG_BESIDE = (INT tar_ENC_VIA_CHECK [tar_CHK_PRL_VIA] <= V0_MiniWidth OPPOSITE) NOT TOUCH EDGE tar_TWO_JOG_BESIDE

 tar_CHK_AREA = INT M1 (tar_CHK_MET_SIDE TOUCH EDGE tar_CHK_PRL_MET_SIDE) <= 0.046 ABUT<90 OPPOSITE REGION
 tar_CHK_VIAS = tar_CHK_PRL_VIA NOT OUTSIDE tar_CHK_AREA
 tar_CHK_TYPE_1 = tar_CHK_VIAS WITH EDGE (ENC [tar_ONE_JOG_BESIDE] M1 < 0.003 ABUT<90 OPPOSITE)
 tar_CHK_TYPE_2 = tar_CHK_VIAS WITH EDGE (ENC [tar_TWO_JOG_BESIDE] M1 < 0.003 ABUT<90 OPPOSITE)
 tar_CHK = (OR tar_CHK_TYPE_1 tar_CHK_TYPE_2) WITH EDGE tar_ENC_VIA_SIDE
 err1 = RECTANGLE ENCLOSURE tar_CHK M1 ABUT<90 SINGULAR GOOD 0 0.039 OPPOSITE 0 0.039 OPPOSITE
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
V0_EN_25 {
@ V0 enclosure by M1 for the long side edge (0.036um <= M1 width <= 0.041um, and the long side space >= 0.058um and < 0.063um, and the opposite long side space >= 0.068um, PRL > 0.136um) >= 0.005um
 met_wid_all = M1 WITH WIDTH > 0.036-GLOBAL_TOLERANCE <= 0.041
 met_err_RAW_a = EXT [met_wid_all] M1 >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW_b = EXT met_wid_all M1 >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW_c = EXT met_wid_all [M1] >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_PRL = DFM PROPERTY met_err_RAW_b met_err_RAW_c OVERLAP ABUT ALSO MULTI [-= max(LENGTH(met_err_RAW_c))] >= 0.136+GLOBAL_TOLERANCE
 // 
 met_err_EGE_a = met_err_RAW_a COIN EDGE (DFM COPY met_err_PRL EDGE)
 met_err_EGE_b = ENC V0N [met_err_EGE_a] < 0.005 ABUT<90 OPPOSITE
 met_err_EGE_c = INT met_err_EGE_b [M1] > 0.036-GLOBAL_TOLERANCE <= 0.041 ABUT<90 OPPOSITE MEASURE COIN
 met_err_EGE_d = EXT (met_err_EGE_c) M1 < 0.068 ABUT<90 OPPOSITE
 met_err_EGE_e = met_err_EGE_b COIN EDGE M1
 err1 = INT met_err_EGE_d [met_err_EGE_e] > 0.036-GLOBAL_TOLERANCE <= 0.041 ABUT<90 OPPOSITE
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}


//RV0

Q: 
RV0_EN_1 {
@ RV0 must be fully covered by (M0 NOT M0C) or M0G, and must follow RV0.EN.2, or RV0.EN.2a, or RV0.EN.3, or RV0.EN.4, or RV0.EN.5 as below
 err1 = (RV0 NOT INSIDE M0_NOT_M0C) NOT INSIDE M0G
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the RV0.EN.2~3 derivations
 via_RV0_2_gen = RV0 NOT OUTSIDE M0_NOT_M0C_040
 via_RV0_2_bad = RECTANGLE ENCLOSURE via_RV0_2_gen M0_NOT_M0C ABUT<90 SINGULAR
 GOOD 0.004 OPPOSITE 0.019 OPPOSITE 0.004 OPPOSITE 0.019 OPPOSITE
 via_RV0_2_good = via_RV0_2_gen NOT via_RV0_2_bad

 via_RV0_2a_gen = RV0 NOT OUTSIDE M0_NOT_M0C_042
 via_RV0_2a_bad = RECTANGLE ENCLOSURE via_RV0_2a_gen M0_NOT_M0C ABUT<90 SINGULAR
 GOOD 0.005 OPPOSITE 0.019 OPPOSITE 0.005 OPPOSITE 0.019 OPPOSITE
 via_RV0_2a_good = via_RV0_2a_gen NOT via_RV0_2a_bad
 via_RV0_2_2a_good = OR via_RV0_2_good via_RV0_2a_good

 via_RV0_3_gen = RV0 NOT OUTSIDE M0_NOT_M0C_054
 via_RV0_3_bad = RECTANGLE ENCLOSURE via_RV0_3_gen M0_NOT_M0C ABUT<90 SINGULAR
 GOOD 0.011 OPPOSITE 0.019 OPPOSITE 0.011 OPPOSITE 0.019 OPPOSITE
 via_RV0_3_good = via_RV0_3_gen NOT via_RV0_3_bad
//;end of the RV0.EN.2~3 derivations

Q: 
RV0_EN_2 {
@ RV0.EN.2: RV0 enclosure by (M0 NOT M0C) (M0 width = 0.04um at least two opposite sides) for two opposite sides with other two sides = 0.004um. >= 0.019um
@ RV0.EN.2a: RV0 enclosure by (M0 NOT M0C) (M0 width = 0.042um at least two opposite sides) for two opposite sides with other two sides = 0.005um. >= 0.019um
 err1 = (OR via_RV0_2_bad via_RV0_2a_bad) NOT (OR via_RV0_3_good via_RV0_4_good via_RV0_5_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
RV0_EN_3 {
@ RV0 enclosure by (M0 NOT M0C) (M0 width = 0.054um at least two opposite sides) for two opposite sides with other two sides = 0.011um. >= 0.019um
 err1 = via_RV0_3_bad NOT (OR via_RV0_2_2a_good via_RV0_4_good via_RV0_5_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the RV0.EN.4~5 derivations
 via_RV0_4_gen = (RV0 NOT OUTSIDE M0G_040) OR (RV0 NOT OUTSIDE M0G_WIDTH_040)
 via_RV0_4_bad = RECTANGLE ENCLOSURE via_RV0_4_gen M0G ABUT<90 SINGULAR
 GOOD 0.004 OPPOSITE 0.019 OPPOSITE 0.004 OPPOSITE 0.019 OPPOSITE
 via_RV0_4_good = via_RV0_4_gen NOT via_RV0_4_bad

 via_RV0_5_gen = (RV0 NOT OUTSIDE M0G_060) OR (RV0 NOT OUTSIDE M0G_WIDTH_060)
 via_RV0_5_bad = RECTANGLE ENCLOSURE via_RV0_5_gen M0G ABUT<90 SINGULAR
 GOOD 0.014 OPPOSITE 0.029 OPPOSITE 0.014 OPPOSITE 0.029 OPPOSITE
 via_RV0_5_good = via_RV0_5_gen NOT via_RV0_5_bad
//;end of the RV0.EN.4~5 derivations

Q: 
RV0_EN_4 {
@ RV0 enclosure by M0G (width = 0.04um at least two opposite sides) for two opposite sides with other two sides = 0.004um. >= 0.019um
 err1 = via_RV0_4_bad NOT (OR via_RV0_2_2a_good via_RV0_3_good via_RV0_5_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
RV0_EN_5 {
@ RV0 enclosure by M0G (width = 0.06um at least two opposite sides) for two opposite sides with other two sides = 0.014um. >= 0.029um
 err1 = via_RV0_5_bad NOT (OR via_RV0_2_2a_good via_RV0_3_good via_RV0_4_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

#IFDEF DFM_RULES_PRIORITY_1 YES

Q: 
RV0_EN_1_DFM1 {
@ Recommended rectangular V0 enclosure of M0 (width = 0.04/0.042/0.054um) is defined by RV0.EN.2.DFM/RV0.EN.3.DFM respectively
@ Recommended rectangular V0 enclosure of M0G (width = 0.04/0.06um) is defined by RV0.EN.4.DFM/ RV0.EN.6.DFM respectively
@ DRC waive the violation either V0/M0 or V0/M0G pass the enclosure rules whenV0 INTERACT (M0 AND M0G).
 err1 = (RV0 NOT INSIDE M0) NOT INSIDE M0G
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the RV0.EN.2.DFM~3.DFM derivations
 via_RV0_2_R = RV0 NOT OUTSIDE (OR M0_NOT_M0C_040 M0_NOT_M0C_042)
 via_RV0_2_R_bad = RECTANGLE ENCLOSURE via_RV0_2_R M0_NOT_M0C ABUT<90 SINGULAR
 GOOD 0.004 OPPOSITE 0.022 OPPOSITE 0.004 OPPOSITE 0.022 OPPOSITE
 via_RV0_2_R_good = via_RV0_2_R NOT via_RV0_2_R_bad

 via_RV0_3_R = RV0 NOT OUTSIDE M0_NOT_M0C_054
 via_RV0_3_R_bad = RECTANGLE ENCLOSURE via_RV0_3_R M0_NOT_M0C ABUT<90 SINGULAR
 GOOD 0.011 OPPOSITE 0.022 OPPOSITE 0.011 OPPOSITE 0.022 OPPOSITE
 via_RV0_3_R_good = via_RV0_3_R NOT via_RV0_3_R_bad
//;end of the RV0.EN.2.DFM~3.DFM derivations

Q: 
RV0_EN_2_DFM1 {
@ Recommended rectangular V0 long side enclosure by (M0 NOT MOC) which M0 width = 0.04/0.042um for two opposite sides with the other two sides = 0.004um. >= 0.022um
 err1 = via_RV0_2_R_bad NOT (OR via_RV0_3_R_good via_RV0_4_R_good via_RV0_5_R_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
RV0_EN_3_DFM1 {
@ Recommended rectangular V0 long side enclosure by (M0 NOT MOC) which M0 width = 0.054um for two opposite sides with the other two sides = 0.011um. >= 0.022um
 err1 = via_RV0_3_R_bad NOT (OR via_RV0_2_R_good via_RV0_4_R_good via_RV0_5_R_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the RV0.EN.4.DFM derivations
 via_RV0_4_R = (RV0 NOT OUTSIDE M0G_040) OR (RV0 NOT OUTSIDE M0G_WIDTH_040)
 via_RV0_4_R_bad = RECTANGLE ENCLOSURE via_RV0_4_R M0G ABUT<90 SINGULAR
 GOOD 0.004 OPPOSITE 0.022 OPPOSITE 0.004 OPPOSITE 0.022 OPPOSITE
 via_RV0_4_R_good = via_RV0_4_R NOT via_RV0_4_R_bad
//;end of the RV0.EN.4.DFM derivations

Q: 
RV0_EN_4_DFM1 {
@ Recommended rectangular V0 enclosure by M0G with width = 0.04um for two opposite sides with the other two sides = 0.004um. >= 0.022um
 err1 = via_RV0_4_R_bad NOT (OR via_RV0_2_R_good via_RV0_3_R_good via_RV0_5_R_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the RV0.EN.5.DFM derivations
 via_RV0_5_R = (RV0 NOT OUTSIDE M0G_060) OR (RV0 NOT OUTSIDE M0G_WIDTH_060)
 via_RV0_5_R_bad = RECTANGLE ENCLOSURE via_RV0_5_R M0G ABUT<90 SINGULAR
 GOOD 0.014 OPPOSITE 0.033 OPPOSITE 0.014 OPPOSITE 0.033 OPPOSITE
 via_RV0_5_R_good = via_RV0_5_R NOT via_RV0_5_R_bad
//;end of the RV0.EN.5.DFM derivations

Q: 
RV0_EN_5_DFM1 {
@ Recommended V0 enclosure by M0G with width = 0.06um for two opposite sides with the other two sides = 0.014um. >= 0.033um
 err1 = via_RV0_5_R_bad NOT (OR via_RV0_2_R_good via_RV0_3_R_good via_RV0_4_R_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
RV0_EN_7_DFM1 {
@ Recommended RV0 enclosure by M1 is defined by either V0.EN.8.DFM or V0.EN.9.DFM
 err1 = RV0 NOT INSIDE M1
 err1 NOT INSIDE SealR_NOT_BULK
}

//;beginning of the RV0.EN.8.DFM derivations
 met_RV0_8_R = COPY M1
 via_RV0_8_R = RV0 INTERACT met_RV0_8_R
 via_RV0_8_R_bad = RECTANGLE ENCLOSURE via_RV0_8_R M1 ABUT<90 SINGULAR
 GOOD 0.020 0.020 0.020 0.020 OPPOSITE
 via_RV0_8_R_good = via_RV0_8_R NOT via_RV0_8_R_bad
//;end of the RV0.EN.8.DFM derivations

Q: 
RV0_EN_8_DFM1 {
@ Recommended RV0 enclosure by M1 for all sides to avoid high Rc >= 0.020um
 err1 = via_RV0_8_R_bad NOT via_RV0_9_R_good
 err2 = (ENC [via_RV0_8_R] M1 < 0.02 ABUT<90 SINGULAR) NOT TOUCH EDGE via_RV0_9_R_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

//;beginning of the RV0.EN.9.DFM derivations
 met_RV0_9_R = COPY M1
 via_RV0_9_R = RV0 INTERACT met_RV0_9_R
 via_RV0_9_R_bad = RECTANGLE ENCLOSURE via_RV0_9_R M1 ABUT<90 SINGULAR
 GOOD 0.007 0.025 OPPOSITE 0.007 0.025 OPPOSITE
 via_RV0_9_R_good = via_RV0_9_R NOT via_RV0_9_R_bad
//;end of the RV0.EN.9.DFM derivations

Q: 
RV0_EN_9_DFM1 {
@ Recommended RV0 enclosure by M1 for two opposite sides with the other two sides >= 0.007um. >= 0.025um
 err1 = via_RV0_9_R_bad NOT via_RV0_8_R_good
 err1 NOT INSIDE SealR_NOT_BULK
}
#ENDIF

Q: 
RV0_EN_6_7_8_9 {
@ RV0.EN.6: RV0 must be fully covered by M1, and must follow RV0.EN.7 or RV0.EN.8, or RV0.EN.9 as below, where M1 is the metal layer directly above rectangular V0
@ RV0.EN.7: RV0 enclosure by M1 >= 0.015um
@ RV0.EN.8: RV0 enclosure by M1 for two opposite sides with the other two sides >= 0.005um. >= 0.019um
@ RV0.EN.9: Short side of rectangular V0 enclosure by M1 with the other two sides >= 0um. >= 0.024um
 err1 = RECTANGLE ENCLOSURE RV0 M1 ABUT<90 SINGULAR OUTSIDE ALSO
 GOOD 0.005 0.019 OPPOSITE 0.005 0.019 OPPOSITE
 GOOD 0.015 0.015 0.015 0.015 OPPOSITE
 GOOD 0 0.024 OPPOSITE 0 0.024 OPPOSITE
 err1 NOT INSIDE SealR_NOT_BULK

 RV0_EN_10_W_sides = ENC [RV0_W] M1 < 0.005 ABUT<90 OPPOSITE
 RV0_EN_10_L_sides = ENC (RV0_L) M1 < 0.024 ABUT<90 OPPOSITE
 err2 = (RV0 WITH EDGE RV0_EN_10_W_sides) WITH EDGE RV0_EN_10_L_sides == 2
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: 
RV0_EN_10 {
@ V0 bar must be fully covered by (M0 NOT M0C) or M0G
 err1 = V0_BAR_100_all NOT M0_0
 err1 NOT INSIDE SealR_NOT_BULK
}

//Vy1

Q: 
Vy1_EN_2a_ME {
@ Vy enclosure by M1 or Mxy (width < 0.05um) for two opposite sides with the other two side >= 0um (M1/Mxy is the metal underneath Vy), except INST region >= 0.032um
 err1 = via_Vy_1_2a_bad_ME NOT via_Vy_1_2c_good_ME
 err1 NOT INSIDE INST
}
 
//;beginning of the Vy.EN.2c derivations
met_Vy_1_2c_ME = M1 WITH WIDTH >= 0.050
via_Vy_1_2c_ME = 1XV1N INTERACT met_Vy_1_2c_ME
via_Vy_1_2c_bad_ME = RECTANGLE ENCLOSURE via_Vy_1_2c_ME M1 ABUT<90 SINGULAR 
GOOD 0.009 0.025 OPPOSITE 0.009 0.025 OPPOSITE
via_Vy_1_2c_good_ME = via_Vy_1_2c_ME NOT via_Vy_1_2c_bad_ME
//;end of the Vy.EN.2c derivations
 
Q: 
Vy1_EN_2c_ME {
@ Vy enclosure by M1 or Mxy (width >= 0.05um) for two opposite sides with the other two side >= 0.009um (M1/Mxy is the metal underneath Vy), except INST region >= 0.025um
 err1 = via_Vy_1_2c_bad_ME NOT via_Vy_1_2a_good_ME
 err1 NOT INSIDE INST
}
 
//;beginning of the Vy.EN.16a derivations
met_Vy1_16a_ME = M2 WITH WIDTH == 0.032
via_Vy1_16a_ME = 1XV1N INTERACT met_Vy1_16a_ME
via_Vy1_16a_ME_bad = RECTANGLE ENCLOSURE via_Vy1_16a_ME M2 ABUT<90 SINGULAR 
GOOD 0 0.039 OPPOSITE 0 0.039 OPPOSITE
via_Vy1_16a_ME_good = via_Vy1_16a_ME NOT via_Vy1_16a_ME_bad
//;beginning of the Vy.EN.16a derivations
 
Q: 
Vy1_EN_16a_ME {
@ Vy enclosure by Mxy+1 (width = 0.032um) for two opposite sides with the other two sides >= 0um, except INST region >= 0.039um
 err1 = COPY via_Vy1_16a_ME_bad
 err1 NOT INSIDE INST
}

Q: 
Vy1_EN_1_DFM1 {
@ Recommended square Vy enclosure by M1/Mxy is defined by either Vy.EN.2.DFM or Vy.EN.3.DFM or Vy.EN.2b.DFM
 err1 = 1XV1N NOT INSIDE M1
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.2.DFM derivations
via_Vy_1_2_R_bad = RECTANGLE ENCLOSURE 1XV1N M1 ABUT<90 SINGULAR 
GOOD 0.007 0.050 OPPOSITE 0.007 0.050 OPPOSITE
via_Vy_1_2_R_good = 1XV1N NOT via_Vy_1_2_R_bad
//;end of the Vy.EN.2.DFM derivations
 
Q: 
Vy1_EN_2_DFM1 {
@ Recommended square Vy enclosure by M1/Mxy for two opposite sides with the other two sides >= 0.007um, except FUSEMK1 region. >= 0.05um
 err1 = (via_Vy_1_2_R_bad NOT via_Vy_1_3_R_good) NOT INSIDE FUSEMK1
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy1_EN_2b_DFM1 {
@ Recommended enclosure by M1 or Mxy (width < 0.05um) along width direction must be equal or 1nm difference (M1/Mxy is the metal underneath Vy.)
 chk_Mxy = (INT [M1] < 0.05 ABUT<90 OPPOSITE) TOUCH EDGE (M1 WITH WIDTH < 0.05)
 side_en = ENC V1N chk_Mxy < 0.018 ABUT<90 OPPOSITE
 side_en_EDGE = ENC [V1N] chk_Mxy < 0.018 ABUT<90 OPPOSITE
 err1 = DFM PROPERTY V1N side_en OVERLAP ABUT ALSO MULTI [-= COUNT(side_en)] >= 2 [+= ((MIN(EW(side_en)) == MAX(EW(side_en))) || (MIN(EW(side_en)) == ABS(MAX(EW(side_en)) - 0.001))) ? 1 : 0] == 0
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.3.DFM derivations
via_Vy_1_3_R_bad = RECTANGLE ENCLOSURE 1XV1N M1 ABUT<90 SINGULAR 
GOOD 0.02 0.02 0.02 0.02 OPPOSITE
via_Vy_1_3_R_good = 1XV1N NOT via_Vy_1_3_R_bad
//;end of the Vy.EN.3.DFM derivations
 
Q: 
Vy1_EN_3_DFM1 {
@ Recommended square Vy enclosure by M1, Mxy for all sides to avoid high Rc, except FUSEMK1 region >= 0.02um
 err1 = (via_Vy_1_3_R_bad NOT via_Vy_1_2_R_good) NOT INSIDE FUSEMK1
 err2 = ((ENC [1XV1N] M1 < 0.02 ABUT<90 SINGULAR) NOT TOUCH EDGE via_Vy_1_2_R_good) NOT INSIDE EDGE FUSEMK1
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

#ENDIF

 
Q: 
Vy1_EN_1 {
@ 1X square Vy must be fully enclosed by M1 or Mxy
@ where M1/Mxy is the metal layer directly underneath Vy, Vy enclosure by M1 or Mxy must follow either Vy.EN.2 or Vy.EN.3
 err1 = 1XV1N NOT M1
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.2 derivations
via_Vy_1_2_bad = RECTANGLE ENCLOSURE 1XV1N M1 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0 0.024 OPPOSITE 0 0.024 OPPOSITE
via_Vy_1_2_good = 1XV1N NOT via_Vy_1_2_bad
//;end of the Vy.EN.2 derivations
 
//;beginning of the Vy.EN.3 derivations
via_Vy_1_3_bad = RECTANGLE ENCLOSURE 1XV1N M1 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.015 0.015 0.015 0.015 OPPOSITE
via_Vy_1_3_good = 1XV1N NOT via_Vy_1_3_bad
via_Vy_1_2_3_good = OR via_Vy_1_2_good via_Vy_1_3_good
//;end of the Vy.EN.3 derivations
 
Q: 
Vy1_EN_2_3 {
@ Vy.EN.2: Vy enclosure by M1 or Mxy when enclosure by M1 or Mxy on either perpendicular direction >= 0um, except V1 in INST region >= 0.024um
@ Vy.EN.3: Vy enclosure by M1 or Mxy for all sides, except V1 in INST region >= 0.015
 err1 = via_Vy_1_2_bad NOT via_Vy_1_2_3_good
 // 
 err1 NOT INSIDE INST
}
 
Q: 
Vy1_EN_4a {
@ Vy enclosure by M1 in adjacent S1 side, where M1 is the metal layer directly underneath Vy >= 0.004um
@ When:
@ 1. M1 width W: 0.036um <= W <= 0.041um
@ 2. Space: 0.058um <= S1 < 0.063um, the PRL >= 0.083um
@ 3. The opposite space S2 >= 0.069um
@ except V1 in INST region
 met_wid_all = M1 WITH WIDTH > 0.036-GLOBAL_TOLERANCE <= 0.041
 met_err_RAW_a = EXT [met_wid_all] M1 >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW_b = EXT met_wid_all M1 >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW_c = EXT met_wid_all [M1] >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_PRL = DFM PROPERTY met_err_RAW_b met_err_RAW_c OVERLAP ABUT ALSO MULTI [-= max(LENGTH(met_err_RAW_c))] >= 0.083
 // 
 met_err_EGE_a = met_err_RAW_a COIN EDGE (DFM COPY met_err_PRL EDGE)
 met_err_EGE_b = ENC V1N [met_err_EGE_a] < 0.004 ABUT<90 OPPOSITE
 met_err_EGE_c = INT met_err_EGE_b [M1] > 0.036-GLOBAL_TOLERANCE <= 0.041 ABUT<90 OPPOSITE MEASURE COIN
 met_err_EGE_d = EXT (met_err_EGE_c) M1 < 0.069 ABUT<90 OPPOSITE
 met_err_EGE_e = met_err_EGE_b COIN EDGE M1
 err1 = INT met_err_EGE_d [met_err_EGE_e] > 0.036-GLOBAL_TOLERANCE <= 0.041 ABUT<90 OPPOSITE
 // 
 err1 NOT INSIDE EDGE INST
}
 
Q: 
Vy1_EN_4b {
@ Vy enclosure by M1 in adjacent S1 side, where M1 is the metal layer directly underneath Vy >= 0.004um
@ When:
@ 1. M1 width W: 0.042um <= W <= 0.05um
@ 2. Space: 0.058um <= S1 <= 0.067um, the PRL >= 0.136um
@ except V1 in INST region
 met_wid_all = M1 WITH WIDTH > 0.042-GLOBAL_TOLERANCE <= 0.05
 met_err_RAW_TMP = EXT met_wid_all [M1] >= 0.058 < 0.067+GLOBAL_TOLERANCE ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW = EXT met_err_RAW_TMP [M1] >= 0.058 < 0.067+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 // 
 met_jog_ALL = M1_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M1
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW met_wid_all OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.136 [+= COUNT(met_wid_all)] > 0
 met_err_EGE = M1 COIN EDGE (met_err_RAW COIN EDGE (met_err_PRL COIN EDGE met_wid_all))
 err1 = ENC [V1N] met_err_EGE < 0.004 ABUT<90 OPPOSITE
 // 
 err1 NOT INSIDE EDGE INST
}
 
Q: 
Vy1_EN_6 {
@ Vy enclosure by M1 in adjacent S1 side, where M1 is the metal layer directly underneath Vy >= 0.004um
@ When:
@ 1. M1 width W: 0.051um <= W <= 0.112um
@ 2. Space: 0.058um <= S1 <= 0.094um, the PRL >= 0.136um
@ DRC doesn't check Vy:
@ a) Two Vys with space <= 0.1um in M1 and 1.25xMy/Mxy intersection region.
@ b) One Vy and one rectangular Vy with space <= 0.1um in M1 and 1.25xMy/Mxy intersection region
 met_wid_all = M1 WITH WIDTH > 0.051-GLOBAL_TOLERANCE <= 0.112
 met_err_RAW_TMP = EXT met_wid_all [M1] >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW = EXT met_err_RAW_TMP [M1] >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 // 
 met_jog_ALL = M1_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M1
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW met_wid_all OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.136 [+= COUNT(met_wid_all)] > 0
 met_err_EGE = M1 COIN EDGE (met_err_RAW COIN EDGE (met_err_PRL COIN EDGE met_wid_all))
 via_group_all = SIZE V1 BY 0.05 INSIDE OF (M1 AND M2) STEP 0.02
 via_group_real = V1 INTERACT (via_group_all INTERACT V1 >= 2)
 err1 = ENC (V1N NOT via_group_real) met_err_EGE < 0.004 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy1_EN_7 {
@ Vy enclosure by M1 in adjacent S1 side, where M1 is the metal layer directly underneath Vy >= 0.008um
@ When:
@ 1. M1 width W: 0.061um <= W <= 0.09um
@ 2. Space: 0.058um <= S1 <= 0.079um, the PRL >= 0.136um
 met_wid_all = M1 WITH WIDTH > 0.061-GLOBAL_TOLERANCE <= 0.09
 met_err_RAW_TMP = EXT met_wid_all [M1] >= 0.058 < 0.079+GLOBAL_TOLERANCE ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW = EXT met_err_RAW_TMP [M1] >= 0.058 < 0.079+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 // 
 met_jog_ALL = M1_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M1
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW met_wid_all OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.136 [+= COUNT(met_wid_all)] > 0
 met_err_EGE = M1 COIN EDGE (met_err_RAW COIN EDGE (met_err_PRL COIN EDGE met_wid_all))
 err1 = ENC [V1N] met_err_EGE < 0.008 ABUT<90 OPPOSITE
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}
 
Q: 
Vy1_EN_9 {
@ Vy enclosure by M1/Mxy in adjacent S1 side, where M1/Mxy is the metal layer directly underneath Vy >= 0.004um
@ When:
@ 1. M1/Mxy dimension along enclosure direction: 0.113um <= L <= 0.201um
@ 2. Space: 0.058um <= S1 <= 0.094um, the PRL >= 0.083um
 met_wid_all = INT [M1] > 0.113-GLOBAL_TOLERANCE <= 0.201 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 met_err_RAW = EXT [met_wid_all] M1 >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 met_jog_ALL = M1_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M1
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.083
 met_err_EGE = M1 COIN EDGE (met_err_RAW COIN EDGE met_err_PRL)
 err1 = ENC V1N met_err_EGE < 0.004 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy1_EN_10 {
@ Vy enclosure by M1/Mxy in adjacent S1 side, where M1/Mxy is the metal layer directly underneath Vy >= 0.014um
@ When:
@ 1. M1/Mxy width W: dimension along enclosure direction L >= 0.202um
@ 2. Space: 0.058um <= S1 <= 0.094um, PRL >= 0.083um
 met_wid_all = INT (M1) <= 0.202-GLOBAL_TOLERANCE ABUT<90 OPPOSITE EXCLUDE SHIELDED
 met_err_RAW = EXT [met_wid_all] M1 >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 met_jog_ALL = M1_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M1
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.083
 met_err_EGE = M1 COIN EDGE (met_err_RAW COIN EDGE met_err_PRL)
 err1 = ENC V1N met_err_EGE < 0.014 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy1_EN_11 {
@ Vy bar must fully enclosure by Mxy (including M1) where Mxy is the metal layer directly underneath Vy bar >= 0.2um
 err1 = ENC V1_BAR_100_all M1 < 0.2 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err2 = ENC V1_BAR_450_all M1 < 0.2 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}
 

#IFDEF DFM_RULES_PRIORITY_1 YES

 
Q: 
Vy1_EN_14_DFM1 {
@ Recommended square Vy fully enclosure by Mxy+1/1.25xMy is defined by either Vy.EN.16.DFM, Vy.EN.16a.DFM or Vy.EN.16b.DFM, which Mxy+1/1.25xMy is the metal layer directly above Vy
 err1 = 1XV1N NOT INSIDE M2
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.16.DFM derivations
via_Vy_1_16_R_bad = RECTANGLE ENCLOSURE 1XV1N M2 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.020 0.020 0.020 0.020 OPPOSITE
via_Vy_1_16_R_good = 1XV1N NOT via_Vy_1_16_R_bad
//;end of the Vy.EN.16.DFM derivations
 
Q: 
Vy1_EN_16_DFM1 {
@ Recommended square Vy enclosure by Mxy+1/1.25xMy for all sides >= 0.02um
 err1 = via_Vy_1_16_R_bad NOT (OR via_Vy_1_16a_R_good via_Vy_1_16b_R_good)
 err2 = (ENC [1XV1N] M2 < 0.02 ABUT<90 SINGULAR) NOT TOUCH EDGE (OR via_Vy_1_16a_R_good via_Vy_1_16b_R_good)
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.16a.DFM derivations
met_Vy1_16a_R = M2 WITH WIDTH < 0.05
via_Vy1_16a_R = 1XV1N NOT OUTSIDE met_Vy1_16a_R
via_Vy_1_16a_R_bad = RECTANGLE ENCLOSURE via_Vy1_16a_R M2 ABUT<90 SINGULAR 
GOOD 0.007 0.050 OPPOSITE 0.007 0.050 OPPOSITE
via_Vy_1_16a_R_good = via_Vy1_16a_R NOT via_Vy_1_16a_R_bad
//;end of the Vy.EN.16a.DFM derivations
 
Q: 
Vy1_EN_16a_DFM1 {
@ Recommended square Vy enclosure by Mxy+1/1.25xMy (width < 0.05um) for two opposite sides with the other two sides >= 0.007um. >= 0.05um
 err1 = via_Vy_1_16a_R_bad NOT (OR via_Vy_1_16_R_good via_Vy_1_16b_R_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.16b.DFM derivations
via_Vy1_16b_R = (1XV1N OUTSIDE met_Vy1_16a_R) NOT OUTSIDE M2
via_Vy_1_16b_R_bad = RECTANGLE ENCLOSURE via_Vy1_16b_R M2 ABUT<90 SINGULAR 
GOOD 0.009 0.050 OPPOSITE 0.009 0.050 OPPOSITE
via_Vy_1_16b_R_good = via_Vy1_16b_R NOT via_Vy_1_16b_R_bad
//;end of the Vy.EN.16.DFM derivations
 
Q: 
Vy1_EN_16b_DFM1 {
@ Recommended square Vy enclosure by Mxy+1/1.25xMy (width >= 0.05um) for two opposite sides with the other two sides >= 0.009um. >= 0.05um
 err1 = via_Vy_1_16b_R_bad NOT (OR via_Vy_1_16_R_good via_Vy_1_16a_R_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

#ENDIF

 
//;beginning of the Vy.EN.13 derivations
via_Vy1_13_bad = RECTANGLE ENCLOSURE 1XV1N M2 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.015 0.015 0.015 0.015 OPPOSITE
via_Vy_1_13_good = 1XV1N NOT via_Vy1_13_bad
//;beginning of the Vy.EN.13 derivations
 
Q: 
Vy1_EN_12_13 {
@ 1X square Vy must be fully enclosure by Mxy+1/1.25xMy where Mxy+1/1.25xMy is the metal layer directly above Vy
@ Enclosure by Mxy+1/1.25x My must follow one of Vy.En.15 or Vy.EN.16 or Vy.EN.16a or Vy.EN.16b or Vy.EN.16c or Vy.EN.16d or Vy.EN.16e or Vy.EN.16f or Vy.EN.16g or Vy.EN.17 or Vy.EN.18 or Vy.EN.19 or Vy.EN.20 or Vy.EN.21
@ Vy.EN.13: Vy enclosure by Mxy+1 for all sides >= 0.015um
 err1 = 1XV1N NOT M2
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.16a derivations
met_Vy1_16a = M2 WITH WIDTH > 0.032 <= 0.046
via_Vy1_16a = (1XV1N INTERACT met_Vy1_16a) NOT via_Vy1_16f_16g_good
via_Vy1_16a_bad = RECTANGLE ENCLOSURE via_Vy1_16a M2 ABUT<90 SINGULAR 
GOOD 0.003 0.032 OPPOSITE 0.003 0.047 OPPOSITE
via_Vy1_16a_good = via_Vy1_16a NOT via_Vy1_16a_bad
//;beginning of the Vy.EN.16a derivations
 
Q: 
Vy1_EN_16a {
@ Vy enclosure by Mxy+1 (0.032um < short side of Mxy+1 width <= 0.046um) for opposite side >= 0.032um with the two sides >= 0.003um, except V1 in INST region >= 0.047um
 err1 = copy via_Vy1_16a_bad
 err1 NOT INSIDE INST
}
 
//;beginning of the Vy.EN.16b derivations
met_Vy1_16b = M2 WITH WIDTH > 0.046 <= 0.09
via_Vy1_16b_TMP = 1XV1N INTERACT met_Vy1_16b
via_Vy1_16b = via_Vy1_16b_TMP NOT (OR via_Vy_1_13_good via_Vy1_16a_good via_Vy1_16f_16g_good)
via_Vy1_16b_bad = RECTANGLE ENCLOSURE via_Vy1_16b M2 ABUT<90 SINGULAR 
GOOD 0.008 0.024 OPPOSITE 0.008 0.024 OPPOSITE
via_Vy1_16b_good = via_Vy1_16b NOT via_Vy1_16b_bad
//;beginning of the Vy.EN.16b derivations
 
Q: 
Vy1_EN_16b {
@ Vy enclosure by Mxy+1 for two opposite sides with the other two sides >= 0.008um (0.046um < short side of Mxy+1 width <= 0.09um), except V1 in INST region >= 0.024um
 err1 = copy via_Vy1_16b_bad
 err1 NOT INSIDE INST
}
 
//;beginning of the Vy.EN.16c derivations
met_Vy1_width_096_200 = M2 WITH WIDTH > 0.09 <= 0.2
met_Vy1_16c = copy met_Vy1_width_096_200
via_Vy1_16c_TMP = 1XV1N INTERACT met_Vy1_16c
via_Vy1_16c = via_Vy1_16c_TMP NOT (OR via_Vy_1_13_good via_Vy1_16a_good via_Vy1_16b_good via_Vy1_16f_16g_good)
via_Vy1_16c_bad = RECTANGLE ENCLOSURE via_Vy1_16c M2 ABUT<90 SINGULAR 
GOOD 0.014 0.024 OPPOSITE 0.014 0.024 OPPOSITE
via_Vy1_16c_good = via_Vy1_16c NOT via_Vy1_16c_bad
//;end of the Vy.EN.16c derivations
 
//;beginning of the Vy.EN.16d derivations
met_Vy1_16d = copy met_Vy1_width_096_200
via_Vy1_16d_TMP_1 = 1XV1N INTERACT met_Vy1_16d
via_Vy1_16d_TMP = via_Vy1_16d_TMP_1 NOT (OR via_Vy_1_13_good via_Vy1_16a_good via_Vy1_16b_good via_Vy1_16f_16g_good)
via_Vy1_16d_bad_TMP = RECTANGLE ENCLOSURE via_Vy1_16d_TMP M2 ABUT<90 SINGULAR 
GOOD 0 0.009 OPPOSITE 0 0.024 OPPOSITE
via_Vy1_16d = via_Vy1_16d_TMP NOT via_Vy1_16d_bad_TMP
via_Vy1_16d_bad = RECTANGLE ENCLOSURE via_Vy1_16d M2 ABUT<90 SINGULAR 
GOOD 0.009 OPPOSITE 0.024 OPPOSITE 0.058 OPPOSITE 0.058 OPPOSITE 
GOOD 0.024 OPPOSITE 0.009 OPPOSITE 0.058 OPPOSITE 0.058 OPPOSITE
via_Vy1_16d_good = via_Vy1_16d NOT via_Vy1_16d_bad
//;end of the Vy.EN.16d derivations
via_Vy1_16_abcd_good = OR via_Vy1_16a_good via_Vy1_16b_good via_Vy1_16c_good via_Vy1_16d_good
 
Q: 
Vy1_EN_16c {
@ Vy enclosure by Mxy+1 for two opposite sides with the other two sides >= 0.014um (0.09um < short side of Mxy+1 width <= 0.2um), except V1 in INST region >= 0.024um
 err1 = via_Vy1_16c_bad NOT via_Vy1_16d_good // exclude Vy.en.16d
 err2 = ENC via_Vy1_16c M2 < 0.009 ABUT<90 SINGULAR REGION
 // 
 err1 NOT INSIDE INST
 err2 NOT INSIDE INST
}
 
Q: 
Vy1_EN_16d {
@ Vy enclosure by Mxy+1 for at least two adjacent edges with the other two sides >= 0.024um and >= 0.009um (0.09um < short side of Mxy+1 width <= 0.2um), except V1 in INST region >= 0.058um
 err1 = via_Vy1_16d_bad NOT via_Vy1_16c_good // exclude Vy.en.16c
 err2 = ENC via_Vy1_16d M2 < 0.009 ABUT<90 SINGULAR REGION
 // 
 err1 NOT INSIDE INST
 err2 NOT INSIDE INST
}
 
//;beginning of the Vy.EN.16e derivations
met_Vy1_16e = M2 WITH WIDTH > 0.2
via_Vy1_16e_TMP = 1XV1N INTERACT met_Vy1_16e
via_Vy1_16e = via_Vy1_16e_TMP NOT (OR via_Vy_1_13_good via_Vy1_16_abcd_good via_Vy1_16f_16g_good)
via_Vy1_16e_bad = RECTANGLE ENCLOSURE via_Vy1_16e M2 ABUT<90 SINGULAR 
GOOD 0.014 0.024 OPPOSITE 0.014 0.024 OPPOSITE
via_Vy1_16e_good = via_Vy1_16e NOT via_Vy1_16e_bad
//;end of the Vy.EN.16e derivations
 
Q: 
Vy1_EN_16e {
@ Vy enclosure by Mxy+1 for two opposite sides with the other two sides >= 0.014um (short side of Mxy+1 width > 0.2um) >= 0.024um
 err1 = copy via_Vy1_16e_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.16f derivations
met_Vy1_16f_16g_t = M2 WITH WIDTH == 0.032
met_Vy1_16f_16g = met_Vy1_16f_16g_t INTERACT 1XV1N
met_Vy1_16f_16g_side = INT [met_Vy1_16f_16g] == 0.032 ABUT<90 OPPOSITE
via_Vy1_16f_16g = 1XV1N INTERACT met_Vy1_16f_16g
via_Vy1_16f_16g_non_iso_end = via_Vy1_16f_16g NOT TOUCH EDGE met_Vy1_16f_16g_side
via_Vy1_16f_16g_non_iso_side = via_Vy1_16f_16g TOUCH EDGE met_Vy1_16f_16g_side
via_Vy1_16f_16g_non_iso_s1 = EXT [via_Vy1_16f_16g_non_iso_end] M2 < 0.130 ABUT<90 OPPOSITE MEASURE ALL
via_Vy1_16f_16g_non_iso_s2 = EXT [via_Vy1_16f_16g_non_iso_side] M2 < 0.090 ABUT<90 OPPOSITE EXTENDED 0.13 MEASURE ALL
via_Vy1_16f_16g_non_iso_via = via_Vy1_16f_16g WITH EDGE (OR EDGE via_Vy1_16f_16g_non_iso_s1 via_Vy1_16f_16g_non_iso_s2)
via_Vy1_16f_16g_iso_via = via_Vy1_16f_16g NOT via_Vy1_16f_16g_non_iso_via
via_Vy1_16f_non_iso_bad_1 = RECTANGLE ENCLOSURE via_Vy1_16f_16g_non_iso_via M2 ABUT<90 SINGULAR 
GOOD 0 0.036 OPPOSITE 0 0.036 OPPOSITE
via_Vy1_16f_non_iso_bad_2 = RECTANGLE ENCLOSURE via_Vy1_16f_16g_non_iso_via M2 ABUT<90 SINGULAR 
GOOD 0 0.036 OPPOSITE 0 0.043 OPPOSITE 
GOOD 0 0.037 OPPOSITE 0 0.042 OPPOSITE 
GOOD 0 0.038 OPPOSITE 0 0.041 OPPOSITE 
GOOD 0 0.039 OPPOSITE 0 0.040 OPPOSITE
via_Vy1_16f_non_iso_good = via_Vy1_16f_16g_non_iso_via NOT (OR via_Vy1_16f_non_iso_bad_1 via_Vy1_16f_non_iso_bad_2)
//;end of the Vy.EN.16f derivations
 
//;beginning of the Vy.EN.16g derivations
via_Vy1_16g_iso_bad_1 = RECTANGLE ENCLOSURE via_Vy1_16f_16g_iso_via M2 ABUT<90 SINGULAR 
GOOD 0 0.030 OPPOSITE 0 0.030 OPPOSITE
via_Vy1_16g_iso_bad_2 = RECTANGLE ENCLOSURE via_Vy1_16f_16g_iso_via M2 ABUT<90 SINGULAR 
GOOD 0 0.030 OPPOSITE 0 0.039 OPPOSITE 
GOOD 0 0.031 OPPOSITE 0 0.038 OPPOSITE 
GOOD 0 0.032 OPPOSITE 0 0.037 OPPOSITE 
GOOD 0 0.033 OPPOSITE 0 0.036 OPPOSITE 
GOOD 0 0.034 OPPOSITE 0 0.035 OPPOSITE
via_Vy1_16g_iso_good = via_Vy1_16f_16g_iso_via NOT (OR via_Vy1_16g_iso_bad_1 via_Vy1_16g_iso_bad_2)
//;end of the Vy.EN.16g derivations
via_Vy1_16f_16g_good = OR via_Vy1_16f_non_iso_good via_Vy1_16g_iso_good
 
Q: 
Vy1_EN_16f {
@ Total Vy enclosure by Mxy+1 (Mxy+1 width = 0.032um, both two opposite sides(EN1A/EN2A) >= 0.036um)with the other two sides >= 0um. >= 0.079um
 err1 = COPY via_Vy1_16f_non_iso_bad_1
 err2 = COPY via_Vy1_16f_non_iso_bad_2
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy1_EN_16g {
@ Total Vy enclosure by Mxy+1 (Mxy+1 width = 0.032um, both two opposite sides >= 0.03um) with the other two sides(EN1A/EN2A) >= 0um (for iso Vy condition only) >= 0.069um
@ Iso Vy condition definition:
@ S1 > 0.13um and S2 > 0.09um, where S1 is via space to metal in length direction and S2 is via space to metal in width direction
 err1 = COPY via_Vy1_16g_iso_bad_1
 err2 = COPY via_Vy1_16g_iso_bad_2
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy1_EN_25 {
@ Vy bar must fully enclosure by Mxy+1/1.25xMy where Mxy+1/1.25xMy is the metal layer directly above Vy bar >= 0.2um
 err1 = ENC V1_BAR_100_all M2 < 0.2 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err2 = ENC V1_BAR_450_all M2 < 0.2 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

//Vy2

Q: 
Vy2_EN_2a_ME {
@ Vy enclosure by M1 or Mxy (width < 0.05um) for two opposite sides with the other two side >= 0um (M1/Mxy is the metal underneath Vy), except INST region >= 0.032um
 err1 = via_Vy_2_2a_bad_ME NOT via_Vy_2_2c_good_ME
 err1 NOT INSIDE INST
}
 
//;beginning of the Vy.EN.2c derivations
met_Vy_2_2c_ME = M2 WITH WIDTH >= 0.050
via_Vy_2_2c_ME = 1XV2N INTERACT met_Vy_2_2c_ME
via_Vy_2_2c_bad_ME = RECTANGLE ENCLOSURE via_Vy_2_2c_ME M2 ABUT<90 SINGULAR 
GOOD 0.009 0.025 OPPOSITE 0.009 0.025 OPPOSITE
via_Vy_2_2c_good_ME = via_Vy_2_2c_ME NOT via_Vy_2_2c_bad_ME
//;end of the Vy.EN.2c derivations
 
Q: 
Vy2_EN_2c_ME {
@ Vy enclosure by M1 or Mxy (width >= 0.05um) for two opposite sides with the other two side >= 0.009um (M1/Mxy is the metal underneath Vy), except INST region >= 0.025um
 err1 = via_Vy_2_2c_bad_ME NOT via_Vy_2_2a_good_ME
 err1 NOT INSIDE INST
}
 
//;beginning of the Vy.EN.16a derivations
met_Vy2_16a_ME = M3 WITH WIDTH == 0.032
via_Vy2_16a_ME = 1XV2N INTERACT met_Vy2_16a_ME
via_Vy2_16a_ME_bad = RECTANGLE ENCLOSURE via_Vy2_16a_ME M3 ABUT<90 SINGULAR 
GOOD 0 0.039 OPPOSITE 0 0.039 OPPOSITE
via_Vy2_16a_ME_good = via_Vy2_16a_ME NOT via_Vy2_16a_ME_bad
//;beginning of the Vy.EN.16a derivations
 
Q: 
Vy2_EN_16a_ME {
@ Vy enclosure by Mxy+1 (width = 0.032um) for two opposite sides with the other two sides >= 0um, except INST region >= 0.039um
 err1 = COPY via_Vy2_16a_ME_bad
 err1 NOT INSIDE INST
}

Q: 
Vy2_EN_1_DFM1 {
@ Recommended square Vy enclosure by M1/Mxy is defined by either Vy.EN.2.DFM or Vy.EN.3.DFM or Vy.EN.2b.DFM
 err1 = 1XV2N NOT INSIDE M2
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.2.DFM derivations
via_Vy_2_2_R_bad = RECTANGLE ENCLOSURE 1XV2N M2 ABUT<90 SINGULAR 
GOOD 0.007 0.050 OPPOSITE 0.007 0.050 OPPOSITE
via_Vy_2_2_R_good = 1XV2N NOT via_Vy_2_2_R_bad
//;end of the Vy.EN.2.DFM derivations
 
Q: 
Vy2_EN_2_DFM1 {
@ Recommended square Vy enclosure by M1/Mxy for two opposite sides with the other two sides >= 0.007um, except FUSEMK1 region. >= 0.05um
 err1 = (via_Vy_2_2_R_bad NOT via_Vy_2_3_R_good) NOT INSIDE FUSEMK1
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy2_EN_2b_DFM1 {
@ Recommended enclosure by M1 or Mxy (width < 0.05um) along width direction must be equal or 1nm difference (M1/Mxy is the metal underneath Vy.)
 chk_Mxy = (INT [M2] < 0.05 ABUT<90 OPPOSITE) TOUCH EDGE (M2 WITH WIDTH < 0.05)
 side_en = ENC V2N chk_Mxy < 0.018 ABUT<90 OPPOSITE
 side_en_EDGE = ENC [V2N] chk_Mxy < 0.018 ABUT<90 OPPOSITE
 err1 = DFM PROPERTY V2N side_en OVERLAP ABUT ALSO MULTI [-= COUNT(side_en)] >= 2 [+= ((MIN(EW(side_en)) == MAX(EW(side_en))) || (MIN(EW(side_en)) == ABS(MAX(EW(side_en)) - 0.001))) ? 1 : 0] == 0
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.3.DFM derivations
via_Vy_2_3_R_bad = RECTANGLE ENCLOSURE 1XV2N M2 ABUT<90 SINGULAR 
GOOD 0.02 0.02 0.02 0.02 OPPOSITE
via_Vy_2_3_R_good = 1XV2N NOT via_Vy_2_3_R_bad
//;end of the Vy.EN.3.DFM derivations
 
Q: 
Vy2_EN_3_DFM1 {
@ Recommended square Vy enclosure by M1, Mxy for all sides to avoid high Rc, except FUSEMK1 region >= 0.02um
 err1 = (via_Vy_2_3_R_bad NOT via_Vy_2_2_R_good) NOT INSIDE FUSEMK1
 err2 = ((ENC [1XV2N] M2 < 0.02 ABUT<90 SINGULAR) NOT TOUCH EDGE via_Vy_2_2_R_good) NOT INSIDE EDGE FUSEMK1
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

#ENDIF

 
Q: 
Vy2_EN_1 {
@ 1X square Vy must be fully enclosed by M1 or Mxy
@ where M1/Mxy is the metal layer directly underneath Vy, Vy enclosure by M1 or Mxy must follow either Vy.EN.2 or Vy.EN.3
 err1 = 1XV2N NOT M2
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.2 derivations
via_Vy_2_2_bad = RECTANGLE ENCLOSURE 1XV2N M2 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0 0.024 OPPOSITE 0 0.024 OPPOSITE
via_Vy_2_2_good = 1XV2N NOT via_Vy_2_2_bad
//;end of the Vy.EN.2 derivations
 
//;beginning of the Vy.EN.3 derivations
via_Vy_2_3_bad = RECTANGLE ENCLOSURE 1XV2N M2 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.015 0.015 0.015 0.015 OPPOSITE
via_Vy_2_3_good = 1XV2N NOT via_Vy_2_3_bad
via_Vy_2_2_3_good = OR via_Vy_2_2_good via_Vy_2_3_good
//;end of the Vy.EN.3 derivations
 
Q: 
Vy2_EN_2_3 {
@ Vy.EN.2: Vy enclosure by M1 or Mxy when enclosure by M1 or Mxy on either perpendicular direction >= 0um, except V1 in INST region >= 0.024um
@ Vy.EN.3: Vy enclosure by M1 or Mxy for all sides, except V1 in INST region >= 0.015
 err1 = via_Vy_2_2_bad NOT via_Vy_2_2_3_good
 // 
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy2_EN_4 {
@ Vy enclosure by Mxy in adjacent S1 side, where Mxy is the metal layer directly underneath Vy >= 0.004um
@ When:
@ 1. Mxy width W: 0.036um <= W <= 0.041um
@ 2. Space: 0.058um <= S1 < 0.063um, the PRL >= 0.083um
@ 3. The opposite space S2 >= 0.069um
 met_wid_all = M2 WITH WIDTH > 0.036-GLOBAL_TOLERANCE <= 0.041
 met_err_RAW_a = EXT [met_wid_all] M2 >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW_b = EXT met_wid_all M2 >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW_c = EXT met_wid_all [M2] >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_PRL = DFM PROPERTY met_err_RAW_b met_err_RAW_c OVERLAP ABUT ALSO MULTI [-= max(LENGTH(met_err_RAW_c))] >= 0.083
 // 
 met_err_EGE_a = met_err_RAW_a COIN EDGE (DFM COPY met_err_PRL EDGE)
 met_err_EGE_b = ENC V2N [met_err_EGE_a] < 0.004 ABUT<90 OPPOSITE
 met_err_EGE_c = INT met_err_EGE_b [M2] > 0.036-GLOBAL_TOLERANCE <= 0.041 ABUT<90 OPPOSITE MEASURE COIN
 met_err_EGE_d = EXT (met_err_EGE_c) M2 < 0.069 ABUT<90 OPPOSITE
 met_err_EGE_e = met_err_EGE_b COIN EDGE M2
 err1 = INT met_err_EGE_d [met_err_EGE_e] > 0.036-GLOBAL_TOLERANCE <= 0.041 ABUT<90 OPPOSITE
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}
 
Q: 
Vy2_EN_5 {
@ Vy enclosure by Mxy in adjacent S1 side, where Mxy is the metal layer directly underneath Vy >= 0.004um
@ When:
@ 1. Mxy width W: 0.042um < W <= 0.05um
@ 2. Space: 0.058um <= S1 <= 0.067um, the PRL >= 0.083um
 met_wid_all = M2 WITH WIDTH > 0.042 <= 0.05
 met_err_RAW_TMP = EXT met_wid_all [M2] >= 0.058 < 0.067+GLOBAL_TOLERANCE ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW = EXT met_err_RAW_TMP [M2] >= 0.058 < 0.067+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 // 
 met_jog_ALL = M2_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M2
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW met_wid_all OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.083 [+= COUNT(met_wid_all)] > 0
 met_err_EGE = M2 COIN EDGE (met_err_RAW COIN EDGE (met_err_PRL COIN EDGE met_wid_all))
 err1 = ENC [V2N] met_err_EGE < 0.004 ABUT<90 OPPOSITE
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}
 
Q: 
Vy2_EN_8 {
@ Vy enclosure by Mxy in adjacent S1 side, where Mxy is the metal layer directly underneath Vy >= 0.004um
@ When:
@ 1. Mxy width W: 0.051um <= W <= 0.112um
@ 2. Space: 0.058um <= S1 <= 0.094um, the PRL >= 0.083um
@ DRC doesn't check Vy:
@ a) Two Vys with space <= 0.1um in Mxy and 1.25xMy/Mxy+1 intersection region.
@ b) One Vy and one rectangular Vy with space <= 0.1um in Mxy and 1.25xMy/Mxy+1 intersection region
 met_wid_all = M2 WITH WIDTH > 0.051-GLOBAL_TOLERANCE <= 0.112
 met_err_RAW_TMP = EXT met_wid_all [M2] >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW = EXT met_err_RAW_TMP [M2] >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 // 
 met_jog_ALL = M2_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M2
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW met_wid_all OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.083 [+= COUNT(met_wid_all)] > 0
 met_err_EGE = M2 COIN EDGE (met_err_RAW COIN EDGE (met_err_PRL COIN EDGE met_wid_all))
 via_group_all = SIZE V2 BY 0.05 INSIDE OF (M2 AND M3) STEP 0.02
 via_group_real = V2 INTERACT (via_group_all INTERACT V2 >= 2)
 err1 = ENC (V2N NOT via_group_real) met_err_EGE < 0.004 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy2_EN_9 {
@ Vy enclosure by M1/Mxy in adjacent S1 side, where M1/Mxy is the metal layer directly underneath Vy >= 0.004um
@ When:
@ 1. M1/Mxy dimension along enclosure direction: 0.113um <= L <= 0.201um
@ 2. Space: 0.058um <= S1 <= 0.094um, the PRL >= 0.083um
 met_wid_all = INT [M2] > 0.113-GLOBAL_TOLERANCE <= 0.201 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 met_err_RAW = EXT [met_wid_all] M2 >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 met_jog_ALL = M2_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M2
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.083
 met_err_EGE = M2 COIN EDGE (met_err_RAW COIN EDGE met_err_PRL)
 err1 = ENC V2N met_err_EGE < 0.004 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy2_EN_10 {
@ Vy enclosure by M1/Mxy in adjacent S1 side, where M1/Mxy is the metal layer directly underneath Vy >= 0.014um
@ When:
@ 1. M1/Mxy width W: dimension along enclosure direction L >= 0.202um
@ 2. Space: 0.058um <= S1 <= 0.094um, PRL >= 0.083um
 met_wid_all = INT (M2) <= 0.202-GLOBAL_TOLERANCE ABUT<90 OPPOSITE EXCLUDE SHIELDED
 met_err_RAW = EXT [met_wid_all] M2 >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 met_jog_ALL = M2_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M2
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.083
 met_err_EGE = M2 COIN EDGE (met_err_RAW COIN EDGE met_err_PRL)
 err1 = ENC V2N met_err_EGE < 0.014 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy2_EN_11 {
@ Vy bar must fully enclosure by Mxy (including M1) where Mxy is the metal layer directly underneath Vy bar >= 0.2um
 err1 = ENC V2_BAR_100_all M2 < 0.2 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err2 = ENC V2_BAR_450_all M2 < 0.2 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}
 

#IFDEF DFM_RULES_PRIORITY_1 YES

 
Q: 
Vy2_EN_14_DFM1 {
@ Recommended square Vy fully enclosure by Mxy+1/1.25xMy is defined by either Vy.EN.16.DFM, Vy.EN.16a.DFM or Vy.EN.16b.DFM, which Mxy+1/1.25xMy is the metal layer directly above Vy
 err1 = 1XV2N NOT INSIDE M3
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.16.DFM derivations
via_Vy_2_16_R_bad = RECTANGLE ENCLOSURE 1XV2N M3 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.020 0.020 0.020 0.020 OPPOSITE
via_Vy_2_16_R_good = 1XV2N NOT via_Vy_2_16_R_bad
//;end of the Vy.EN.16.DFM derivations
 
Q: 
Vy2_EN_16_DFM1 {
@ Recommended square Vy enclosure by Mxy+1/1.25xMy for all sides >= 0.02um
 err1 = via_Vy_2_16_R_bad NOT (OR via_Vy_2_16a_R_good via_Vy_2_16b_R_good)
 err2 = (ENC [1XV2N] M3 < 0.02 ABUT<90 SINGULAR) NOT TOUCH EDGE (OR via_Vy_2_16a_R_good via_Vy_2_16b_R_good)
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.16a.DFM derivations
met_Vy2_16a_R = M3 WITH WIDTH < 0.05
via_Vy2_16a_R = 1XV2N NOT OUTSIDE met_Vy2_16a_R
via_Vy_2_16a_R_bad = RECTANGLE ENCLOSURE via_Vy2_16a_R M3 ABUT<90 SINGULAR 
GOOD 0.007 0.050 OPPOSITE 0.007 0.050 OPPOSITE
via_Vy_2_16a_R_good = via_Vy2_16a_R NOT via_Vy_2_16a_R_bad
//;end of the Vy.EN.16a.DFM derivations
 
Q: 
Vy2_EN_16a_DFM1 {
@ Recommended square Vy enclosure by Mxy+1/1.25xMy (width < 0.05um) for two opposite sides with the other two sides >= 0.007um. >= 0.05um
 err1 = via_Vy_2_16a_R_bad NOT (OR via_Vy_2_16_R_good via_Vy_2_16b_R_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.16b.DFM derivations
via_Vy2_16b_R = (1XV2N OUTSIDE met_Vy2_16a_R) NOT OUTSIDE M3
via_Vy_2_16b_R_bad = RECTANGLE ENCLOSURE via_Vy2_16b_R M3 ABUT<90 SINGULAR 
GOOD 0.009 0.050 OPPOSITE 0.009 0.050 OPPOSITE
via_Vy_2_16b_R_good = via_Vy2_16b_R NOT via_Vy_2_16b_R_bad
//;end of the Vy.EN.16.DFM derivations
 
Q: 
Vy2_EN_16b_DFM1 {
@ Recommended square Vy enclosure by Mxy+1/1.25xMy (width >= 0.05um) for two opposite sides with the other two sides >= 0.009um. >= 0.05um
 err1 = via_Vy_2_16b_R_bad NOT (OR via_Vy_2_16_R_good via_Vy_2_16a_R_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

#ENDIF

 
//;beginning of the Vy.EN.13 derivations
via_Vy2_13_bad = RECTANGLE ENCLOSURE 1XV2N M3 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.015 0.015 0.015 0.015 OPPOSITE
via_Vy_2_13_good = 1XV2N NOT via_Vy2_13_bad
//;beginning of the Vy.EN.13 derivations
 
Q: 
Vy2_EN_12_13 {
@ 1X square Vy must be fully enclosure by Mxy+1/1.25xMy where Mxy+1/1.25xMy is the metal layer directly above Vy
@ Enclosure by Mxy+1/1.25x My must follow one of Vy.En.15 or Vy.EN.16 or Vy.EN.16a or Vy.EN.16b or Vy.EN.16c or Vy.EN.16d or Vy.EN.16e or Vy.EN.16f or Vy.EN.16g or Vy.EN.17 or Vy.EN.18 or Vy.EN.19 or Vy.EN.20 or Vy.EN.21
@ Vy.EN.13: Vy enclosure by Mxy+1 for all sides >= 0.015um
 err1 = 1XV2N NOT M3
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.16a derivations
met_Vy2_16a = M3 WITH WIDTH > 0.032 <= 0.046
via_Vy2_16a = (1XV2N INTERACT met_Vy2_16a) NOT via_Vy2_16f_16g_good
via_Vy2_16a_bad = RECTANGLE ENCLOSURE via_Vy2_16a M3 ABUT<90 SINGULAR 
GOOD 0.003 0.032 OPPOSITE 0.003 0.047 OPPOSITE
via_Vy2_16a_good = via_Vy2_16a NOT via_Vy2_16a_bad
//;beginning of the Vy.EN.16a derivations
 
Q: 
Vy2_EN_16a {
@ Vy enclosure by Mxy+1 (0.032um < short side of Mxy+1 width <= 0.046um) for opposite side >= 0.032um with the two sides >= 0.003um, except V1 in INST region >= 0.047um
 err1 = copy via_Vy2_16a_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.16b derivations
met_Vy2_16b = M3 WITH WIDTH > 0.046 <= 0.09
via_Vy2_16b_TMP = 1XV2N INTERACT met_Vy2_16b
via_Vy2_16b = via_Vy2_16b_TMP NOT (OR via_Vy_2_13_good via_Vy2_16a_good via_Vy2_16f_16g_good)
via_Vy2_16b_bad = RECTANGLE ENCLOSURE via_Vy2_16b M3 ABUT<90 SINGULAR 
GOOD 0.008 0.024 OPPOSITE 0.008 0.024 OPPOSITE
via_Vy2_16b_good = via_Vy2_16b NOT via_Vy2_16b_bad
//;beginning of the Vy.EN.16b derivations
 
Q: 
Vy2_EN_16b {
@ Vy enclosure by Mxy+1 for two opposite sides with the other two sides >= 0.008um (0.046um < short side of Mxy+1 width <= 0.09um), except V1 in INST region >= 0.024um
 err1 = copy via_Vy2_16b_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.16c derivations
met_Vy2_width_096_200 = M3 WITH WIDTH > 0.09 <= 0.2
met_Vy2_16c = copy met_Vy2_width_096_200
via_Vy2_16c_TMP = 1XV2N INTERACT met_Vy2_16c
via_Vy2_16c = via_Vy2_16c_TMP NOT (OR via_Vy_2_13_good via_Vy2_16a_good via_Vy2_16b_good via_Vy2_16f_16g_good)
via_Vy2_16c_bad = RECTANGLE ENCLOSURE via_Vy2_16c M3 ABUT<90 SINGULAR 
GOOD 0.014 0.024 OPPOSITE 0.014 0.024 OPPOSITE
via_Vy2_16c_good = via_Vy2_16c NOT via_Vy2_16c_bad
//;end of the Vy.EN.16c derivations
 
//;beginning of the Vy.EN.16d derivations
met_Vy2_16d = copy met_Vy2_width_096_200
via_Vy2_16d_TMP_1 = 1XV2N INTERACT met_Vy2_16d
via_Vy2_16d_TMP = via_Vy2_16d_TMP_1 NOT (OR via_Vy_2_13_good via_Vy2_16a_good via_Vy2_16b_good via_Vy2_16f_16g_good)
via_Vy2_16d_bad_TMP = RECTANGLE ENCLOSURE via_Vy2_16d_TMP M3 ABUT<90 SINGULAR 
GOOD 0 0.009 OPPOSITE 0 0.024 OPPOSITE
via_Vy2_16d = via_Vy2_16d_TMP NOT via_Vy2_16d_bad_TMP
via_Vy2_16d_bad = RECTANGLE ENCLOSURE via_Vy2_16d M3 ABUT<90 SINGULAR 
GOOD 0.009 OPPOSITE 0.024 OPPOSITE 0.058 OPPOSITE 0.058 OPPOSITE 
GOOD 0.024 OPPOSITE 0.009 OPPOSITE 0.058 OPPOSITE 0.058 OPPOSITE
via_Vy2_16d_good = via_Vy2_16d NOT via_Vy2_16d_bad
//;end of the Vy.EN.16d derivations
via_Vy2_16_abcd_good = OR via_Vy2_16a_good via_Vy2_16b_good via_Vy2_16c_good via_Vy2_16d_good
 
Q: 
Vy2_EN_16c {
@ Vy enclosure by Mxy+1 for two opposite sides with the other two sides >= 0.014um (0.09um < short side of Mxy+1 width <= 0.2um), except V1 in INST region >= 0.024um
 err1 = via_Vy2_16c_bad NOT via_Vy2_16d_good // exclude Vy.en.16d
 err2 = ENC via_Vy2_16c M3 < 0.009 ABUT<90 SINGULAR REGION
 // 
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy2_EN_16d {
@ Vy enclosure by Mxy+1 for at least two adjacent edges with the other two sides >= 0.024um and >= 0.009um (0.09um < short side of Mxy+1 width <= 0.2um), except V1 in INST region >= 0.058um
 err1 = via_Vy2_16d_bad NOT via_Vy2_16c_good // exclude Vy.en.16c
 err2 = ENC via_Vy2_16d M3 < 0.009 ABUT<90 SINGULAR REGION
 // 
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.16e derivations
met_Vy2_16e = M3 WITH WIDTH > 0.2
via_Vy2_16e_TMP = 1XV2N INTERACT met_Vy2_16e
via_Vy2_16e = via_Vy2_16e_TMP NOT (OR via_Vy_2_13_good via_Vy2_16_abcd_good via_Vy2_16f_16g_good)
via_Vy2_16e_bad = RECTANGLE ENCLOSURE via_Vy2_16e M3 ABUT<90 SINGULAR 
GOOD 0.014 0.024 OPPOSITE 0.014 0.024 OPPOSITE
via_Vy2_16e_good = via_Vy2_16e NOT via_Vy2_16e_bad
//;end of the Vy.EN.16e derivations
 
Q: 
Vy2_EN_16e {
@ Vy enclosure by Mxy+1 for two opposite sides with the other two sides >= 0.014um (short side of Mxy+1 width > 0.2um) >= 0.024um
 err1 = copy via_Vy2_16e_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.16f derivations
met_Vy2_16f_16g_t = M3 WITH WIDTH == 0.032
met_Vy2_16f_16g = met_Vy2_16f_16g_t INTERACT 1XV2N
met_Vy2_16f_16g_side = INT [met_Vy2_16f_16g] == 0.032 ABUT<90 OPPOSITE
via_Vy2_16f_16g = 1XV2N INTERACT met_Vy2_16f_16g
via_Vy2_16f_16g_non_iso_end = via_Vy2_16f_16g NOT TOUCH EDGE met_Vy2_16f_16g_side
via_Vy2_16f_16g_non_iso_side = via_Vy2_16f_16g TOUCH EDGE met_Vy2_16f_16g_side
via_Vy2_16f_16g_non_iso_s1 = EXT [via_Vy2_16f_16g_non_iso_end] M3 < 0.130 ABUT<90 OPPOSITE MEASURE ALL
via_Vy2_16f_16g_non_iso_s2 = EXT [via_Vy2_16f_16g_non_iso_side] M3 < 0.090 ABUT<90 OPPOSITE EXTENDED 0.13 MEASURE ALL
via_Vy2_16f_16g_non_iso_via = via_Vy2_16f_16g WITH EDGE (OR EDGE via_Vy2_16f_16g_non_iso_s1 via_Vy2_16f_16g_non_iso_s2)
via_Vy2_16f_16g_iso_via = via_Vy2_16f_16g NOT via_Vy2_16f_16g_non_iso_via
via_Vy2_16f_non_iso_bad_1 = RECTANGLE ENCLOSURE via_Vy2_16f_16g_non_iso_via M3 ABUT<90 SINGULAR 
GOOD 0 0.036 OPPOSITE 0 0.036 OPPOSITE
via_Vy2_16f_non_iso_bad_2 = RECTANGLE ENCLOSURE via_Vy2_16f_16g_non_iso_via M3 ABUT<90 SINGULAR 
GOOD 0 0.036 OPPOSITE 0 0.043 OPPOSITE 
GOOD 0 0.037 OPPOSITE 0 0.042 OPPOSITE 
GOOD 0 0.038 OPPOSITE 0 0.041 OPPOSITE 
GOOD 0 0.039 OPPOSITE 0 0.040 OPPOSITE
via_Vy2_16f_non_iso_good = via_Vy2_16f_16g_non_iso_via NOT (OR via_Vy2_16f_non_iso_bad_1 via_Vy2_16f_non_iso_bad_2)
//;end of the Vy.EN.16f derivations
 
//;beginning of the Vy.EN.16g derivations
via_Vy2_16g_iso_bad_1 = RECTANGLE ENCLOSURE via_Vy2_16f_16g_iso_via M3 ABUT<90 SINGULAR 
GOOD 0 0.030 OPPOSITE 0 0.030 OPPOSITE
via_Vy2_16g_iso_bad_2 = RECTANGLE ENCLOSURE via_Vy2_16f_16g_iso_via M3 ABUT<90 SINGULAR 
GOOD 0 0.030 OPPOSITE 0 0.039 OPPOSITE 
GOOD 0 0.031 OPPOSITE 0 0.038 OPPOSITE 
GOOD 0 0.032 OPPOSITE 0 0.037 OPPOSITE 
GOOD 0 0.033 OPPOSITE 0 0.036 OPPOSITE 
GOOD 0 0.034 OPPOSITE 0 0.035 OPPOSITE
via_Vy2_16g_iso_good = via_Vy2_16f_16g_iso_via NOT (OR via_Vy2_16g_iso_bad_1 via_Vy2_16g_iso_bad_2)
//;end of the Vy.EN.16g derivations
via_Vy2_16f_16g_good = OR via_Vy2_16f_non_iso_good via_Vy2_16g_iso_good
 
Q: 
Vy2_EN_16f {
@ Total Vy enclosure by Mxy+1 (Mxy+1 width = 0.032um, both two opposite sides(EN1A/EN2A) >= 0.036um)with the other two sides >= 0um. >= 0.079um
 err1 = COPY via_Vy2_16f_non_iso_bad_1
 err2 = COPY via_Vy2_16f_non_iso_bad_2
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy2_EN_16g {
@ Total Vy enclosure by Mxy+1 (Mxy+1 width = 0.032um, both two opposite sides >= 0.03um) with the other two sides(EN1A/EN2A) >= 0um (for iso Vy condition only) >= 0.069um
@ Iso Vy condition definition:
@ S1 > 0.13um and S2 > 0.09um, where S1 is via space to metal in length direction and S2 is via space to metal in width direction
 err1 = COPY via_Vy2_16g_iso_bad_1
 err2 = COPY via_Vy2_16g_iso_bad_2
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy2_EN_25 {
@ Vy bar must fully enclosure by Mxy+1/1.25xMy where Mxy+1/1.25xMy is the metal layer directly above Vy bar >= 0.2um
 err1 = ENC V2_BAR_100_all M3 < 0.2 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err2 = ENC V2_BAR_450_all M3 < 0.2 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}


//Vy3

Q: 
Vy3_EN_2a_ME {
@ Vy enclosure by M1 or Mxy (width < 0.05um) for two opposite sides with the other two side >= 0um (M1/Mxy is the metal underneath Vy), except INST region >= 0.032um
 err1 = via_Vy_3_2a_bad_ME NOT via_Vy_3_2c_good_ME
 err1 NOT INSIDE INST
}
 
//;beginning of the Vy.EN.2c derivations
met_Vy_3_2c_ME = M3 WITH WIDTH >= 0.050
via_Vy_3_2c_ME = 1XV3N INTERACT met_Vy_3_2c_ME
via_Vy_3_2c_bad_ME = RECTANGLE ENCLOSURE via_Vy_3_2c_ME M3 ABUT<90 SINGULAR 
GOOD 0.009 0.025 OPPOSITE 0.009 0.025 OPPOSITE
via_Vy_3_2c_good_ME = via_Vy_3_2c_ME NOT via_Vy_3_2c_bad_ME
//;end of the Vy.EN.2c derivations
 
Q: 
Vy3_EN_2c_ME {
@ Vy enclosure by M1 or Mxy (width >= 0.05um) for two opposite sides with the other two side >= 0.009um (M1/Mxy is the metal underneath Vy), except INST region >= 0.025um
 err1 = via_Vy_3_2c_bad_ME NOT via_Vy_3_2a_good_ME
 err1 NOT INSIDE INST
}
 
//;beginning of the Vy.EN.16a derivations
met_Vy3_16a_ME = M4 WITH WIDTH == 0.032
via_Vy3_16a_ME = 1XV3N INTERACT met_Vy3_16a_ME
via_Vy3_16a_ME_bad = RECTANGLE ENCLOSURE via_Vy3_16a_ME M4 ABUT<90 SINGULAR 
GOOD 0 0.039 OPPOSITE 0 0.039 OPPOSITE
via_Vy3_16a_ME_good = via_Vy3_16a_ME NOT via_Vy3_16a_ME_bad
//;beginning of the Vy.EN.16a derivations
 
Q: 
Vy3_EN_16a_ME {
@ Vy enclosure by Mxy+1 (width = 0.032um) for two opposite sides with the other two sides >= 0um, except INST region >= 0.039um
 err1 = COPY via_Vy3_16a_ME_bad
 err1 NOT INSIDE INST
}

Q: 
Vy3_EN_1_DFM1 {
@ Recommended square Vy enclosure by M1/Mxy is defined by either Vy.EN.2.DFM or Vy.EN.3.DFM or Vy.EN.2b.DFM
 err1 = 1XV3N NOT INSIDE M3
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.2.DFM derivations
via_Vy_3_2_R_bad = RECTANGLE ENCLOSURE 1XV3N M3 ABUT<90 SINGULAR 
GOOD 0.007 0.050 OPPOSITE 0.007 0.050 OPPOSITE
via_Vy_3_2_R_good = 1XV3N NOT via_Vy_3_2_R_bad
//;end of the Vy.EN.2.DFM derivations
 
Q: 
Vy3_EN_2_DFM1 {
@ Recommended square Vy enclosure by M1/Mxy for two opposite sides with the other two sides >= 0.007um, except FUSEMK1 region. >= 0.05um
 err1 = (via_Vy_3_2_R_bad NOT via_Vy_3_3_R_good) NOT INSIDE FUSEMK1
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy3_EN_2b_DFM1 {
@ Recommended enclosure by M1 or Mxy (width < 0.05um) along width direction must be equal or 1nm difference (M1/Mxy is the metal underneath Vy.)
 chk_Mxy = (INT [M3] < 0.05 ABUT<90 OPPOSITE) TOUCH EDGE (M3 WITH WIDTH < 0.05)
 side_en = ENC V3N chk_Mxy < 0.018 ABUT<90 OPPOSITE
 side_en_EDGE = ENC [V3N] chk_Mxy < 0.018 ABUT<90 OPPOSITE
 err1 = DFM PROPERTY V3N side_en OVERLAP ABUT ALSO MULTI [-= COUNT(side_en)] >= 2 [+= ((MIN(EW(side_en)) == MAX(EW(side_en))) || (MIN(EW(side_en)) == ABS(MAX(EW(side_en)) - 0.001))) ? 1 : 0] == 0
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.3.DFM derivations
via_Vy_3_3_R_bad = RECTANGLE ENCLOSURE 1XV3N M3 ABUT<90 SINGULAR 
GOOD 0.02 0.02 0.02 0.02 OPPOSITE
via_Vy_3_3_R_good = 1XV3N NOT via_Vy_3_3_R_bad
//;end of the Vy.EN.3.DFM derivations
 
Q: 
Vy3_EN_3_DFM1 {
@ Recommended square Vy enclosure by M1, Mxy for all sides to avoid high Rc, except FUSEMK1 region >= 0.02um
 err1 = (via_Vy_3_3_R_bad NOT via_Vy_3_2_R_good) NOT INSIDE FUSEMK1
 err2 = ((ENC [1XV3N] M3 < 0.02 ABUT<90 SINGULAR) NOT TOUCH EDGE via_Vy_3_2_R_good) NOT INSIDE EDGE FUSEMK1
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: 
Vy3_EN_1 {
@ 1X square Vy must be fully enclosed by M1 or Mxy
@ where M1/Mxy is the metal layer directly underneath Vy, Vy enclosure by M1 or Mxy must follow either Vy.EN.2 or Vy.EN.3
 err1 = 1XV3N NOT M3
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.2 derivations
via_Vy_3_2_bad = RECTANGLE ENCLOSURE 1XV3N M3 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0 0.024 OPPOSITE 0 0.024 OPPOSITE
via_Vy_3_2_good = 1XV3N NOT via_Vy_3_2_bad
//;end of the Vy.EN.2 derivations
 
//;beginning of the Vy.EN.3 derivations
via_Vy_3_3_bad = RECTANGLE ENCLOSURE 1XV3N M3 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.015 0.015 0.015 0.015 OPPOSITE
via_Vy_3_3_good = 1XV3N NOT via_Vy_3_3_bad
via_Vy_3_2_3_good = OR via_Vy_3_2_good via_Vy_3_3_good
//;end of the Vy.EN.3 derivations
 
Q: 
Vy3_EN_2_3 {
@ Vy.EN.2: Vy enclosure by M1 or Mxy when enclosure by M1 or Mxy on either perpendicular direction >= 0um, except V1 in INST region >= 0.024um
@ Vy.EN.3: Vy enclosure by M1 or Mxy for all sides, except V1 in INST region >= 0.015
 err1 = via_Vy_3_2_bad NOT via_Vy_3_2_3_good
 // 
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy3_EN_4 {
@ Vy enclosure by Mxy in adjacent S1 side, where Mxy is the metal layer directly underneath Vy >= 0.004um
@ When:
@ 1. Mxy width W: 0.036um <= W <= 0.041um
@ 2. Space: 0.058um <= S1 < 0.063um, the PRL >= 0.083um
@ 3. The opposite space S2 >= 0.069um
 met_wid_all = M3 WITH WIDTH > 0.036-GLOBAL_TOLERANCE <= 0.041
 met_err_RAW_a = EXT [met_wid_all] M3 >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW_b = EXT met_wid_all M3 >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW_c = EXT met_wid_all [M3] >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_PRL = DFM PROPERTY met_err_RAW_b met_err_RAW_c OVERLAP ABUT ALSO MULTI [-= max(LENGTH(met_err_RAW_c))] >= 0.083
 // 
 met_err_EGE_a = met_err_RAW_a COIN EDGE (DFM COPY met_err_PRL EDGE)
 met_err_EGE_b = ENC V3N [met_err_EGE_a] < 0.004 ABUT<90 OPPOSITE
 met_err_EGE_c = INT met_err_EGE_b [M3] > 0.036-GLOBAL_TOLERANCE <= 0.041 ABUT<90 OPPOSITE MEASURE COIN
 met_err_EGE_d = EXT (met_err_EGE_c) M3 < 0.069 ABUT<90 OPPOSITE
 met_err_EGE_e = met_err_EGE_b COIN EDGE M3
 err1 = INT met_err_EGE_d [met_err_EGE_e] > 0.036-GLOBAL_TOLERANCE <= 0.041 ABUT<90 OPPOSITE
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}
 
Q: 
Vy3_EN_5 {
@ Vy enclosure by Mxy in adjacent S1 side, where Mxy is the metal layer directly underneath Vy >= 0.004um
@ When:
@ 1. Mxy width W: 0.042um < W <= 0.05um
@ 2. Space: 0.058um <= S1 <= 0.067um, the PRL >= 0.083um
 met_wid_all = M3 WITH WIDTH > 0.042 <= 0.05
 met_err_RAW_TMP = EXT met_wid_all [M3] >= 0.058 < 0.067+GLOBAL_TOLERANCE ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW = EXT met_err_RAW_TMP [M3] >= 0.058 < 0.067+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 // 
 met_jog_ALL = M3_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M3
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW met_wid_all OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.083 [+= COUNT(met_wid_all)] > 0
 met_err_EGE = M3 COIN EDGE (met_err_RAW COIN EDGE (met_err_PRL COIN EDGE met_wid_all))
 err1 = ENC [V3N] met_err_EGE < 0.004 ABUT<90 OPPOSITE
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}
 
Q: 
Vy3_EN_8 {
@ Vy enclosure by Mxy in adjacent S1 side, where Mxy is the metal layer directly underneath Vy >= 0.004um
@ When:
@ 1. Mxy width W: 0.051um <= W <= 0.112um
@ 2. Space: 0.058um <= S1 <= 0.094um, the PRL >= 0.083um
@ DRC doesn't check Vy:
@ a) Two Vys with space <= 0.1um in Mxy and 1.25xMy/Mxy+1 intersection region.
@ b) One Vy and one rectangular Vy with space <= 0.1um in Mxy and 1.25xMy/Mxy+1 intersection region
 met_wid_all = M3 WITH WIDTH > 0.051-GLOBAL_TOLERANCE <= 0.112
 met_err_RAW_TMP = EXT met_wid_all [M3] >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW = EXT met_err_RAW_TMP [M3] >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 // 
 met_jog_ALL = M3_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M3
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW met_wid_all OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.083 [+= COUNT(met_wid_all)] > 0
 met_err_EGE = M3 COIN EDGE (met_err_RAW COIN EDGE (met_err_PRL COIN EDGE met_wid_all))
 via_group_all = SIZE V3 BY 0.05 INSIDE OF (M3 AND M4) STEP 0.02
 via_group_real = V3 INTERACT (via_group_all INTERACT V3 >= 2)
 err1 = ENC (V3N NOT via_group_real) met_err_EGE < 0.004 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
Vy3_EN_9 {
@ Vy enclosure by M1/Mxy in adjacent S1 side, where M1/Mxy is the metal layer directly underneath Vy >= 0.004um
@ When:
@ 1. M1/Mxy dimension along enclosure direction: 0.113um <= L <= 0.201um
@ 2. Space: 0.058um <= S1 <= 0.094um, the PRL >= 0.083um
 met_wid_all = INT [M3] > 0.113-GLOBAL_TOLERANCE <= 0.201 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 met_err_RAW = EXT [met_wid_all] M3 >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 met_jog_ALL = M3_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M3
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.083
 met_err_EGE = M3 COIN EDGE (met_err_RAW COIN EDGE met_err_PRL)
 err1 = ENC V3N met_err_EGE < 0.004 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy3_EN_10 {
@ Vy enclosure by M1/Mxy in adjacent S1 side, where M1/Mxy is the metal layer directly underneath Vy >= 0.014um
@ When:
@ 1. M1/Mxy width W: dimension along enclosure direction L >= 0.202um
@ 2. Space: 0.058um <= S1 <= 0.094um, PRL >= 0.083um
 met_wid_all = INT (M3) <= 0.202-GLOBAL_TOLERANCE ABUT<90 OPPOSITE EXCLUDE SHIELDED
 met_err_RAW = EXT [met_wid_all] M3 >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 met_jog_ALL = M3_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M3
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.083
 met_err_EGE = M3 COIN EDGE (met_err_RAW COIN EDGE met_err_PRL)
 err1 = ENC V3N met_err_EGE < 0.014 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy3_EN_11 {
@ Vy bar must fully enclosure by Mxy (including M1) where Mxy is the metal layer directly underneath Vy bar >= 0.2um
 err1 = ENC V3_BAR_100_all M3 < 0.2 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err2 = ENC V3_BAR_450_all M3 < 0.2 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}
 

#IFDEF DFM_RULES_PRIORITY_1 YES

 
Q: 
Vy3_EN_14_DFM1 {
@ Recommended square Vy fully enclosure by Mxy+1/1.25xMy is defined by either Vy.EN.16.DFM, Vy.EN.16a.DFM or Vy.EN.16b.DFM, which Mxy+1/1.25xMy is the metal layer directly above Vy
 err1 = 1XV3N NOT INSIDE M4
 err1 NOT INSIDE SealR_NOT_BULK
}
 

via_Vy_3_16_R_bad = RECTANGLE ENCLOSURE 1XV3N M4 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.020 0.020 0.020 0.020 OPPOSITE
via_Vy_3_16_R_good = 1XV3N NOT via_Vy_3_16_R_bad

Q: 
Vy3_EN_16_DFM1 {
@ Recommended square Vy enclosure by Mxy+1/1.25xMy for all sides >= 0.02um
 err1 = via_Vy_3_16_R_bad NOT (OR via_Vy_3_16a_R_good via_Vy_3_16b_R_good)
 err2 = (ENC [1XV3N] M4 < 0.02 ABUT<90 SINGULAR) NOT TOUCH EDGE (OR via_Vy_3_16a_R_good via_Vy_3_16b_R_good)
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}
 

met_Vy3_16a_R = M4 WITH WIDTH < 0.05
via_Vy3_16a_R = 1XV3N NOT OUTSIDE met_Vy3_16a_R
via_Vy_3_16a_R_bad = RECTANGLE ENCLOSURE via_Vy3_16a_R M4 ABUT<90 SINGULAR 
GOOD 0.007 0.050 OPPOSITE 0.007 0.050 OPPOSITE
via_Vy_3_16a_R_good = via_Vy3_16a_R NOT via_Vy_3_16a_R_bad

Q:  
Vy3_EN_16a_DFM1 {
@ Recommended square Vy enclosure by Mxy+1/1.25xMy (width < 0.05um) for two opposite sides with the other two sides >= 0.007um. >= 0.05um
 err1 = via_Vy_3_16a_R_bad NOT (OR via_Vy_3_16_R_good via_Vy_3_16b_R_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.16b.DFM derivations
via_Vy3_16b_R = (1XV3N OUTSIDE met_Vy3_16a_R) NOT OUTSIDE M4
via_Vy_3_16b_R_bad = RECTANGLE ENCLOSURE via_Vy3_16b_R M4 ABUT<90 SINGULAR 
GOOD 0.009 0.050 OPPOSITE 0.009 0.050 OPPOSITE
via_Vy_3_16b_R_good = via_Vy3_16b_R NOT via_Vy_3_16b_R_bad
//;end of the Vy.EN.16.DFM derivations
 
Q: 
Vy3_EN_16b_DFM1 {
@ Recommended square Vy enclosure by Mxy+1/1.25xMy (width >= 0.05um) for two opposite sides with the other two sides >= 0.009um. >= 0.05um
 err1 = via_Vy_3_16b_R_bad NOT (OR via_Vy_3_16_R_good via_Vy_3_16a_R_good)
 err1 NOT INSIDE SealR_NOT_BULK
}

#ENDIF

 
//;beginning of the Vy.EN.13 derivations
via_Vy3_13_bad = RECTANGLE ENCLOSURE 1XV3N M4 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.015 0.015 0.015 0.015 OPPOSITE
via_Vy_3_13_good = 1XV3N NOT via_Vy3_13_bad
//;beginning of the Vy.EN.13 derivations

Q:  
Vy3_EN_12_13 {
@ 1X square Vy must be fully enclosure by Mxy+1/1.25xMy where Mxy+1/1.25xMy is the metal layer directly above Vy
@ Enclosure by Mxy+1/1.25x My must follow one of Vy.En.15 or Vy.EN.16 or Vy.EN.16a or Vy.EN.16b or Vy.EN.16c or Vy.EN.16d or Vy.EN.16e or Vy.EN.16f or Vy.EN.16g or Vy.EN.17 or Vy.EN.18 or Vy.EN.19 or Vy.EN.20 or Vy.EN.21
@ Vy.EN.13: Vy enclosure by Mxy+1 for all sides >= 0.015um
 err1 = 1XV3N NOT M4
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.17 derivations
met_Vy3_17 = M4 WITH WIDTH == 0.04
via_Vy3_17 = 1XV3N INTERACT met_Vy3_17
via_Vy3_17_bad = RECTANGLE ENCLOSURE via_Vy3_17 M4 ABUT<90 SINGULAR 
GOOD 0.004 0.034 OPPOSITE 0.004 0.034 OPPOSITE
via_Vy3_17_good = via_Vy3_17 NOT via_Vy3_17_bad
//;end of the Vy.EN.17 derivations
 
//;beginning of the Vy.EN.17a derivations
met_Vy3_17a = M4 WITH WIDTH == 0.042
via_Vy3_17a = 1XV3N INTERACT met_Vy3_17a
via_Vy3_17a_bad = RECTANGLE ENCLOSURE via_Vy3_17a M4 ABUT<90 SINGULAR 
GOOD 0.005 0.034 OPPOSITE 0.005 0.034 OPPOSITE
via_Vy3_17a_good = via_Vy3_17a NOT via_Vy3_17a_bad
//;end of the Vy.EN.17a derivations
via_Vy3_17_17a_good = OR via_Vy3_17_good via_Vy3_17a_good
 
Q: 
Vy3_EN_17 {
@ Vy enclosure by 1.25xMy (width = 0.04um) for two opposite sides with the other two sides >= 0.004um. >= 0.034um
 err1 = COPY via_Vy3_17_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy3_EN_17a {
@ Vy enclosure by 1.25xMy (width = 0.042um) for two opposite sides with the other two sides >= 0.005um. >= 0.034um
 err1 = via_Vy3_17a_bad NOT via_Vy3_17_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.18 derivations
met_Vy3_18 = M4 WITH WIDTH == 0.044
via_Vy3_18 = 1XV3N INTERACT met_Vy3_18
via_Vy3_18_bad = RECTANGLE ENCLOSURE via_Vy3_18 M4 ABUT<90 SINGULAR 
GOOD 0.006 0.034 OPPOSITE 0.006 0.034 OPPOSITE
via_Vy3_18_good = via_Vy3_18 NOT via_Vy3_18_bad
//;end of the Vy.EN.18 derivations
 
//;beginning of the Vy.EN.18a derivations
met_Vy3_18a = M4 WITH WIDTH == 0.046
via_Vy3_18a = 1XV3N INTERACT met_Vy3_18a
via_Vy3_18a_bad = RECTANGLE ENCLOSURE via_Vy3_18a M4 ABUT<90 SINGULAR 
GOOD 0.007 0.034 OPPOSITE 0.007 0.034 OPPOSITE
via_Vy3_18a_good = via_Vy3_18a NOT via_Vy3_18a_bad
//;end of the Vy.EN.18a derivations
via_Vy3_18_18a_good = OR via_Vy3_18_good via_Vy3_18a_good
 
Q: 
Vy3_EN_18 {
@ Vy enclosure by 1.25xMy (width = 0.044um) for two opposite sides with the other two sides >= 0.006um. >= 0.034um
 err1 = via_Vy3_18_bad NOT via_Vy3_17_17a_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy3_EN_18a {
@ Vy enclosure by 1.25xMy (width = 0.046um) for two opposite sides with the other two sides >= 0.007um. >= 0.034um
 err1 = via_Vy3_18a_bad NOT (OR via_Vy3_17_17a_good via_Vy3_18_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.19 derivations
met_Vy3_19 = M4 WITH WIDTH >= 0.060 < 0.08
via_Vy3_19_TMP = 1XV3N INTERACT met_Vy3_19
via_Vy3_19 = via_Vy3_19_TMP NOT (OR via_Vy3_17_17a_good via_Vy3_18_18a_good)
via_Vy3_19_bad = RECTANGLE ENCLOSURE via_Vy3_19 M4 ABUT<90 SINGULAR 
GOOD 0.014 0.034 OPPOSITE 0.014 0.034 OPPOSITE
via_Vy3_19_good = via_Vy3_19 NOT via_Vy3_19_bad
//;end of the Vy.EN.19 derivations
 
Q: 
Vy3_EN_19 {
@ Vy enclosure by 1.25xMy (0.06um <= width < 0.08um) for two opposite sides with the other two sides >= 0.014um. >= 0.034um
 err1 = COPY via_Vy3_19_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.20 derivations
met_Vy3_20 = M4 WITH WIDTH == 0.080
via_Vy3_20_TMP = 1XV3N INTERACT met_Vy3_20
via_Vy3_20 = via_Vy3_20_TMP NOT (OR via_Vy3_17_17a_good via_Vy3_18_18a_good via_Vy3_19_good)
via_Vy3_20_bad = RECTANGLE ENCLOSURE via_Vy3_20 M4 ABUT<90 SINGULAR 
GOOD 0.024 0.024 0.024 0.024 OPPOSITE
via_Vy3_20_good = via_Vy3_20 NOT via_Vy3_20_bad
//;end of the Vy.EN.20 derivations
 
Q: 
Vy3_EN_20 {
@ Vy enclosure by 1.25xMy (width = 0.08um) for all sides >= 0.024um
 err1 = COPY via_Vy3_20_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the Vy.EN.21 derivations
met_Vy3_21 = M4 WITH WIDTH > 0.080
via_Vy3_21_TMP = 1XV3N INTERACT met_Vy3_21
via_Vy3_21 = via_Vy3_21_TMP NOT (OR via_Vy3_17_17a_good via_Vy3_18_18a_good via_Vy3_19_good via_Vy3_20_good)
via_Vy3_21_bad = RECTANGLE ENCLOSURE via_Vy3_21 M4 ABUT<90 SINGULAR 
GOOD 0.024 0.03 OPPOSITE 0.024 0.03 OPPOSITE
via_Vy3_21_good = via_Vy3_21 NOT via_Vy3_21_bad
//;end of the Vy.EN.21 derivations
 
Q: 
Vy3_EN_21 {
@ Vy enclosure by 1.25xMy (width > 0.08um) for two opposite sides with the other two sides >= 0.024um. >= 0.03um
 err1 = COPY via_Vy3_21_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy3_EN_23 {
@ Vy enclosure by 1.25xMy edge (between two consecutive 90-270 degree corners, length < 0.16um), when PRL > 0. >= 0.029um
 chk_edge = CONVEX EDGE M4 ANGLE1 == 90 ANGLE2 == 270 WITH LENGTH < 0.16
 err1_TMP = chk_edge TOUCH EDGE (EXT chk_edge M4_convex_270_90_edges < 0.005 ABUT==90 INTERSECTING ONLY REGION)
 err1 = ENC V3N err1_TMP < 0.029 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy3_EN_24 {
@ Vy enclosure by 1.25xMy for two opposite sides (PRL > 0) with the other side enclosure < 0.04um (corresponding edge length < 0.16um between two consecutive 90-270 degree corners) >= 0.04um
 correspond_EDG = CONVEX EDGE M4 ANGLE1 == 90 ANGLE2 == 270 WITH LENGTH < 0.16
 correspond_ENC = ENC [V3N] correspond_EDG < 0.04 ABUT<90 OPPOSITE EXTENDED 0.001
 correspond_VIA_ENC_EDGE = V3N TOUCH EDGE correspond_ENC
 correspond_VIA_EDG_CORN = INT [V3N] correspond_VIA_ENC_EDGE < 0.001 ABUT==90 INTERSECTING ONLY
 correspond_VIA_EDG = V3N TOUCH EDGE correspond_VIA_EDG_CORN
 err1_RAW = ENC [correspond_VIA_EDG] M4 < 0.04 ABUT<90 OPPOSITE EXTENDED 0.001
 err1_TMP = INT correspond_VIA_ENC_EDGE (correspond_VIA_EDG TOUCH EDGE err1_RAW) < 0.005 ABUT==90 INTERSECTING ONLY REGION
 err1 = EXPAND EDGE (V3N TOUCH EDGE err1_TMP) INSIDE BY 0.001
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
Vy3_EN_25 {
@ Vy bar must fully enclosure by Mxy+1/1.25xMy where Mxy+1/1.25xMy is the metal layer directly above Vy bar >= 0.2um
 err1 = ENC V3_BAR_100_all M4 < 0.2 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err2 = ENC V3_BAR_450_all M4 < 0.2 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}


//RVy

Q: 
RVy1_EN_1_DFM1 {
@ Recommended RVy enclosure by M1/Mxy is defined by either RVy.EN.2.DFM or RVy.EN.2a.DFM
 err1 = RV1 NOT INSIDE M1
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the RVy.EN.2.DFM derivations
via_RVy_1_2_R_bad = RECTANGLE ENCLOSURE RV1 M1 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.007 0.025 OPPOSITE 0.007 0.025 OPPOSITE
via_RVy_1_2_R_good = RV1 NOT via_RVy_1_2_R_bad
//;end of the RVy.EN.2.DFM derivations
 
Q: 
RVy1_EN_2_DFM1 {
@ Recommended RVy enclosure by M1/Mxy for two opposite sides with the other twosides >= 0.007um. >= 0.025um
 err1 = via_RVy_1_2_R_bad NOT via_RVy_1_2a_R_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the RVy.EN.2a.DFM derivations
via_RVy_1_2a_R_bad = RECTANGLE ENCLOSURE RV1 M1 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.020 0.020 0.020 0.020 OPPOSITE
via_RVy_1_2a_R_good = RV1 NOT via_RVy_1_2a_R_bad
//;end of the RVy.EN.2a.DFM derivations
 
Q: 
RVy1_EN_2a_DFM1 {
@ Recommended RVy enclosure by M1, Mxy for all sides >= 0.02um
 err1 = via_RVy_1_2a_R_bad NOT via_RVy_1_2_R_good
 err2 = (ENC [RV1] M1 < 0.02 ABUT<90 SINGULAR) NOT TOUCH EDGE via_RVy_1_2_R_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: 
RVy1_EN_1 {
@ RVy must be fully enclosed by M1/Mxy where M1/Mxy is the metal layer directly underneath RVy
@ Enclosure by M1/Mxy must follow either RVy.EN.2, RVy.EN.2a or RVy.EN.3
 err1 = RV1 NOT M1
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the RVy.EN.2a derivations
via_RVy_1_2a_bad = RECTANGLE ENCLOSURE RV1 M1 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.015 0.015 0.015 0.015 OPPOSITE
via_RVy_1_2a_good = RV1 NOT via_RVy_1_2a_bad
//;end of the RVy.EN.2a derivations
 
//;beginning of the RVy.EN.2/3 derivations
via_RVy_1_2_3_bad = RECTANGLE ENCLOSURE RV1 M1 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0 0.024 OPPOSITE 0 0.024 OPPOSITE 
GOOD 0.007 0.019 OPPOSITE 0.007 0.019 OPPOSITE
via_RVy_1_2_3_good = RV1 NOT via_RVy_1_2_3_bad
//;end of the RVy.EN.2/3 derivations
 
Q: 
RVy1_EN_2a {
@ RVy enclosure by M1 or Mxy for all sides >= 0.015um
 err1 = via_RVy_1_2a_bad NOT via_RVy_1_2_3_good
 err2 = (ENC [RV1] M1 < 0.015 ABUT<90 SINGULAR) NOT TOUCH EDGE via_RVy_1_2_3_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}
 
Q: 
RVy1_EN_2_3 {
@ Rvy.EN.2: RVy enclosure by M1 or Mxy when enclosure on either perpendicular direction >= 0um. >= 0.024um
@ RVy.EN.3: RVy enclosure by M1 or Mxy for two opposite sides with the other two sides >= 0.007um. >= 0.019um
 err1 = via_RVy_1_2_3_bad NOT via_RVy_1_2a_good
 err1 NOT INSIDE SealR_NOT_BULK
 // 
 RVy_chk_W_sides = ENC [RV1_W] M1 < 0.007 ABUT<90 OPPOSITE
 RVy_chk_L_sides = ENC (RV1_L) M1 < 0.024 ABUT<90 OPPOSITE
 err2 = ((RV1 INSIDE M1) WITH EDGE RVy_chk_W_sides) WITH EDGE RVy_chk_L_sides == 2
 err2 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
RVy1_EN_4a {
@ RVy enclosure by M1 in adjacent S1 side, where M1 is the metal layer directly underneath RVy >= 0.004um
@ When:
@ 1) M1 width W: 0.036um <= W <= 0.041um
@ 2) Space: 0.058um <= S1 < 0.063um, the PRL >= 0.083um
@ 3) The opposite space S2 >= 0.069um
 met_wid_all = M1 WITH WIDTH > 0.036-GLOBAL_TOLERANCE <= 0.041
 met_err_RAW_a = EXT [met_wid_all] M1 >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW_b = EXT met_wid_all M1 >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW_c = EXT met_wid_all [M1] >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_PRL = DFM PROPERTY met_err_RAW_b met_err_RAW_c OVERLAP ABUT ALSO MULTI [-= max(LENGTH(met_err_RAW_c))] >= 0.083
 // 
 met_err_EGE_a = met_err_RAW_a COIN EDGE (DFM COPY met_err_PRL EDGE)
 met_err_EGE_b = ENC RV1 [met_err_EGE_a] < 0.004 ABUT<90 OPPOSITE
 met_err_EGE_c = INT met_err_EGE_b [M1] > 0.036-GLOBAL_TOLERANCE <= 0.041 ABUT<90 OPPOSITE MEASURE COIN
 met_err_EGE_d = EXT (met_err_EGE_c) M1 < 0.069 ABUT<90 OPPOSITE
 met_err_EGE_e = met_err_EGE_b COIN EDGE M1
 err1 = INT met_err_EGE_d [met_err_EGE_e] > 0.036-GLOBAL_TOLERANCE <= 0.041 ABUT<90 OPPOSITE
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}
 
Q: 
RVy1_EN_4b {
@ RVy enclosure by M1 in adjacent S1 side, where M1 is the metal layer directly underneath RVy >= 0.004um
@ When:
@ 1) M1 width W: 0.042um <= W <= 0.05um
@ 2) Space: 0.058um <= S1<= 0.067um, the PRL >= 0.136um
 met_wid_all = M1 WITH WIDTH > 0.042-GLOBAL_TOLERANCE <= 0.05
 met_err_RAW_TMP = EXT met_wid_all [M1] >= 0.058 < 0.067+GLOBAL_TOLERANCE ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW = EXT met_err_RAW_TMP [M1] >= 0.058 < 0.067+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 // 
 met_jog_ALL = M1_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M1
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW met_wid_all OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.136 [+= COUNT(met_wid_all)] > 0
 met_err_EGE = M1 COIN EDGE (met_err_RAW COIN EDGE (met_err_PRL COIN EDGE met_wid_all))
 err1 = ENC [RV1] met_err_EGE < 0.004 ABUT<90 OPPOSITE
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}
 
 
Q: 
RVy1_EN_6 {
@ RVy enclosure by M1 in adjacent S1 side, where M1 is the metal layer directly underneath RVy >= 0.004um
@ When:
@ 1) M1 width W: 0.051um <= W <= 0.112um
@ 2) Space: 0.058um <= S1 <= 0.094um, the PRL >= 0.136um
@ DRC doesn't check RVy:
@ a) Two RVys with space <= 0.1um in M1 and 1.25xMy/Mxy intersection region
@ b) One Vy and one RVy with space <= 0.1um in M1 and 1.25xMy/Mxy intersection region
 met_wid_all = M1 WITH WIDTH > 0.051-GLOBAL_TOLERANCE <= 0.112
 met_err_RAW_TMP = EXT met_wid_all [M1] >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW = EXT met_err_RAW_TMP [M1] >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 // 
 met_jog_ALL = M1_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M1
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW met_wid_all OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.136 [+= COUNT(met_wid_all)] > 0
 met_err_EGE = M1 COIN EDGE (met_err_RAW COIN EDGE (met_err_PRL COIN EDGE met_wid_all))
 via_group_all = SIZE V1 BY 0.05 INSIDE OF (M1 AND M2) STEP 0.02
 via_group_real = V1 INTERACT (via_group_all INTERACT V1 >= 2)
 err1 = ENC (RV1 NOT via_group_real) met_err_EGE < 0.004 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
RVy1_EN_7 {
@ RVy enclosure by Mxy in adjacent S1 side, where Mxy is the metal layer directly underneath RVy >= 0.004um
@ When:
@ 1) Mxy dimension along enclosure direction: 0.113um <= L <= 0.201um
@ 2) Space: 0.058um <= S1 <= 0.094um, the PRL >= 0.083um
 met_wid_all = INT [M1] > 0.113-GLOBAL_TOLERANCE <= 0.201 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 met_err_RAW = EXT [met_wid_all] M1 >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 met_jog_ALL = M1_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M1
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.083
 met_err_EGE = M1 COIN EDGE (met_err_RAW COIN EDGE met_err_PRL)
 err1 = ENC RV1 met_err_EGE < 0.004 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
RVy1_EN_8 {
@ RVy enclosure by Mxy in adjacent S1 side, where Mxy is the metal layer directly underneath RVy >= 0.014um
@ When:
@ 1) Mxy dimension along enclosure direction: L >= 0.202um
@ 2) Space: 0.058um <= S1 <= 0.094um, PRL >= 0.083um
 met_wid_all = INT (M1) <= 0.202-GLOBAL_TOLERANCE ABUT<90 OPPOSITE EXCLUDE SHIELDED
 met_err_RAW = EXT [met_wid_all] M1 >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 met_jog_ALL = M1_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M1
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.083
 met_err_EGE = M1 COIN EDGE (met_err_RAW COIN EDGE met_err_PRL)
 err1 = ENC RV1 met_err_EGE < 0.014 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 

#IFDEF DFM_RULES_PRIORITY_1 YES

Q: 
RVy1_EN_9_DFM1 {
@ Recommended RVy fully enclosure by Mxy+1/1.25xMy is defined by either RVy.EN.9a.DFM or Vy.EN.9b.DFM, which Mxy+1/1.25xMy is the metal layer directly above rectangular RVy.
 err1 = RV1 NOT INSIDE M2
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the RVy.EN.9a.DFM derivations
via_RVy_1_9a_R_bad = RECTANGLE ENCLOSURE RV1 M2 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.020 0.020 0.020 0.020 OPPOSITE
via_RVy_1_9a_R_good = RV1 NOT via_RVy_1_9a_R_bad
//;end of the RVy.EN.9a.DFM derivations
 
Q: 
RVy1_EN_9a_DFM1 {
@ Recommended RVy enclosure by Mxy+1/1.25xMy for all sides >= 0.020um
 err1 = via_RVy_1_9a_R_bad NOT via_RVy_1_9b_R_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the RVy.EN.9b.DFM derivations
via_RVy_1_9b_R_bad = RECTANGLE ENCLOSURE RV1 M2 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.007 0.025 OPPOSITE 0.007 0.025 OPPOSITE
via_RVy_1_9b_R_good = RV1 NOT via_RVy_1_9b_R_bad
//;end of the RVy.EN.9b.DFM derivations
 
Q: 
RVy1_EN_9b_DFM1 {
@ Recommended RVy enclosure by Mxy+1/1.25xMy for two opposite sides with the other twosides >= 0.007um. >= 0.025um
 err1 = via_RVy_1_9b_R_bad NOT via_RVy_1_9a_R_good
 err2 = (ENC [RV1] M2 < 0.02 ABUT<90 SINGULAR) NOT TOUCH EDGE via_RVy_1_9b_R_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

#ENDIF

 
//;RVy.EN.9 only for Mxy+1 
//;beginning of the RVy.EN.9 derivations
via_RVy1_bad_9_1 = RECTANGLE ENCLOSURE RV1 M2 ABUT<90 SINGULAR 
GOOD 0.015 0.015 0.015 0.015 OPPOSITE
via_RVy1_good_9_1 = RV1 NOT via_RVy1_bad_9_1
// 
via_RVy1_good_9_2_TMP = ENC [RV1_W] M2 < 0.024 ABUT<90 OPPOSITE
via_RVy1_good_9_2 = via_RVy1_bad_9_1 NOT WITH EDGE via_RVy1_good_9_2_TMP
// 
via_RVy1_bad_9_3 = RECTANGLE ENCLOSURE RV1 M2 ABUT<90 SINGULAR 
GOOD 0.007 0.019 OPPOSITE 0.007 0.019 OPPOSITE
via_RVy1_good_9_3 = RV1 NOT via_RVy1_bad_9_3
 
via_RVy1_9_bad = RV1 NOT (OR via_RVy1_good_9_1 via_RVy1_good_9_2 via_RVy1_good_9_3)
via_RVy1_9_good = RV1 NOT via_RVy1_9_bad
//;end of the RVy.EN.9 derivations
 
Q: 
RVy1_EN_9 {
@ RVy must be fully enclosed by Mxy+1/1.25xMy where Mxy+1/1.25xMy is the metal layer directly above rectangular Vy
@ Enclosure by Mxy+1/1.25xMy must follow one of RVy.EN.9.1, RVy.EN.9.2, RVy.EN.9.3, RVy.EN.10 RVy.EN.10a1, RVy.EN.10a2, RVy.EN.10b or RVy.EN.11 or RVy.EN.12
 err1 = RV1 NOT M2
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
RVy1_EN_9_1_2_3 {
@ RVy.EN.9.1: RVy enclosure by Mxy+1 for all sides >= 0.015um
@ RVy.EN.9.2: Enclosure of short side of RVy by Mxy+1 for two opposite sides with the other two side >= 0um. >= 0.024um
@ RVy.EN.9.3: RVy enclosure by Mxy+1 for two opposite sides with the other two sides >= 0.007um. >= 0.019um
 err1 = copy via_RVy1_9_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
RVy1_EN_9_4 {
@ RVy enclosure by Mxy+1 (0.036um <= Mxy+1 width <= 0.041um 0.058um <= space < 0.063um and the opposite space >= 0.069um, PRL >= 0.083um) >= 0.004um
 met_wid_all = M2 WITH WIDTH > 0.036-GLOBAL_TOLERANCE <= 0.041
 met_err_RAW_a = EXT [met_wid_all] M2 >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW_b = EXT met_wid_all M2 >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW_c = EXT met_wid_all [M2] >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_PRL = DFM PROPERTY met_err_RAW_b met_err_RAW_c OVERLAP ABUT ALSO MULTI [-= max(LENGTH(met_err_RAW_c))] >= 0.083
 // 
 met_err_EGE_a = met_err_RAW_a COIN EDGE (DFM COPY met_err_PRL EDGE)
 met_err_EGE_b = ENC RV1 [met_err_EGE_a] < 0.004 ABUT<90 OPPOSITE
 met_err_EGE_c = INT met_err_EGE_b [M2] > 0.036-GLOBAL_TOLERANCE <= 0.041 ABUT<90 OPPOSITE MEASURE COIN
 met_err_EGE_d = EXT (met_err_EGE_c) M2 < 0.069 ABUT<90 OPPOSITE
 met_err_EGE_e = met_err_EGE_b COIN EDGE M2
 err1 = INT met_err_EGE_d [met_err_EGE_e] > 0.036-GLOBAL_TOLERANCE <= 0.041 ABUT<90 OPPOSITE
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}
 

//Vy2

Q: 
RVy2_EN_1_DFM1 {
@ Recommended RVy enclosure by M1/Mxy is defined by either RVy.EN.2.DFM or RVy.EN.2a.DFM
 err1 = RV2 NOT INSIDE M2
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the RVy.EN.2.DFM derivations
via_RVy_2_2_R_bad = RECTANGLE ENCLOSURE RV2 M2 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.007 0.025 OPPOSITE 0.007 0.025 OPPOSITE
via_RVy_2_2_R_good = RV2 NOT via_RVy_2_2_R_bad
//;end of the RVy.EN.2.DFM derivations
 
Q: 
RVy2_EN_2_DFM1 {
@ Recommended RVy enclosure by M1/Mxy for two opposite sides with the other twosides >= 0.007um. >= 0.025um
 err1 = via_RVy_2_2_R_bad NOT via_RVy_2_2a_R_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the RVy.EN.2a.DFM derivations
via_RVy_2_2a_R_bad = RECTANGLE ENCLOSURE RV2 M2 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.020 0.020 0.020 0.020 OPPOSITE
via_RVy_2_2a_R_good = RV2 NOT via_RVy_2_2a_R_bad
//;end of the RVy.EN.2a.DFM derivations
 
Q: 
RVy2_EN_2a_DFM1 {
@ Recommended RVy enclosure by M1, Mxy for all sides >= 0.02um
 err1 = via_RVy_2_2a_R_bad NOT via_RVy_2_2_R_good
 err2 = (ENC [RV2] M2 < 0.02 ABUT<90 SINGULAR) NOT TOUCH EDGE via_RVy_2_2_R_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: 
RVy2_EN_1 {
@ RVy must be fully enclosed by M1/Mxy where M1/Mxy is the metal layer directly underneath RVy
@ Enclosure by M1/Mxy must follow either RVy.EN.2, RVy.EN.2a or RVy.EN.3
 err1 = RV2 NOT M2
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the RVy.EN.2a derivations
via_RVy_2_2a_bad = RECTANGLE ENCLOSURE RV2 M2 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.015 0.015 0.015 0.015 OPPOSITE
via_RVy_2_2a_good = RV2 NOT via_RVy_2_2a_bad
//;end of the RVy.EN.2a derivations
 
//;beginning of the RVy.EN.2/3 derivations
via_RVy_2_2_3_bad = RECTANGLE ENCLOSURE RV2 M2 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0 0.024 OPPOSITE 0 0.024 OPPOSITE 
GOOD 0.007 0.019 OPPOSITE 0.007 0.019 OPPOSITE
via_RVy_2_2_3_good = RV2 NOT via_RVy_2_2_3_bad
//;end of the RVy.EN.2/3 derivations
 
Q: 
RVy2_EN_2a {
@ RVy enclosure by M1 or Mxy for all sides >= 0.015um
 err1 = via_RVy_2_2a_bad NOT via_RVy_2_2_3_good
 err2 = (ENC [RV2] M2 < 0.015 ABUT<90 SINGULAR) NOT TOUCH EDGE via_RVy_2_2_3_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}
 
Q: 
RVy2_EN_2_3 {
@ Rvy.EN.2: RVy enclosure by M1 or Mxy when enclosure on either perpendicular direction >= 0um. >= 0.024um
@ RVy.EN.3: RVy enclosure by M1 or Mxy for two opposite sides with the other two sides >= 0.007um. >= 0.019um
 err1 = via_RVy_2_2_3_bad NOT via_RVy_2_2a_good
 err1 NOT INSIDE SealR_NOT_BULK
 // 
 RVy_chk_W_sides = ENC [RV2_W] M2 < 0.007 ABUT<90 OPPOSITE
 RVy_chk_L_sides = ENC (RV2_L) M2 < 0.024 ABUT<90 OPPOSITE
 err2 = ((RV2 INSIDE M2) WITH EDGE RVy_chk_W_sides) WITH EDGE RVy_chk_L_sides == 2
 err2 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
RVy2_EN_4 {
@ RVy enclosure by Mxy in adjacent S1 side, where Mxy is the metal layer directly underneath RVy >= 0.004um
@ When:
@ 1) Mxy width W: 0.036um <= W <= 0.041um
@ 2) Space: 0.058um <= S1 < 0.063um, the PRL >= 0.083um
@ 3) The opposite space S2 >= 0.069um
 met_wid_all = M2 WITH WIDTH > 0.036-GLOBAL_TOLERANCE <= 0.041
 met_err_RAW_a = EXT [met_wid_all] M2 >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW_b = EXT met_wid_all M2 >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW_c = EXT met_wid_all [M2] >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_PRL = DFM PROPERTY met_err_RAW_b met_err_RAW_c OVERLAP ABUT ALSO MULTI [-= max(LENGTH(met_err_RAW_c))] >= 0.083
 // 
 met_err_EGE_a = met_err_RAW_a COIN EDGE (DFM COPY met_err_PRL EDGE)
 met_err_EGE_b = ENC RV2 [met_err_EGE_a] < 0.004 ABUT<90 OPPOSITE
 met_err_EGE_c = INT met_err_EGE_b [M2] > 0.036-GLOBAL_TOLERANCE <= 0.041 ABUT<90 OPPOSITE MEASURE COIN
 met_err_EGE_d = EXT (met_err_EGE_c) M2 < 0.069 ABUT<90 OPPOSITE
 met_err_EGE_e = met_err_EGE_b COIN EDGE M2
 err1 = INT met_err_EGE_d [met_err_EGE_e] > 0.036-GLOBAL_TOLERANCE <= 0.041 ABUT<90 OPPOSITE
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}
 
Q: 
RVy2_EN_5 {
@ RVy enclosure by Mxy in adjacent S1 side, where Mxy is the metal layer directly underneath RVy >= 0.004um
@ When:
@ 1) Mxy width W: 0.042um <= W <= 0.05um
@ 2) Space: 0.058um <= S1 <= 0.067um, the PRL >= 0.083um
 met_wid_all = M2 WITH WIDTH > 0.042-GLOBAL_TOLERANCE <= 0.05
 met_err_RAW_TMP = EXT met_wid_all [M2] >= 0.058 < 0.067+GLOBAL_TOLERANCE ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW = EXT met_err_RAW_TMP [M2] >= 0.058 < 0.067+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 // 
 met_jog_ALL = M2_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M2
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW met_wid_all OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.083 [+= COUNT(met_wid_all)] > 0
 met_err_EGE = M2 COIN EDGE (met_err_RAW COIN EDGE (met_err_PRL COIN EDGE met_wid_all))
 err1 = ENC [RV2] met_err_EGE < 0.004 ABUT<90 OPPOSITE
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}
 
Q: 
RVy2_EN_6a {
@ RVy enclosure by Mxy in adjacent S1 side, where Mxy is the metal layer directly underneath RVy >= 0.004um
@ When:
@ 1) Mxy width W: 0.051um <= W <= 0.112um
@ 2) Space: 0.058um <= S1 <= 0.094um, PRL >= 0.083um
@ DRC doesn't check RVy:
@ a) Two RVys with space <= 0.1um in M1 and 1.25xMy/Mxy intersection region
@ b) One Vy and one RVy with space <= 0.1um in M1 and 1.25xMy/Mxy intersection region
 met_wid_all = M2 WITH WIDTH > 0.051-GLOBAL_TOLERANCE <= 0.112
 met_err_RAW_TMP = EXT met_wid_all [M2] >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW = EXT met_err_RAW_TMP [M2] >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 // 
 met_jog_ALL = M2_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M2
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW met_wid_all OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.083 [+= COUNT(met_wid_all)] > 0
 met_err_EGE = M2 COIN EDGE (met_err_RAW COIN EDGE (met_err_PRL COIN EDGE met_wid_all))
 via_group_all = SIZE V2 BY 0.05 INSIDE OF (M2 AND M3) STEP 0.02
 via_group_real = V2 INTERACT (via_group_all INTERACT V2 >= 2)
 err1 = ENC (RV2 NOT via_group_real) met_err_EGE < 0.004 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
RVy2_EN_7 {
@ RVy enclosure by Mxy in adjacent S1 side, where Mxy is the metal layer directly underneath RVy >= 0.004um
@ When:
@ 1) Mxy dimension along enclosure direction: 0.113um <= L <= 0.201um
@ 2) Space: 0.058um <= S1 <= 0.094um, the PRL >= 0.083um
 met_wid_all = INT [M2] > 0.113-GLOBAL_TOLERANCE <= 0.201 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 met_err_RAW = EXT [met_wid_all] M2 >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 met_jog_ALL = M2_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M2
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.083
 met_err_EGE = M2 COIN EDGE (met_err_RAW COIN EDGE met_err_PRL)
 err1 = ENC RV2 met_err_EGE < 0.004 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
RVy2_EN_8 {
@ RVy enclosure by Mxy in adjacent S1 side, where Mxy is the metal layer directly underneath RVy >= 0.014um
@ When:
@ 1) Mxy dimension along enclosure direction: L >= 0.202um
@ 2) Space: 0.058um <= S1 <= 0.094um, PRL >= 0.083um
 met_wid_all = INT (M2) <= 0.202-GLOBAL_TOLERANCE ABUT<90 OPPOSITE EXCLUDE SHIELDED
 met_err_RAW = EXT [met_wid_all] M2 >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 met_jog_ALL = M2_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M2
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.083
 met_err_EGE = M2 COIN EDGE (met_err_RAW COIN EDGE met_err_PRL)
 err1 = ENC RV2 met_err_EGE < 0.014 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 

#IFDEF DFM_RULES_PRIORITY_1 YES

Q: 
RVy2_EN_9_DFM1 {
@ Recommended RVy fully enclosure by Mxy+1/1.25xMy is defined by either RVy.EN.9a.DFM or Vy.EN.9b.DFM, which Mxy+1/1.25xMy is the metal layer directly above rectangular RVy.
 err1 = RV2 NOT INSIDE M3
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the RVy.EN.9a.DFM derivations
via_RVy_2_9a_R_bad = RECTANGLE ENCLOSURE RV2 M3 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.020 0.020 0.020 0.020 OPPOSITE
via_RVy_2_9a_R_good = RV2 NOT via_RVy_2_9a_R_bad
//;end of the RVy.EN.9a.DFM derivations
 
Q: 
RVy2_EN_9a_DFM1 {
@ Recommended RVy enclosure by Mxy+1/1.25xMy for all sides >= 0.020um
 err1 = via_RVy_2_9a_R_bad NOT via_RVy_2_9b_R_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the RVy.EN.9b.DFM derivations
via_RVy_2_9b_R_bad = RECTANGLE ENCLOSURE RV2 M3 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.007 0.025 OPPOSITE 0.007 0.025 OPPOSITE
via_RVy_2_9b_R_good = RV2 NOT via_RVy_2_9b_R_bad
//;end of the RVy.EN.9b.DFM derivations
 
Q: 
RVy2_EN_9b_DFM1 {
@ Recommended RVy enclosure by Mxy+1/1.25xMy for two opposite sides with the other twosides >= 0.007um. >= 0.025um
 err1 = via_RVy_2_9b_R_bad NOT via_RVy_2_9a_R_good
 err2 = (ENC [RV2] M3 < 0.02 ABUT<90 SINGULAR) NOT TOUCH EDGE via_RVy_2_9b_R_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

#ENDIF

 
//;RVy.EN.9 only for Mxy+1 
//;beginning of the RVy.EN.9 derivations
via_RVy2_bad_9_1 = RECTANGLE ENCLOSURE RV2 M3 ABUT<90 SINGULAR 
GOOD 0.015 0.015 0.015 0.015 OPPOSITE
via_RVy2_good_9_1 = RV2 NOT via_RVy2_bad_9_1
// 
via_RVy2_good_9_2_TMP = ENC [RV2_W] M3 < 0.024 ABUT<90 OPPOSITE
via_RVy2_good_9_2 = via_RVy2_bad_9_1 NOT WITH EDGE via_RVy2_good_9_2_TMP
// 
via_RVy2_bad_9_3 = RECTANGLE ENCLOSURE RV2 M3 ABUT<90 SINGULAR 
GOOD 0.007 0.019 OPPOSITE 0.007 0.019 OPPOSITE
via_RVy2_good_9_3 = RV2 NOT via_RVy2_bad_9_3
 
via_RVy2_9_bad = RV2 NOT (OR via_RVy2_good_9_1 via_RVy2_good_9_2 via_RVy2_good_9_3)
via_RVy2_9_good = RV2 NOT via_RVy2_9_bad
//;end of the RVy.EN.9 derivations
 
Q: 
RVy2_EN_9 {
@ RVy must be fully enclosed by Mxy+1/1.25xMy where Mxy+1/1.25xMy is the metal layer directly above rectangular Vy
@ Enclosure by Mxy+1/1.25xMy must follow one of RVy.EN.9.1, RVy.EN.9.2, RVy.EN.9.3, RVy.EN.10 RVy.EN.10a1, RVy.EN.10a2, RVy.EN.10b or RVy.EN.11 or RVy.EN.12
 err1 = RV2 NOT M3
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
RVy2_EN_9_1_2_3 {
@ RVy.EN.9.1: RVy enclosure by Mxy+1 for all sides >= 0.015um
@ RVy.EN.9.2: Enclosure of short side of RVy by Mxy+1 for two opposite sides with the other two side >= 0um. >= 0.024um
@ RVy.EN.9.3: RVy enclosure by Mxy+1 for two opposite sides with the other two sides >= 0.007um. >= 0.019um
 err1 = copy via_RVy2_9_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
RVy2_EN_9_4 {
@ RVy enclosure by Mxy+1 (0.036um <= Mxy+1 width <= 0.041um 0.058um <= space < 0.063um and the opposite space >= 0.069um, PRL >= 0.083um) >= 0.004um
 met_wid_all = M3 WITH WIDTH > 0.036-GLOBAL_TOLERANCE <= 0.041
 met_err_RAW_a = EXT [met_wid_all] M3 >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW_b = EXT met_wid_all M3 >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW_c = EXT met_wid_all [M3] >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_PRL = DFM PROPERTY met_err_RAW_b met_err_RAW_c OVERLAP ABUT ALSO MULTI [-= max(LENGTH(met_err_RAW_c))] >= 0.083
 // 
 met_err_EGE_a = met_err_RAW_a COIN EDGE (DFM COPY met_err_PRL EDGE)
 met_err_EGE_b = ENC RV2 [met_err_EGE_a] < 0.004 ABUT<90 OPPOSITE
 met_err_EGE_c = INT met_err_EGE_b [M3] > 0.036-GLOBAL_TOLERANCE <= 0.041 ABUT<90 OPPOSITE MEASURE COIN
 met_err_EGE_d = EXT (met_err_EGE_c) M3 < 0.069 ABUT<90 OPPOSITE
 met_err_EGE_e = met_err_EGE_b COIN EDGE M3
 err1 = INT met_err_EGE_d [met_err_EGE_e] > 0.036-GLOBAL_TOLERANCE <= 0.041 ABUT<90 OPPOSITE
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

//RVy3

#IFDEF DFM_RULES_PRIORITY_1 YES

Q: 
RVy3_EN_1_DFM1 {
@ Recommended RVy enclosure by M1/Mxy is defined by either RVy.EN.2.DFM or RVy.EN.2a.DFM
 err1 = RV3 NOT INSIDE M3
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the RVy.EN.2.DFM derivations
via_RVy_3_2_R_bad = RECTANGLE ENCLOSURE RV3 M3 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.007 0.025 OPPOSITE 0.007 0.025 OPPOSITE
via_RVy_3_2_R_good = RV3 NOT via_RVy_3_2_R_bad
//;end of the RVy.EN.2.DFM derivations

Q:  
RVy3_EN_2_DFM1 {
@ Recommended RVy enclosure by M1/Mxy for two opposite sides with the other twosides >= 0.007um. >= 0.025um
 err1 = via_RVy_3_2_R_bad NOT via_RVy_3_2a_R_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the RVy.EN.2a.DFM derivations
via_RVy_3_2a_R_bad = RECTANGLE ENCLOSURE RV3 M3 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.020 0.020 0.020 0.020 OPPOSITE
via_RVy_3_2a_R_good = RV3 NOT via_RVy_3_2a_R_bad
//;end of the RVy.EN.2a.DFM derivations
 
Q: 
RVy3_EN_2a_DFM1 {
@ Recommended RVy enclosure by M1, Mxy for all sides >= 0.02um
 err1 = via_RVy_3_2a_R_bad NOT via_RVy_3_2_R_good
 err2 = (ENC [RV3] M3 < 0.02 ABUT<90 SINGULAR) NOT TOUCH EDGE via_RVy_3_2_R_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

#ENDIF

 
Q: 
RVy3_EN_1 {
@ RVy must be fully enclosed by M1/Mxy where M1/Mxy is the metal layer directly underneath RVy
@ Enclosure by M1/Mxy must follow either RVy.EN.2, RVy.EN.2a or RVy.EN.3
 err1 = RV3 NOT M3
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the RVy.EN.2a derivations
via_RVy_3_2a_bad = RECTANGLE ENCLOSURE RV3 M3 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.015 0.015 0.015 0.015 OPPOSITE
via_RVy_3_2a_good = RV3 NOT via_RVy_3_2a_bad
//;end of the RVy.EN.2a derivations
 
//;beginning of the RVy.EN.2/3 derivations
via_RVy_3_2_3_bad = RECTANGLE ENCLOSURE RV3 M3 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0 0.024 OPPOSITE 0 0.024 OPPOSITE 
GOOD 0.007 0.019 OPPOSITE 0.007 0.019 OPPOSITE
via_RVy_3_2_3_good = RV3 NOT via_RVy_3_2_3_bad
//;end of the RVy.EN.2/3 derivations
 
Q: 
RVy3_EN_2a {
@ RVy enclosure by M1 or Mxy for all sides >= 0.015um
 err1 = via_RVy_3_2a_bad NOT via_RVy_3_2_3_good
 err2 = (ENC [RV3] M3 < 0.015 ABUT<90 SINGULAR) NOT TOUCH EDGE via_RVy_3_2_3_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}
 
Q: 
RVy3_EN_2_3 {
@ Rvy.EN.2: RVy enclosure by M1 or Mxy when enclosure on either perpendicular direction >= 0um. >= 0.024um
@ RVy.EN.3: RVy enclosure by M1 or Mxy for two opposite sides with the other two sides >= 0.007um. >= 0.019um
 err1 = via_RVy_3_2_3_bad NOT via_RVy_3_2a_good
 err1 NOT INSIDE SealR_NOT_BULK
 // 
 RVy_chk_W_sides = ENC [RV3_W] M3 < 0.007 ABUT<90 OPPOSITE
 RVy_chk_L_sides = ENC (RV3_L) M3 < 0.024 ABUT<90 OPPOSITE
 err2 = ((RV3 INSIDE M3) WITH EDGE RVy_chk_W_sides) WITH EDGE RVy_chk_L_sides == 2
 err2 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
RVy3_EN_4 {
@ RVy enclosure by Mxy in adjacent S1 side, where Mxy is the metal layer directly underneath RVy >= 0.004um
@ When:
@ 1) Mxy width W: 0.036um <= W <= 0.041um
@ 2) Space: 0.058um <= S1 < 0.063um, the PRL >= 0.083um
@ 3) The opposite space S2 >= 0.069um
 met_wid_all = M3 WITH WIDTH > 0.036-GLOBAL_TOLERANCE <= 0.041
 met_err_RAW_a = EXT [met_wid_all] M3 >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW_b = EXT met_wid_all M3 >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW_c = EXT met_wid_all [M3] >= 0.058 < 0.063 ABUT<90 OPPOSITE MEASURE ALL
 met_err_PRL = DFM PROPERTY met_err_RAW_b met_err_RAW_c OVERLAP ABUT ALSO MULTI [-= max(LENGTH(met_err_RAW_c))] >= 0.083
 // 
 met_err_EGE_a = met_err_RAW_a COIN EDGE (DFM COPY met_err_PRL EDGE)
 met_err_EGE_b = ENC RV3 [met_err_EGE_a] < 0.004 ABUT<90 OPPOSITE
 met_err_EGE_c = INT met_err_EGE_b [M3] > 0.036-GLOBAL_TOLERANCE <= 0.041 ABUT<90 OPPOSITE MEASURE COIN
 met_err_EGE_d = EXT (met_err_EGE_c) M3 < 0.069 ABUT<90 OPPOSITE
 met_err_EGE_e = met_err_EGE_b COIN EDGE M3
 err1 = INT met_err_EGE_d [met_err_EGE_e] > 0.036-GLOBAL_TOLERANCE <= 0.041 ABUT<90 OPPOSITE
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}
 
Q: 
RVy3_EN_5 {
@ RVy enclosure by Mxy in adjacent S1 side, where Mxy is the metal layer directly underneath RVy >= 0.004um
@ When:
@ 1) Mxy width W: 0.042um <= W <= 0.05um
@ 2) Space: 0.058um <= S1 <= 0.067um, the PRL >= 0.083um
 met_wid_all = M3 WITH WIDTH > 0.042-GLOBAL_TOLERANCE <= 0.05
 met_err_RAW_TMP = EXT met_wid_all [M3] >= 0.058 < 0.067+GLOBAL_TOLERANCE ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW = EXT met_err_RAW_TMP [M3] >= 0.058 < 0.067+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 // 
 met_jog_ALL = M3_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M3
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW met_wid_all OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.083 [+= COUNT(met_wid_all)] > 0
 met_err_EGE = M3 COIN EDGE (met_err_RAW COIN EDGE (met_err_PRL COIN EDGE met_wid_all))
 err1 = ENC [RV3] met_err_EGE < 0.004 ABUT<90 OPPOSITE
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}
 
Q: 
RVy3_EN_6a {
@ RVy enclosure by Mxy in adjacent S1 side, where Mxy is the metal layer directly underneath RVy >= 0.004um
@ When:
@ 1) Mxy width W: 0.051um <= W <= 0.112um
@ 2) Space: 0.058um <= S1 <= 0.094um, PRL >= 0.083um
@ DRC doesn't check RVy:
@ a) Two RVys with space <= 0.1um in M1 and 1.25xMy/Mxy intersection region
@ b) One Vy and one RVy with space <= 0.1um in M1 and 1.25xMy/Mxy intersection region
 met_wid_all = M3 WITH WIDTH > 0.051-GLOBAL_TOLERANCE <= 0.112
 met_err_RAW_TMP = EXT met_wid_all [M3] >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE MEASURE ALL
 met_err_RAW = EXT met_err_RAW_TMP [M3] >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 // 
 met_jog_ALL = M3_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M3
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW met_wid_all OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.083 [+= COUNT(met_wid_all)] > 0
 met_err_EGE = M3 COIN EDGE (met_err_RAW COIN EDGE (met_err_PRL COIN EDGE met_wid_all))
 via_group_all = SIZE V3 BY 0.05 INSIDE OF (M3 AND M4) STEP 0.02
 via_group_real = V3 INTERACT (via_group_all INTERACT V3 >= 2)
 err1 = ENC (RV3 NOT via_group_real) met_err_EGE < 0.004 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
RVy3_EN_7 {
@ RVy enclosure by Mxy in adjacent S1 side, where Mxy is the metal layer directly underneath RVy >= 0.004um
@ When:
@ 1) Mxy dimension along enclosure direction: 0.113um <= L <= 0.201um
@ 2) Space: 0.058um <= S1 <= 0.094um, the PRL >= 0.083um
 met_wid_all = INT [M3] > 0.113-GLOBAL_TOLERANCE <= 0.201 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 met_err_RAW = EXT [met_wid_all] M3 >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 met_jog_ALL = M3_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M3
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.083
 met_err_EGE = M3 COIN EDGE (met_err_RAW COIN EDGE met_err_PRL)
 err1 = ENC RV3 met_err_EGE < 0.004 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
RVy3_EN_8 {
@ RVy enclosure by Mxy in adjacent S1 side, where Mxy is the metal layer directly underneath RVy >= 0.014um
@ When:
@ 1) Mxy dimension along enclosure direction: L >= 0.202um
@ 2) Space: 0.058um <= S1 <= 0.094um, PRL >= 0.083um
 met_wid_all = INT (M3) <= 0.202-GLOBAL_TOLERANCE ABUT<90 OPPOSITE EXCLUDE SHIELDED
 met_err_RAW = EXT [met_wid_all] M3 >= 0.058 < 0.094+GLOBAL_TOLERANCE ABUT<90 OPPOSITE
 met_jog_ALL = M3_convex_eq_one_edges NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M3
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] >= 0.083
 met_err_EGE = M3 COIN EDGE (met_err_RAW COIN EDGE met_err_PRL)
 err1 = ENC RV3 met_err_EGE < 0.014 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 

#IFDEF DFM_RULES_PRIORITY_1 YES

Q: 
RVy3_EN_9_DFM1 {
@ Recommended RVy fully enclosure by Mxy+1/1.25xMy is defined by either RVy.EN.9a.DFM or Vy.EN.9b.DFM, which Mxy+1/1.25xMy is the metal layer directly above rectangular RVy.
 err1 = RV3 NOT INSIDE M4
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the RVy.EN.9a.DFM derivations
via_RVy_3_9a_R_bad = RECTANGLE ENCLOSURE RV3 M4 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.020 0.020 0.020 0.020 OPPOSITE
via_RVy_3_9a_R_good = RV3 NOT via_RVy_3_9a_R_bad
//;end of the RVy.EN.9a.DFM derivations
 
Q: 
RVy3_EN_9a_DFM1 {
@ Recommended RVy enclosure by Mxy+1/1.25xMy for all sides >= 0.020um
 err1 = via_RVy_3_9a_R_bad NOT via_RVy_3_9b_R_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the RVy.EN.9b.DFM derivations
via_RVy_3_9b_R_bad = RECTANGLE ENCLOSURE RV3 M4 ABUT<90 SINGULAR OUTSIDE ALSO 
GOOD 0.007 0.025 OPPOSITE 0.007 0.025 OPPOSITE
via_RVy_3_9b_R_good = RV3 NOT via_RVy_3_9b_R_bad
//;end of the RVy.EN.9b.DFM derivations
 
Q: 
RVy3_EN_9b_DFM1 {
@ Recommended RVy enclosure by Mxy+1/1.25xMy for two opposite sides with the other twosides >= 0.007um. >= 0.025um
 err1 = via_RVy_3_9b_R_bad NOT via_RVy_3_9a_R_good
 err2 = (ENC [RV3] M4 < 0.02 ABUT<90 SINGULAR) NOT TOUCH EDGE via_RVy_3_9b_R_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

#ENDIF

 
//;RVy.EN.9 only for Mxy+1 
//;beginning of the RVy.EN.9 derivations
via_RVy3_bad_9_1 = RECTANGLE ENCLOSURE RV3 M4 ABUT<90 SINGULAR 
GOOD 0.015 0.015 0.015 0.015 OPPOSITE
via_RVy3_good_9_1 = RV3 NOT via_RVy3_bad_9_1
// 
via_RVy3_good_9_2_TMP = ENC [RV3_W] M4 < 0.024 ABUT<90 OPPOSITE
via_RVy3_good_9_2 = via_RVy3_bad_9_1 NOT WITH EDGE via_RVy3_good_9_2_TMP
// 
via_RVy3_bad_9_3 = RECTANGLE ENCLOSURE RV3 M4 ABUT<90 SINGULAR 
GOOD 0.007 0.019 OPPOSITE 0.007 0.019 OPPOSITE
via_RVy3_good_9_3 = RV3 NOT via_RVy3_bad_9_3
 
via_RVy3_9_bad = RV3 NOT (OR via_RVy3_good_9_1 via_RVy3_good_9_2 via_RVy3_good_9_3)
via_RVy3_9_good = RV3 NOT via_RVy3_9_bad
//;end of the RVy.EN.9 derivations
 
Q: 
RVy3_EN_9 {
@ RVy must be fully enclosed by Mxy+1/1.25xMy where Mxy+1/1.25xMy is the metal layer directly above rectangular Vy
@ Enclosure by Mxy+1/1.25xMy must follow one of RVy.EN.9.1, RVy.EN.9.2, RVy.EN.9.3, RVy.EN.10 RVy.EN.10a1, RVy.EN.10a2, RVy.EN.10b or RVy.EN.11 or RVy.EN.12
 err1 = RV3 NOT M4
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;RVy.EN.10~RVy.EN.14 only for 125xMn+1/125xMy+1 
//;beginning of the RVy.EN.10 derivations
met_RVy3_10 = M4 WITH WIDTH == 0.04
via_RVy3_10 = RV3 NOT OUTSIDE met_RVy3_10
via_RVy3_10_bad = RECTANGLE ENCLOSURE via_RVy3_10 M4 ABUT<90 SINGULAR 
GOOD 0.004 0.038 OPPOSITE 0.004 0.038 OPPOSITE
via_RVy3_10_good = via_RVy3_10 NOT via_RVy3_10_bad
//;end of the RVy.EN.10 derivations

Q: 
RVy3_EN_10 {
@ Enclosure of short side of RVy by 1.25xMy (width = 0.04um) with the other two sides >= 0.004um. >= 0.038um
 err1 = copy via_RVy3_10_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the RVy.EN.10a1 derivations
met_RVy3_10a1 = M4 WITH WIDTH == 0.042
via_RVy3_10a1 = RV3 NOT OUTSIDE met_RVy3_10a1
via_RVy3_10a1_bad = RECTANGLE ENCLOSURE via_RVy3_10a1 M4 ABUT<90 SINGULAR 
GOOD 0.005 0.038 OPPOSITE 0.005 0.038 OPPOSITE
via_RVy3_10a1_good = via_RVy3_10a1 NOT via_RVy3_10a1_bad
//;end of the RVy.EN.10a1 derivations
//;beginning of the RVy.EN.10a derivations
met_RVy3_10a = M4 WITH WIDTH == 0.044
via_RVy3_10a = RV3 NOT OUTSIDE met_RVy3_10a
via_RVy3_10a_bad = RECTANGLE ENCLOSURE via_RVy3_10a M4 ABUT<90 SINGULAR 
GOOD 0.006 0.038 OPPOSITE 0.006 0.038 OPPOSITE
via_RVy3_10a_good = via_RVy3_10a NOT via_RVy3_10a_bad
//;end of the RVy.EN.10a derivations
//;beginning of the RVy.EN.10a2 derivations
met_RVy3_10a2 = M4 WITH WIDTH == 0.046
via_RVy3_10a2 = RV3 NOT OUTSIDE met_RVy3_10a2
via_RVy3_10a2_bad = RECTANGLE ENCLOSURE via_RVy3_10a2 M4 ABUT<90 SINGULAR 
GOOD 0.007 0.038 OPPOSITE 0.007 0.038 OPPOSITE
via_RVy3_10a2_good = via_RVy3_10a2 NOT via_RVy3_10a2_bad
//;end of the RVy.EN.10a2 derivations
 
Q: 
RVy3_EN_10a1 {
@ Enclosure of short side of RVy by 1.25xMy (width = 0.042um) with the other two sides >= 0.005um. >= 0.038um
 err1 = via_RVy3_10a1_bad NOT via_RVy3_10_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
RVy3_EN_10a {
@ Enclosure of short side of RVy by 1.25xMy (width = 0.044um) with the other two sides >= 0.006um. >= 0.038um
 err1 = via_RVy3_10a_bad NOT (OR via_RVy3_10_good via_RVy3_10a1_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
RVy3_EN_10a2 {
@ Enclosure of short side of RVy by 1.25xMy (width = 0.046um) with the other two sides >= 0.007um. >= 0.038um
 err1 = via_RVy3_10a2_bad NOT (OR via_RVy3_10_good via_RVy3_10a1_good via_RVy3_10a_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the RVy.EN.10b derivations
met_RVy3_10b = M4 WITH WIDTH >= 0.060 < 0.08
via_RVy3_10b = RV3 NOT OUTSIDE met_RVy3_10b
via_RVy3_10b_bad = RECTANGLE ENCLOSURE via_RVy3_10b M4 ABUT<90 SINGULAR 
GOOD 0.014 0.038 OPPOSITE 0.014 0.038 OPPOSITE
via_RVy3_10b_good = via_RVy3_10b NOT via_RVy3_10b_bad
//;end of the RVy.EN.10b derivations
 
Q: 
RVy3_EN_10b {
@ Enclosure of short side of RVy by 1.25xMy (0.06um <= width < 0.08um) with the other two sides >= 0.014um. >= 0.038um
 err1 = via_RVy3_10b_bad NOT (OR via_RVy3_10_good via_RVy3_10a_good via_RVy3_10a1_good via_RVy3_10a2_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the RVy.EN.11 derivations
met_RVy3_11 = M4 WITH WIDTH == 0.080
via_RVy3_11 = RV3 NOT OUTSIDE met_RVy3_11
via_RVy3_11_bad = RECTANGLE ENCLOSURE via_RVy3_11 M4 ABUT<90 SINGULAR 
GOOD 0.019 0.024 OPPOSITE 0.019 0.024 OPPOSITE
via_RVy3_11_good = via_RVy3_11 NOT via_RVy3_11_bad
//;end of the RVy.EN.11 derivations
via_RVy3_10_11_good = OR via_RVy3_10_good via_RVy3_10a_good via_RVy3_10a1_good via_RVy3_10a2_good via_RVy3_10b_good via_RVy3_11_good
 
Q: 
RVy3_EN_11 {
@ Enclosure of short side of RVy by 1.25xMy (width = 0.08um) with the other two sides >= 0.024um. >= 0.019um
 err1 = via_RVy3_11_bad NOT (OR via_RVy3_10_good via_RVy3_10a_good via_RVy3_10a1_good via_RVy3_10a2_good via_RVy3_10b_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the RVy.EN.12 derivations
met_RVy3_12 = M4 WITH WIDTH > 0.080
via_RVy3_12_TMP = RV3 INTERACT met_RVy3_12
via_RVy3_12 = via_RVy3_12_TMP NOT via_RVy3_10_11_good
via_RVy3_12_bad1 = RECTANGLE ENCLOSURE via_RVy3_12 M4 ABUT<90 SINGULAR 
GOOD 0.019 OPPOSITE 0.030 OPPOSITE 0.019 OPPOSITE 0.030 OPPOSITE 
GOOD 0.024 OPPOSITE 0.029 OPPOSITE 0.024 OPPOSITE 0.029 OPPOSITE
 
via_RVy3_12_R_L = LENGTH via_RVy3_12 >= 0.072 <= 0.080
via_RVy3_12_R_W = LENGTH via_RVy3_12 >= 0.024 <= 0.032
via_RVy3_12_Z1 = ENC [via_RVy3_12_R_W] M4 < 0.029 ABUT<90 OPPOSITE EXTENDED 0.024 // include corner enclosure
via_RVy3_12_Z2 = ENC [via_RVy3_12_R_W] M4 < 0.019 ABUT<90 OPPOSITE EXTENDED 0.030 // include corner enclosure
via_RVy3_12_Z3 = ENC [via_RVy3_12_R_L] M4 < 0.024 ABUT<90 OPPOSITE
via_RVy3_12_Z4 = ENC [via_RVy3_12_R_L] M4 < 0.030 ABUT<90 OPPOSITE
via_RVy3_12_bad2 = (via_RVy3_12 WITH EDGE via_RVy3_12_Z1) WITH EDGE via_RVy3_12_Z4
via_RVy3_12_bad3 = (via_RVy3_12 NOT WITH EDGE via_RVy3_12_Z1) WITH EDGE via_RVy3_12_Z3
via_RVy3_12_good = via_RVy3_12 NOT (OR via_RVy3_12_bad1 via_RVy3_12_bad2 via_RVy3_12_bad3)
//;end of the RVy.EN.12 derivations
 
Q: 
RVy3_EN_12 {
@ Enclosure of short side of RVy by 1.25xMy (width > 0.08um) with the other two sides >= 0.03/0.024um. >= 0.019/0.029um
 // 1.if W enclosure >= 0.019, then L enclosure >= 0.030
 // 2.if W enclosure >= 0.029, then L enclosure >= 0.024
 via_RVy3_12_bad1 NOT INSIDE SealR_NOT_BULK
 via_RVy3_12_bad2 NOT INSIDE SealR_NOT_BULK
 via_RVy3_12_bad3 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
RVy3_EN_13 {
@ RVy enclosure by 1.25xMy edge (between two consecutive 90-270 degree corners, length < 0.16um), when PRL > 0. >= 0.029um
 chk_edge = CONVEX EDGE M4 ANGLE1 == 90 ANGLE2 == 270 WITH LENGTH < 0.16
 err1_TMP = chk_edge TOUCH EDGE (EXT chk_edge M4_convex_270_90_edges < 0.005 ABUT==90 INTERSECTING ONLY REGION)
 err1 = ENC RV3 err1_TMP < 0.029 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
RVy3_EN_14 {
@ RVy enclosure by 1.25xMy for two opposite sides (PRL > 0) with the other side enclosure < 0.04um (corresponding edge length < 0.16um between two consecutive 90-270 degree corners) >= 0.04um
 correspond_EDG = CONVEX EDGE M4 ANGLE1 == 90 ANGLE2 == 270 WITH LENGTH < 0.16
 correspond_ENC = ENC [RV3] correspond_EDG < 0.04 ABUT<90 OPPOSITE EXTENDED 0.001
 correspond_VIA_ENC_EDGE = RV3 TOUCH EDGE correspond_ENC
 correspond_VIA_EDG_CORN = INT [RV3] correspond_VIA_ENC_EDGE < 0.001 ABUT==90 INTERSECTING ONLY
 correspond_VIA_EDG = RV3 TOUCH EDGE correspond_VIA_EDG_CORN
 err1_RAW = ENC [correspond_VIA_EDG] M4 < 0.040 ABUT<90 OPPOSITE EXTENDED 0.001
 err1_TMP = INT correspond_VIA_ENC_EDGE (correspond_VIA_EDG TOUCH EDGE err1_RAW) < 0.005 ABUT==90 INTERSECTING ONLY REGION
 err1 = EXPAND EDGE (RV3 TOUCH EDGE err1_TMP) INSIDE BY 0.001
 err1 NOT INSIDE SealR_NOT_BULK
}
 

//125xv4

Q: 
125xv4_EN_1 {
@ 1.25xVn must be fully enclosed by 1.25xMy or 1.25xMn where 1.25xMy or 1.25xMn is the metal layer direct underneath 1.25xVn
@ Enclosure by 1.25xMy or 1.25xMn must follow one of 1.25xVn.EN.2 or 1.25xVn.EN.3 or 1.25xVn.EN.4 or 1.25xVn.EN.5 or 1.25xVn.EN.6 or 1.25xVn.EN.7
 err1 = V4N NOT M4
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.2 derivations
met_125xv4_2 = M4 WITH WIDTH == 0.040
via_125xv4_2 = V4N NOT OUTSIDE met_125xv4_2
via_125xv4_2_bad = RECTANGLE ENCLOSURE via_125xv4_2 M4 ABUT<90 SINGULAR 
GOOD 0 0.049 OPPOSITE 0 0.049 OPPOSITE
via_125xv4_2_good = via_125xv4_2 NOT via_125xv4_2_bad
//;end of the 125xVn.EN.2 derivations
 
Q: 
125xv4_EN_2 {
@ 1.25xVn enclosure by 1.25xMy or 1.25xMn (width = 0.04um) for two opposite sides with the other two sides >= 0um. >= 0.049um
 err1 = COPY via_125xv4_2_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.2a derivations
met_125xv4_2a = M4 WITH WIDTH == 0.042
via_125xv4_2a = V4N NOT OUTSIDE met_125xv4_2a
via_125xv4_2a_bad = RECTANGLE ENCLOSURE via_125xv4_2a M4 ABUT<90 SINGULAR 
GOOD 0.001 0.049 OPPOSITE 0.001 0.049 OPPOSITE
via_125xv4_2a_good = via_125xv4_2a NOT via_125xv4_2a_bad
//;end of the 125xVn.EN.2a derivations
 
Q: 
125xv4_EN_2a {
@ 1.25xVn enclosure by 1.25xMy or 1.25xMn (width = 0.042um) for two opposite sides with the other two sides >= 0.001um. >= 0.049um
 err1 = via_125xv4_2a_bad NOT via_125xv4_2_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.3 derivations
met_125xv4_3 = M4 WITH WIDTH == 0.044
via_125xv4_3 = V4N NOT OUTSIDE met_125xv4_3
via_125xv4_3_bad = RECTANGLE ENCLOSURE via_125xv4_3 M4 ABUT<90 SINGULAR 
GOOD 0.002 0.049 OPPOSITE 0.002 0.049 OPPOSITE
via_125xv4_3_good = via_125xv4_3 NOT via_125xv4_3_bad
//;end of the 125xVn.EN.3 derivations
 
Q: 
125xv4_EN_3 {
@ 1.25xVn enclosure by 1.25xMy or 1.25xMn (width = 0.044um) for two opposite sides with the other two sides >= 0.002um. >= 0.049um
 err1 = via_125xv4_3_bad NOT (OR via_125xv4_2_good via_125xv4_2a_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.3a derivations
met_125xv4_4 = M4 WITH WIDTH == 0.046
via_125xv4_4 = V4N NOT OUTSIDE met_125xv4_4
via_125xv4_4_bad = RECTANGLE ENCLOSURE via_125xv4_4 M4 ABUT<90 SINGULAR 
GOOD 0.003 0.049 OPPOSITE 0.003 0.049 OPPOSITE
via_125xv4_4_good = via_125xv4_4 NOT via_125xv4_4_bad
//;end of the 125xVn.EN.3a derivations
 
Q: 
125xv4_EN_4 {
@ 1.25xVn enclosure by 1.25xMy or 1.25xMn (width = 0.046um) for two opposite sides with the other two sides >= 0.003um. >= 0.049um
 err1 = via_125xv4_4_bad NOT (OR via_125xv4_2_good via_125xv4_2a_good via_125xv4_3_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.5 derivations
met_125xv4_5 = M4 WITH WIDTH >= 0.060 < 0.08
via_125xv4_5 = V4N NOT OUTSIDE met_125xv4_5
via_125xv4_5_bad = RECTANGLE ENCLOSURE via_125xv4_5 M4 ABUT<90 SINGULAR 
GOOD 0.01 0.049 OPPOSITE 0.01 0.049 OPPOSITE
via_125xv4_5_good = via_125xv4_5 NOT via_125xv4_5_bad
//;end of the 125xVn.EN.5 derivations
 
Q: 
125xv4_EN_5 {
@ 1.25xVn enclosure by 1.25xMy or 1.25xMn (0.06 <= width < 0.08um) for two opposite sides with the other two sides >= 0.01um. >= 0.049um
 err1 = via_125xv4_5_bad NOT (OR via_125xv4_2_good via_125xv4_2a_good via_125xv4_3_good via_125xv4_4_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
// 125xVn.EN.5: purposely blank
 
//;beginning of the 125xVn.EN.6 derivations
met_125xv4_6 = M4 WITH WIDTH == 0.080
via_125xv4_6 = V4N NOT OUTSIDE met_125xv4_6
via_125xv4_6_bad = RECTANGLE ENCLOSURE via_125xv4_6 M4 ABUT<90 SINGULAR 
GOOD 0.02 0.02 0.02 0.02 OPPOSITE
via_125xv4_6_good = via_125xv4_6 NOT via_125xv4_6_bad
//;end of the 125xVn.EN.6 derivations
via_125xv4_2_3_4_good = OR via_125xv4_2_good via_125xv4_2a_good via_125xv4_3_good via_125xv4_4_good via_125xv4_5_good
via_125xv4_2_3_4_6_good = OR via_125xv4_2_3_4_good via_125xv4_6_good
 
Q: 
125xv4_EN_6 {
@ 1.25xVn enclosure by 1.25xMy or 1.25xMn (width = 0.08um) for all sides >= 0.02um
 err1 = via_125xv4_6_bad NOT via_125xv4_2_3_4_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 = ENC via_125xv4_6 M4 < 0.02 ABUT<90 SINGULAR REGION //for via corner enclosure check
 err2 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.7 derivations
met_125xv4_7 = M4 WITH WIDTH > 0.080
via_125xv4_7 = V4N NOT OUTSIDE met_125xv4_7
via_125xv4_7_bad = RECTANGLE ENCLOSURE via_125xv4_7 M4 ABUT<90 SINGULAR 
GOOD 0.02 0.029 OPPOSITE 0.02 0.029 OPPOSITE
via_125xv4_7_good = via_125xv4_7 NOT via_125xv4_7_bad
//;end of the 125xVn.EN.7 derivations
 
Q: 
125xv4_EN_7 {
@ 1.25xVn enclosure by 1.25xMy or 1.25xMn (width > 0.08um) for two opposite sides with the other two sides >= 0.02um. >= 0.029um
 err1 = via_125xv4_7_bad NOT via_125xv4_2_3_4_6_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xv4_EN_8 {
@ 1.25xVn bar enclosure by 1.25xMy or 1.25xMn >= 0.098um
 err1 = (V4_BAR_100_all OR V4_BAR_450_all) NOT M4
 err2 = ENC V4_BAR_100_all M4 < 0.098 ABUT<90 SINGULAR REGION
 err3 = ENC V4_BAR_450_all M4 < 0.098 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xv4_EN_9 {
@ 1.25xVn must be fully enclosed by 1.25xMn+1 where 1.25xMn+1 is the metal layer directly above 1.25xVn
@ Enclosure by 1.25xMn+1 must follow one of 1.25xVn.EN.10 or 1.25xVn.EN.11 or 1.25xVn.EN.12 or 1.25xVn.EN.13 or 1.25xVn.EN.14
 err1 = V4N NOT M5
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.10 derivations
met_125xv4_10 = M5 WITH WIDTH == 0.040
via_125xv4_10 = V4N NOT OUTSIDE met_125xv4_10
via_125xv4_10_bad = RECTANGLE ENCLOSURE via_125xv4_10 M5 ABUT<90 SINGULAR 
GOOD 0 0.049 OPPOSITE 0 0.049 OPPOSITE
via_125xv4_10_good = via_125xv4_10 NOT via_125xv4_10_bad
//;end of the 125xVn.EN.10 derivations
 
Q: 
125xv4_EN_10 {
@ 1.25xVn enclosure by 1.25xMn+1 (width = 0.04um) for two opposite sides with the other two sides >= 0um. >= 0.049um
 err1 = copy via_125xv4_10_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.10a derivations
met_125xv4_10a = M5 WITH WIDTH == 0.042
via_125xv4_10a = V4N NOT OUTSIDE met_125xv4_10a
via_125xv4_10a_bad = RECTANGLE ENCLOSURE via_125xv4_10a M5 ABUT<90 SINGULAR 
GOOD 0.001 0.049 OPPOSITE 0.001 0.049 OPPOSITE
via_125xv4_10a_good = via_125xv4_10a NOT via_125xv4_10a_bad
//;end of the 125xVn.EN.10a derivations
 
Q: 
125xv4_EN_10a {
@ 1.25xVn enclosure by 1.25xMn+1 (width = 0.042um) for two opposite sides with the other two sides >= 0.001um. >= 0.049um
 err1 = via_125xv4_10a_bad NOT via_125xv4_10_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.11 derivations
met_125xv4_11 = M5 WITH WIDTH == 0.044
via_125xv4_11_TMP = V4N NOT OUTSIDE met_125xv4_11
via_125xv4_11 = via_125xv4_11_TMP NOT via_125xv4_10_good
via_125xv4_11_bad = RECTANGLE ENCLOSURE via_125xv4_11 M5 ABUT<90 SINGULAR 
GOOD 0.002 0.049 OPPOSITE 0.002 0.049 OPPOSITE
via_125xv4_11_good = via_125xv4_11 NOT via_125xv4_11_bad
//;end of the 125xVn.EN.11 derivations
 
Q: 
125xv4_EN_11 {
@ 1.25xVn enclosure by 1.25xMn+1 (width = 0.044um) for two opposite sides with the other two sides >= 0.002um. >= 0.049um
 err1 = via_125xv4_11_bad NOT (OR via_125xv4_10_good via_125xv4_10a_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.11 derivations
met_125xv4_11a = M5 WITH WIDTH == 0.046
via_125xv4_11a = V4N NOT OUTSIDE met_125xv4_11a
via_125xv4_11a_bad = RECTANGLE ENCLOSURE via_125xv4_11a M5 ABUT<90 SINGULAR 
GOOD 0.003 0.049 OPPOSITE 0.003 0.049 OPPOSITE
via_125xv4_11a_good = via_125xv4_11a NOT via_125xv4_11a_bad
//;end of the 125xVn.EN.11 derivations
 
Q: 
125xv4_EN_11a {
@ 1.25xVn enclosure by 1.25xMn+1 (width = 0.046um) for two opposite sides with the other two sides >= 0.003um. >= 0.049um
 err1 = via_125xv4_11a_bad NOT (OR via_125xv4_10_good via_125xv4_10a_good via_125xv4_11_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.12 derivations
met_125xv4_12 = M5 WITH WIDTH >= 0.060 < 0.08
via_125xv4_12 = V4N NOT OUTSIDE met_125xv4_12
via_125xv4_12_bad = RECTANGLE ENCLOSURE via_125xv4_12 M5 ABUT<90 SINGULAR 
GOOD 0.01 0.049 OPPOSITE 0.01 0.049 OPPOSITE
via_125xv4_12_good = via_125xv4_12 NOT via_125xv4_12_bad
//;end of the 125xVn.EN.12 derivations
via_125xv4_10_11_good = OR via_125xv4_10_good via_125xv4_10a_good via_125xv4_11_good via_125xv4_11a_good
via_125xv4_10_11_12_good = OR via_125xv4_10_11_good via_125xv4_12_good
 
Q: 
125xv4_EN_12 {
@ 1.25xVn enclosure by 1.25xMn+1 (0.06 <= width < 0.08um) for two opposite sides with the other two sides >= 0.01um. >= 0.049um
 err1 = via_125xv4_12_bad NOT via_125xv4_10_11_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.13 derivations
met_125xv4_13 = M5 WITH WIDTH == 0.080
via_125xv4_13 = V4N NOT OUTSIDE met_125xv4_13
via_125xv4_13_bad = RECTANGLE ENCLOSURE via_125xv4_13 M5 ABUT<90 SINGULAR 
GOOD 0.02 0.02 0.02 0.02 OPPOSITE
via_125xv4_13_good = via_125xv4_13 NOT via_125xv4_13_bad
//;end of the 125xVn.EN.13 derivations
 
Q: 
125xv4_EN_13 {
@ 1.25xVn enclosure by 1.25xMn+1 (width = 0.08um) for all sides >= 0.02um
 err1 = via_125xv4_13_bad NOT via_125xv4_10_11_12_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 = ENC via_125xv4_13 M5 < 0.02 ABUT<90 SINGULAR REGION //for via corner enclosure check
 err2 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.14 derivations
met_125xv4_14 = M5 WITH WIDTH > 0.080
via_125xv4_14 = V4N NOT OUTSIDE met_125xv4_14
via_125xv4_14_bad = RECTANGLE ENCLOSURE via_125xv4_14 M5 ABUT<90 SINGULAR 
GOOD 0.02 0.029 OPPOSITE 0.02 0.029 OPPOSITE
via_125xv4_14_good = via_125xv4_14 NOT via_125xv4_14_bad
//;end of the 125xVn.EN.14 derivations
 
Q: 
125xv4_EN_14 {
@ 1.25xVn enclosure by 1.25xMn+1 (width > 0.08um) for two opposite sides with the other two sides >= 0.02um. >= 0.029um
 err1 = via_125xv4_14_bad NOT (OR via_125xv4_10_11_12_good via_125xv4_13_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xv4_EN_15 {
@ 1.25xVn enclosure by 1.25xMn+1 edge (between two consecutive 90-270 degree corners, length < 0.16um), when PRL > 0um. >= 0.029um
 chk_edge = CONVEX EDGE M5 ANGLE1 == 90 ANGLE2 == 270 WITH LENGTH < 0.16
 err1_TMP = chk_edge TOUCH EDGE (EXT chk_edge M5_convex_270_90_edges < 0.005 ABUT==90 INTERSECTING ONLY REGION)
 err1 = ENC V4N err1_TMP < 0.029 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xv4_EN_16 {
@ 1.25xVn enclosure by 1.25xMn+1 for two opposite sides (PRL > 0) with the other side enclosure < 0.04um (corresponding edge length < 0.16um between two consecutive 90-270 degree corners) >= 0.04um
 correspond_EDG = CONVEX EDGE M5 ANGLE1 == 90 ANGLE2 == 270 WITH LENGTH < 0.16
 correspond_ENC = ENC [V4N] correspond_EDG < 0.04 ABUT<90 OPPOSITE EXTENDED 0.001
 correspond_VIA_ENC_EDGE = V4N TOUCH EDGE correspond_ENC
 correspond_VIA_EDG_CORN = INT [V4N] correspond_VIA_ENC_EDGE < 0.001 ABUT==90 INTERSECTING ONLY
 correspond_VIA_EDG = V4N TOUCH EDGE correspond_VIA_EDG_CORN
 err1_RAW = ENC [correspond_VIA_EDG] M5 < 0.040 ABUT<90 OPPOSITE EXTENDED 0.001
 err1_TMP = INT correspond_VIA_ENC_EDGE (correspond_VIA_EDG TOUCH EDGE err1_RAW) < 0.005 ABUT==90 INTERSECTING ONLY REGION
 err1 = EXPAND EDGE (V4N TOUCH EDGE err1_TMP) INSIDE BY 0.001
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xv4_EN_17 {
@ 1.25xVn bar fully enclosure by 1.25xMn+1 >= 0.2um
 err1 = (V4_BAR_100_all OR V4_BAR_450_all) NOT M5
 err2 = ENC V4_BAR_100_all M5 < 0.2 ABUT<90 SINGULAR REGION
 err3 = ENC V4_BAR_450_all M5 < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

//125xRv4

Q: 
125xRv4_EN_1 {
@ 1.25xRVn must be fully enclosed by 1.25xMy or 1.25xMn where 1.25xMy or 1.25xMn is the metal layer directly underneath 1.25xRVn. Enclosure by 1.25xMy or 1.25xMn must follow one of 1.25xRVn.EN.2 or 1.25xRVn.EN.3 or 1.25xRVn.EN.4 or 1.25xRVn.EN.5 or 1.25xRVn.EN.6 or 1.25xRVn.EN.7 or 1.25xRVn.EN.8
 err1 = RV4 NOT M4
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.2 derivations
met_125xRv4_2 = M4 WITH WIDTH == 0.040
via_125xRv4_2 = RV4 NOT OUTSIDE met_125xRv4_2
via_125xRv4_2_bad = RECTANGLE ENCLOSURE via_125xRv4_2 M4 ABUT<90 SINGULAR 
GOOD 0 0.049 OPPOSITE 0 0.049 OPPOSITE
via_125xRv4_2_good = via_125xRv4_2 NOT via_125xRv4_2_bad
//;end of the 125xRVn.EN.2 derivations
 
Q: 
125xRv4_EN_2 {
@ 1.25xRVn enclosure by 1.25xMy or 1.25xMn (width = 0.04um) for two opposite sides with the other two sides >= 0um. >= 0.049um
 err1 = copy via_125xRv4_2_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.2a derivations
met_125xRv4_2a = M4 WITH WIDTH == 0.042
via_125xRv4_2a = RV4 NOT OUTSIDE met_125xRv4_2a
via_125xRv4_2a_bad = RECTANGLE ENCLOSURE via_125xRv4_2a M4 ABUT<90 SINGULAR 
GOOD 0.001 0.049 OPPOSITE 0.001 0.049 OPPOSITE
via_125xRv4_2a_good = via_125xRv4_2a NOT via_125xRv4_2a_bad
//;end of the 125xRVn.EN.2a derivations
 
Q: 
125xRv4_EN_2a {
@ 1.25xRVn enclosure by 1.25xMy or 1.25xMn (width = 0.042um) for two opposite sides with the other two sides >= 0.001um. >= 0.049um
 err1 = via_125xRv4_2a_bad NOT via_125xRv4_2_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.3 derivations
met_125xRv4_3 = M4 WITH WIDTH == 0.044
via_125xRv4_3 = RV4 NOT OUTSIDE met_125xRv4_3
via_125xRv4_3_bad = RECTANGLE ENCLOSURE via_125xRv4_3 M4 ABUT<90 SINGULAR 
GOOD 0.002 0.049 OPPOSITE 0.002 0.049 OPPOSITE
via_125xRv4_3_good = via_125xRv4_3 NOT via_125xRv4_3_bad
//;end of the 125xRVn.EN.3 derivations
 
Q: 
125xRv4_EN_3 {
@ 1.25xRVn enclosure by 1.25xMy or 1.25xMn (width = 0.044um) for two opposite sides with the other two sides >= 0.002um. >= 0.049um
 err1 = via_125xRv4_3_bad NOT (OR via_125xRv4_2_good via_125xRv4_2a_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.3a derivations
met_125xRv4_3a = M4 WITH WIDTH == 0.046
via_125xRv4_3a = RV4 NOT OUTSIDE met_125xRv4_3a
via_125xRv4_3a_bad = RECTANGLE ENCLOSURE via_125xRv4_3a M4 ABUT<90 SINGULAR 
GOOD 0.003 0.049 OPPOSITE 0.003 0.049 OPPOSITE
via_125xRv4_3a_good = via_125xRv4_3a NOT via_125xRv4_3a_bad
//;end of the 125xRVn.EN.3a derivations
 
Q: 
125xRv4_EN_3a {
@ 1.25xRVn enclosure by 1.25xMy or 1.25xMn (width = 0.046um) for two opposite sides with the other two sides >= 0.003um. >= 0.049um
 err1 = via_125xRv4_3a_bad NOT (OR via_125xRv4_2_good via_125xRv4_2a_good via_125xRv4_3_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.4 derivations
met_125xRv4_4 = M4 WITH WIDTH >= 0.060 < 0.08
via_125xRv4_4 = RV4 NOT OUTSIDE met_125xRv4_4
via_125xRv4_4_bad = RECTANGLE ENCLOSURE via_125xRv4_4 M4 ABUT<90 SINGULAR 
GOOD 0.01 0.049 OPPOSITE 0.010 0.049 OPPOSITE
via_125xRv4_4_good = via_125xRv4_4 NOT via_125xRv4_4_bad
//;end of the 125xRVn.EN.4 derivations
via_125xRv4_2_3_good = OR via_125xRv4_2_good via_125xRv4_2a_good via_125xRv4_3_good via_125xRv4_3a_good
via_125xRv4_2_3_4_good = OR via_125xRv4_2_3_good via_125xRv4_4_good
 
Q: 
125xRv4_EN_4 {
@ 1.25xRVn enclosure by 1.25xMy or 1.25xMn (0.06um <= width < 0.08um) for two opposite sides with the other two sides >= 0.01um. >= 0.049um
 err1 = via_125xRv4_4_bad NOT via_125xRv4_2_3_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.5 derivations
met_125xRv4_5 = M4 WITH WIDTH == 0.080
via_125xRv4_5 = RV4 NOT OUTSIDE met_125xRv4_5
via_125xRv4_5_bad = RECTANGLE ENCLOSURE via_125xRv4_5 M4 ABUT<90 SINGULAR 
GOOD 0.02 0.02 0.02 0.02 OPPOSITE
via_125xRv4_5_good = via_125xRv4_5 NOT via_125xRv4_5_bad
//;end of the 125xRVn.EN.5 derivations
 
Q: 
125xRv4_EN_5 {
@ 1.25xRVn enclosure by 1.25xMy or 1.25xMn (width = 0.08um) for all sides >= 0.02um
 err1 = via_125xRv4_5_bad NOT via_125xRv4_2_3_4_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 = ENC via_125xRv4_5 M4 < 0.02 ABUT<90 SINGULAR REGION
 err2 NOT INSIDE SealR_NOT_BULK
}
 
125xRv_14 = EXT [RV4_L] == 0.08 ABUT<90 OPPOSITE
125xRv_24 = LENGTH 125xRv_14 == 0.1
125xRv_04 = (EXT RV4_L == 0.08 ABUT<90 OPPOSITE REGION) WITH EDGE 125xRv_24
125xRv_34 = RV4 WITH EDGE 125xRv_14
125xRv_array4 = (125xRv_34 OR 125xRv_04) INTERACT 125xRv_34 > 1
 
//;beginning of the 125xRVn.EN.6 derivations
met_125xRv4_6 = M4 WITH WIDTH > 0.080
via_125xRv4_6 = (RV4 INTERACT met_125xRv4_6) NOT INTERACT 125xRv_array4
via_125xRv4_6_bad = RECTANGLE ENCLOSURE via_125xRv4_6 M4 ABUT<90 SINGULAR 
GOOD 0.02 0.029 OPPOSITE 0.02 0.029 OPPOSITE
via_125xRv4_6_good = via_125xRv4_6 NOT via_125xRv4_6_bad
//;end of the 125xRVn.EN.6 derivations
 
Q: 
125xRv4_EN_6 {
@ 1.25xRVn enclosure by 1.25xMy or 1.25xMn (width > 0.08um) for two opposite sides with the other two sides >= 0.02um (except rectangular 1.25xRVn array) >= 0.029um
 err1 = via_125xRv4_6_bad NOT (OR via_125xRv4_2_3_4_good via_125xRv4_5_good via_125xRv4_7_good) //125xRv.EN.6~7: the width conditions are covered by each other
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.7 derivations
met_125xRv4_7 = M4 WITH WIDTH > 0.080
via_125xRv4_7 = (RV4 INTERACT met_125xRv4_7) NOT INTERACT 125xRv_array4
via_125xRv4_7_L_edges = LENGTH via_125xRv4_7 == 0.10
via_125xRv4_7_W_edges = LENGTH via_125xRv4_7 == 0.04
via_125xRv4_7_x = ENC [via_125xRv4_7_L_edges] M4 < 0.039 ABUT<90 OPPOSITE
via_125xRv4_7_y = ENC [via_125xRv4_7_W_edges] M4 < 0.01 ABUT<90 OPPOSITE
via_125xRv4_7_bad = via_125xRv4_7 WITH EDGE (OR EDGE via_125xRv4_7_x via_125xRv4_7_y)
via_125xRv4_7_good = via_125xRv4_7 NOT via_125xRv4_7_bad
//;end of the 125xRVn.EN.7 derivations
 
Q: 
125xRv4_EN_7 {
@ 1.25xRVn enclosure by short side of 1.25xMy or 1.25xMn (width > 0.08um) with long side enclosure >= 0.039um (except rectangular 1.25xRVn array) >= 0.01um
 err1 = via_125xRv4_7_bad NOT (OR via_125xRv4_2_3_4_good via_125xRv4_5_good via_125xRv4_6_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.8 derivations
met_125xRv4_8 = COPY M4
via_125xRv4_8 = (RV4 INTERACT met_125xRv4_8) INTERACT 125xRv_array4
via_125xRv4_8_bad = RECTANGLE ENCLOSURE via_125xRv4_8 M4 ABUT<90 SINGULAR 
GOOD 0.01 0.02 OPPOSITE 0.01 0.02 OPPOSITE
via_125xRv4_8_good = via_125xRv4_8 NOT via_125xRv4_8_bad
//;end of the 125xRVn.EN.8 derivations
 
Q: 
125xRv4_EN_8 {
@ 1.25xRVn array enclosed by 1.25xMn/1.25xMy for two opposite sides with the other two sides (rectangular 1.25xVn array edge length = 0.1um) >= 0.02um
@ Definition of 1.25xRVn array:
@ 1.25xVn long side space = 0.08um (PRL = 0.1um) >= 0.01um
 err1 = via_125xRv4_8_bad NOT (OR via_125xRv4_2_3_4_good via_125xRv4_5_good via_125xRv4_6_good via_125xRv4_7_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xRv4_EN_9 {
@ 1.25xRVn must be fully enclosed by 1.25xMn+1 where 1.25xMn+1 is the metal layer directly above 1.25xRVn. Enclosures by 1.25xMn+1 must follow one of 1.25xRVn.EN.10 or 1.25xRVn.EN.11 or 1.25xRVn.EN.12 or 1.25xRVn.EN.13 or 1.25xRVn.EN.14.
 err1 = RV4 NOT M5
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.10 derivations
met_125xRv4_10 = M5 WITH WIDTH == 0.040
via_125xRv4_10 = RV4 NOT OUTSIDE met_125xRv4_10
via_125xRv4_10_bad = RECTANGLE ENCLOSURE via_125xRv4_10 M5 ABUT<90 SINGULAR 
GOOD 0 0.039 OPPOSITE 0 0.039 OPPOSITE
via_125xRv4_10_good = via_125xRv4_10 NOT via_125xRv4_10_bad
//;end of the 125xRVn.EN.10 derivations
 
Q: 
125xRv4_EN_10 {
@ 1.25xRVn enclosure by 1.25xMn+1 (width = 0.04um) for two opposite sides with the other two sides >= 0um. >= 0.039um
 err1 = copy via_125xRv4_10_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.10a derivations
met_125xRv4_10a = M5 WITH WIDTH == 0.042
via_125xRv4_10a = RV4 NOT OUTSIDE met_125xRv4_10a
via_125xRv4_10a_bad = RECTANGLE ENCLOSURE via_125xRv4_10a M5 ABUT<90 SINGULAR 
GOOD 0.001 0.039 OPPOSITE 0.001 0.039 OPPOSITE
via_125xRv4_10a_good = via_125xRv4_10a NOT via_125xRv4_10a_bad
//;end of the 125xRVn.EN.10a derivations
 
Q: 
125xRv4_EN_10a {
@ 1.25xRVn enclosure by 1.25xMn+1 (width = 0.042um) for two opposite sides with the other two sides >= 0.001um. >= 0.039um
 err1 = via_125xRv4_10a_bad NOT via_125xRv4_10_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.10b derivations
met_125xRv4_10b = M5 WITH WIDTH == 0.044
via_125xRv4_10b = RV4 NOT OUTSIDE met_125xRv4_10b
via_125xRv4_10b_bad = RECTANGLE ENCLOSURE via_125xRv4_10b M5 ABUT<90 SINGULAR 
GOOD 0.002 0.039 OPPOSITE 0.002 0.039 OPPOSITE
via_125xRv4_10b_good = via_125xRv4_10b NOT via_125xRv4_10b_bad
//;end of the 125xRVn.EN.10b derivations
 
Q: 
125xRv4_EN_10b {
@ 1.25xRVn enclosure by 1.25xMn+1 (width = 0.044um) for two opposite sides with the other two sides >= 0.002um. >= 0.039um
 err1 = via_125xRv4_10b_bad NOT (OR via_125xRv4_10_good via_125xRv4_10a_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.10c derivations
met_125xRv4_10c = M5 WITH WIDTH == 0.046
via_125xRv4_10c = RV4 NOT OUTSIDE met_125xRv4_10c
via_125xRv4_10c_bad = RECTANGLE ENCLOSURE via_125xRv4_10c M5 ABUT<90 SINGULAR 
GOOD 0.003 0.039 OPPOSITE 0.003 0.039 OPPOSITE
via_125xRv4_10c_good = via_125xRv4_10c NOT via_125xRv4_10c_bad
//;end of the 125xRVn.EN.10c derivations
 
Q: 
125xRv4_EN_10c {
@ 1.25xRVn enclosure by 1.25xMn+1 (width = 0.046um) for two opposite sides with the other two sides >= 0.003um. >= 0.039um
 err1 = via_125xRv4_10c_bad NOT (OR via_125xRv4_10_good via_125xRv4_10a_good via_125xRv4_10b_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.10d derivations
met_125xRv4_10d = M5 WITH WIDTH >= 0.060 < 0.08
via_125xRv4_10d = RV4 NOT OUTSIDE met_125xRv4_10d
via_125xRv4_10d_bad = RECTANGLE ENCLOSURE via_125xRv4_10d M5 ABUT<90 SINGULAR 
GOOD 0.01 0.039 OPPOSITE 0.01 0.039 OPPOSITE
via_125xRv4_10d_good = via_125xRv4_10d NOT via_125xRv4_10d_bad
//;end of the 125xRVn.EN.10d derivations
 
Q: 
125xRv4_EN_10d {
@ 1.25xRVn enclosure by 1.25xMn+1 (width >= 0.06 < 0.08um) for two opposite sides with the other two sides >= 0.01um. >= 0.039um
 err1 = via_125xRv4_10d_bad NOT (OR via_125xRv4_10_good via_125xRv4_10a_good via_125xRv4_10b_good via_125xRv4_10c_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.11 derivations
met_125xRv4_11 = M5 WITH WIDTH == 0.080
via_125xRv4_11 = RV4 NOT OUTSIDE met_125xRv4_11
via_125xRv4_11_bad = RECTANGLE ENCLOSURE via_125xRv4_11 M5 ABUT<90 SINGULAR 
GOOD 0.02 0.02 0.02 0.02 OPPOSITE
via_125xRv4_11_good = via_125xRv4_11 NOT via_125xRv4_11_bad
//;end of the 125xRVn.EN.11 derivations
via_125xRv4_10_10abcd_good = OR via_125xRv4_10_good via_125xRv4_10a_good via_125xRv4_10b_good via_125xRv4_10c_good via_125xRv4_10d_good
via_125xRv4_10_10a_10b_10c_10d_11_good = OR via_125xRv4_10_10abcd_good via_125xRv4_11_good
 
Q: 
125xRv4_EN_11 {
@ 1.25xRVn enclosure by 1.25xMn+1 (width = 0.08um) for all sides >= 0.02um
 err1 = via_125xRv4_11_bad NOT via_125xRv4_10_10abcd_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 = ENC via_125xRv4_11 M5 < 0.02 ABUT<90 SINGULAR REGION
 err2 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.12 derivations
met_125xRv4_12 = M5 WITH WIDTH > 0.08
via_125xRv4_12 = (RV4 INTERACT met_125xRv4_12) NOT INTERACT 125xRv_array4
via_125xRv4_12_bad = RECTANGLE ENCLOSURE via_125xRv4_12 M5 ABUT<90 SINGULAR 
GOOD 0.02 0.029 OPPOSITE 0.02 0.029 OPPOSITE
via_125xRv4_12_good = via_125xRv4_12 NOT via_125xRv4_12_bad
//;end of the 125xRVn.EN.12 derivations
 
Q: 
125xRv4_EN_12 {
@ 1.25xRVn enclosure by 1.25xMn+1 (width > 0.080um) for two opposite sides with the other two sides >= 0.02um (except rectangular 1.25xVn array) >= 0.029um
 err1 = via_125xRv4_12_bad NOT (OR via_125xRv4_10_10a_10b_10c_10d_11_good via_125xRv4_13_13a_good) //125xRv.EN.12~13: the width conditions are covered by each other
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.13a derivations
met_125xRv4_13a = (M5 WITH WIDTH > 0.08) WITH WIDTH >= 0.12
via_125xRv4_13a = (RV4 INTERACT met_125xRv4_13a) NOT INTERACT 125xRv_array4
via_125xRv4_13a_bad = RECTANGLE ENCLOSURE via_125xRv4_13a M5 ABUT<90 SINGULAR 
GOOD 0.02 0.029 OPPOSITE 0.02 0.029 OPPOSITE
via_125xRv4_13a_good = via_125xRv4_13a NOT via_125xRv4_13a_bad
//;end of the 125xRVn.EN.13a derivations
 
//;beginning of the 125xRVn.EN.13 derivations
met_125xRv4_13 = (M5 WITH WIDTH > 0.08) WITH WIDTH >= 0.12
via_125xRv4_13_TMP = (RV4 INTERACT met_125xRv4_13) NOT INTERACT 125xRv_array4
via_125xRv4_13 = via_125xRv4_13_TMP NOT (OR via_125xRv4_10_10a_10b_10c_10d_11_good via_125xRv4_12_good)
via_125xRv4_13_L_edges = LENGTH via_125xRv4_13 == 0.10
via_125xRv4_13_W_edges = LENGTH via_125xRv4_13 == 0.04
via_125xRv4_13_x = ENC [via_125xRv4_13_L_edges] M5 < 0.039 ABUT<90 OPPOSITE
via_125xRv4_13_y = ENC [via_125xRv4_13_W_edges] M5 < 0.01 ABUT<90 OPPOSITE
via_125xRv4_13_bad = via_125xRv4_13 WITH EDGE (OR EDGE via_125xRv4_13_x via_125xRv4_13_y)
via_125xRv4_13_good = via_125xRv4_13 NOT via_125xRv4_13_bad
via_125xRv4_13_13a_good = OR via_125xRv4_13_good via_125xRv4_13a_good
//;end of the 125xRVn.EN.13 derivations
 
Q: 
125xRv4_EN_13a {
@ 1.25xRVn enclosure by 1.25xMn+1 (width >= 0.12um) for two opposite sides with the other two sides >= 0.02um (except rectangle 1.25xVn array) >= 0.029um
 err1 = via_125xRv4_13a_bad NOT (OR via_125xRv4_10_10a_10b_10c_10d_11_good via_125xRv4_12_good via_125xRv4_13_good) //125xRv.EN.13 already covered by 125xRv.EN.12
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xRv4_EN_13 {
@ 1.25xRVn short side enclosed by 1.25xMn+1, 1.25xMn+1 (width >= 0.12um) with long sides enclosure >= 0.039um (except rectangular 1.25xVn array) >= 0.01um
 err1 = via_125xRv4_13_bad NOT (OR via_125xRv4_10_10a_10b_10c_10d_11_good via_125xRv4_12_good via_125xRv4_13a_good) //125xRv.EN.12~13: the width conditions are covered by each other
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.14a derivations
met_125xRv4_14 = COPY M5
via_125xRv4_14_TMP = (RV4 INTERACT met_125xRv4_14) INTERACT 125xRv_array4
via_125xRv4_14 = via_125xRv4_14_TMP NOT (OR via_125xRv4_10_10a_10b_10c_10d_11_good via_125xRv4_12_good via_125xRv4_13_13a_good)
via_125xRv4_14_bad = RECTANGLE ENCLOSURE via_125xRv4_14 M5 ABUT<90 SINGULAR 
GOOD 0.01 0.02 OPPOSITE 0.01 0.02 OPPOSITE
via_125xRv4_14_good = via_125xRv4_14 NOT via_125xRv4_14_bad
//;end of the 125xRVn.EN.14 derivations
 
Q: 
125xRv4_EN_14 {
@ 1.25xRVn array enclosed by 1.25xMn+1 for two opposite sides with the other two sides (rectangular 1.25xVn array edge length = 0.1um) >= 0.02um
@ Definition of rectangular 1.25xVn array:
@ 1.25xVn long side space = 0.08um (PRL = 0.10um) >= 0.01um
 err1 = copy via_125xRv4_14_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xRv4_EN_15 {
@ 1.25xRVn enclosure by 1.25xMn+1 edge (between two consecutive 90-270 degree corners, length < 0.16um), when PRL > 0. >= 0.029um
 chk_edge = CONVEX EDGE M5 ANGLE1 == 90 ANGLE2 == 270 WITH LENGTH < 0.16
 err1_TMP = chk_edge TOUCH EDGE (EXT chk_edge M5_convex_270_90_edges < 0.005 ABUT==90 INTERSECTING ONLY REGION)
 err1 = ENC RV4 err1_TMP < 0.029 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xRv4_EN_16 {
@ 1.25xRVn enclosure by 1.25xMn+1 for two opposite sides (PRL > 0) with the other side enclosure < 0.04um (corresponding edge length < 0.16um between two consecutive 90-270 degree corners) >= 0.04um
 correspond_EDG = CONVEX EDGE M5 ANGLE1 == 90 ANGLE2 == 270 WITH LENGTH < 0.16
 correspond_ENC = ENC [RV4] correspond_EDG < 0.04 ABUT<90 OPPOSITE EXTENDED 0.001
 correspond_VIA_ENC_EDGE = RV4 TOUCH EDGE correspond_ENC
 correspond_VIA_EDG_CORN = INT [RV4] correspond_VIA_ENC_EDGE < 0.001 ABUT==90 INTERSECTING ONLY
 correspond_VIA_EDG = RV4 TOUCH EDGE correspond_VIA_EDG_CORN
 err1_RAW = ENC [correspond_VIA_EDG] M5 < 0.040 ABUT<90 OPPOSITE EXTENDED 0.001
 err1_TMP = INT correspond_VIA_ENC_EDGE (correspond_VIA_EDG TOUCH EDGE err1_RAW) < 0.005 ABUT==90 INTERSECTING ONLY REGION
 err1 = EXPAND EDGE (RV4 TOUCH EDGE err1_TMP) INSIDE BY 0.001
 err1 NOT INSIDE SealR_NOT_BULK
}

//125xv5

Q: 
125xv5_EN_1 {
@ 1.25xVn must be fully enclosed by 1.25xMy or 1.25xMn where 1.25xMy or 1.25xMn is the metal layer direct underneath 1.25xVn
@ Enclosure by 1.25xMy or 1.25xMn must follow one of 1.25xVn.EN.2 or 1.25xVn.EN.3 or 1.25xVn.EN.4 or 1.25xVn.EN.5 or 1.25xVn.EN.6 or 1.25xVn.EN.7
 err1 = V5N NOT M5
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.2 derivations
met_125xv5_2 = M5 WITH WIDTH == 0.040
via_125xv5_2 = V5N NOT OUTSIDE met_125xv5_2
via_125xv5_2_bad = RECTANGLE ENCLOSURE via_125xv5_2 M5 ABUT<90 SINGULAR 
GOOD 0 0.049 OPPOSITE 0 0.049 OPPOSITE
via_125xv5_2_good = via_125xv5_2 NOT via_125xv5_2_bad
//;end of the 125xVn.EN.2 derivations
 
Q: 
125xv5_EN_2 {
@ 1.25xVn enclosure by 1.25xMy or 1.25xMn (width = 0.04um) for two opposite sides with the other two sides >= 0um. >= 0.049um
 err1 = COPY via_125xv5_2_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.2a derivations
met_125xv5_2a = M5 WITH WIDTH == 0.042
via_125xv5_2a = V5N NOT OUTSIDE met_125xv5_2a
via_125xv5_2a_bad = RECTANGLE ENCLOSURE via_125xv5_2a M5 ABUT<90 SINGULAR 
GOOD 0.001 0.049 OPPOSITE 0.001 0.049 OPPOSITE
via_125xv5_2a_good = via_125xv5_2a NOT via_125xv5_2a_bad
//;end of the 125xVn.EN.2a derivations
 
Q: 
125xv5_EN_2a {
@ 1.25xVn enclosure by 1.25xMy or 1.25xMn (width = 0.042um) for two opposite sides with the other two sides >= 0.001um. >= 0.049um
 err1 = via_125xv5_2a_bad NOT via_125xv5_2_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.3 derivations
met_125xv5_3 = M5 WITH WIDTH == 0.044
via_125xv5_3 = V5N NOT OUTSIDE met_125xv5_3
via_125xv5_3_bad = RECTANGLE ENCLOSURE via_125xv5_3 M5 ABUT<90 SINGULAR 
GOOD 0.002 0.049 OPPOSITE 0.002 0.049 OPPOSITE
via_125xv5_3_good = via_125xv5_3 NOT via_125xv5_3_bad
//;end of the 125xVn.EN.3 derivations
 
Q: 
125xv5_EN_3 {
@ 1.25xVn enclosure by 1.25xMy or 1.25xMn (width = 0.044um) for two opposite sides with the other two sides >= 0.002um. >= 0.049um
 err1 = via_125xv5_3_bad NOT (OR via_125xv5_2_good via_125xv5_2a_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.3a derivations
met_125xv5_4 = M5 WITH WIDTH == 0.046
via_125xv5_4 = V5N NOT OUTSIDE met_125xv5_4
via_125xv5_4_bad = RECTANGLE ENCLOSURE via_125xv5_4 M5 ABUT<90 SINGULAR 
GOOD 0.003 0.049 OPPOSITE 0.003 0.049 OPPOSITE
via_125xv5_4_good = via_125xv5_4 NOT via_125xv5_4_bad
//;end of the 125xVn.EN.3a derivations
 
Q: 
125xv5_EN_4 {
@ 1.25xVn enclosure by 1.25xMy or 1.25xMn (width = 0.046um) for two opposite sides with the other two sides >= 0.003um. >= 0.049um
 err1 = via_125xv5_4_bad NOT (OR via_125xv5_2_good via_125xv5_2a_good via_125xv5_3_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.5 derivations
met_125xv5_5 = M5 WITH WIDTH >= 0.060 < 0.08
via_125xv5_5 = V5N NOT OUTSIDE met_125xv5_5
via_125xv5_5_bad = RECTANGLE ENCLOSURE via_125xv5_5 M5 ABUT<90 SINGULAR 
GOOD 0.01 0.049 OPPOSITE 0.01 0.049 OPPOSITE
via_125xv5_5_good = via_125xv5_5 NOT via_125xv5_5_bad
//;end of the 125xVn.EN.5 derivations
 
Q: 
125xv5_EN_5 {
@ 1.25xVn enclosure by 1.25xMy or 1.25xMn (0.06 <= width < 0.08um) for two opposite sides with the other two sides >= 0.01um. >= 0.049um
 err1 = via_125xv5_5_bad NOT (OR via_125xv5_2_good via_125xv5_2a_good via_125xv5_3_good via_125xv5_4_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
// 125xVn.EN.5: purposely blank
 
//;beginning of the 125xVn.EN.6 derivations
met_125xv5_6 = M5 WITH WIDTH == 0.080
via_125xv5_6 = V5N NOT OUTSIDE met_125xv5_6
via_125xv5_6_bad = RECTANGLE ENCLOSURE via_125xv5_6 M5 ABUT<90 SINGULAR 
GOOD 0.02 0.02 0.02 0.02 OPPOSITE
via_125xv5_6_good = via_125xv5_6 NOT via_125xv5_6_bad
//;end of the 125xVn.EN.6 derivations
via_125xv5_2_3_4_good = OR via_125xv5_2_good via_125xv5_2a_good via_125xv5_3_good via_125xv5_4_good via_125xv5_5_good
via_125xv5_2_3_4_6_good = OR via_125xv5_2_3_4_good via_125xv5_6_good
 
Q: 
125xv5_EN_6 {
@ 1.25xVn enclosure by 1.25xMy or 1.25xMn (width = 0.08um) for all sides >= 0.02um
 err1 = via_125xv5_6_bad NOT via_125xv5_2_3_4_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 = ENC via_125xv5_6 M5 < 0.02 ABUT<90 SINGULAR REGION //for via corner enclosure check
 err2 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.7 derivations
met_125xv5_7 = M5 WITH WIDTH > 0.080
via_125xv5_7 = V5N NOT OUTSIDE met_125xv5_7
via_125xv5_7_bad = RECTANGLE ENCLOSURE via_125xv5_7 M5 ABUT<90 SINGULAR 
GOOD 0.02 0.029 OPPOSITE 0.02 0.029 OPPOSITE
via_125xv5_7_good = via_125xv5_7 NOT via_125xv5_7_bad
//;end of the 125xVn.EN.7 derivations
 
Q: 
125xv5_EN_7 {
@ 1.25xVn enclosure by 1.25xMy or 1.25xMn (width > 0.08um) for two opposite sides with the other two sides >= 0.02um. >= 0.029um
 err1 = via_125xv5_7_bad NOT via_125xv5_2_3_4_6_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xv5_EN_8 {
@ 1.25xVn bar enclosure by 1.25xMy or 1.25xMn >= 0.098um
 err1 = (V5_BAR_100_all OR V5_BAR_450_all) NOT M5
 err2 = ENC V5_BAR_100_all M5 < 0.098 ABUT<90 SINGULAR REGION
 err3 = ENC V5_BAR_450_all M5 < 0.098 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xv5_EN_9 {
@ 1.25xVn must be fully enclosed by 1.25xMn+1 where 1.25xMn+1 is the metal layer directly above 1.25xVn
@ Enclosure by 1.25xMn+1 must follow one of 1.25xVn.EN.10 or 1.25xVn.EN.11 or 1.25xVn.EN.12 or 1.25xVn.EN.13 or 1.25xVn.EN.14
 err1 = V5N NOT M6
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.10 derivations
met_125xv5_10 = M6 WITH WIDTH == 0.040
via_125xv5_10 = V5N NOT OUTSIDE met_125xv5_10
via_125xv5_10_bad = RECTANGLE ENCLOSURE via_125xv5_10 M6 ABUT<90 SINGULAR 
GOOD 0 0.049 OPPOSITE 0 0.049 OPPOSITE
via_125xv5_10_good = via_125xv5_10 NOT via_125xv5_10_bad
//;end of the 125xVn.EN.10 derivations
 
Q: 
125xv5_EN_10 {
@ 1.25xVn enclosure by 1.25xMn+1 (width = 0.04um) for two opposite sides with the other two sides >= 0um. >= 0.049um
 err1 = copy via_125xv5_10_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.10a derivations
met_125xv5_10a = M6 WITH WIDTH == 0.042
via_125xv5_10a = V5N NOT OUTSIDE met_125xv5_10a
via_125xv5_10a_bad = RECTANGLE ENCLOSURE via_125xv5_10a M6 ABUT<90 SINGULAR 
GOOD 0.001 0.049 OPPOSITE 0.001 0.049 OPPOSITE
via_125xv5_10a_good = via_125xv5_10a NOT via_125xv5_10a_bad
//;end of the 125xVn.EN.10a derivations
 
Q: 
125xv5_EN_10a {
@ 1.25xVn enclosure by 1.25xMn+1 (width = 0.042um) for two opposite sides with the other two sides >= 0.001um. >= 0.049um
 err1 = via_125xv5_10a_bad NOT via_125xv5_10_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.11 derivations
met_125xv5_11 = M6 WITH WIDTH == 0.044
via_125xv5_11_TMP = V5N NOT OUTSIDE met_125xv5_11
via_125xv5_11 = via_125xv5_11_TMP NOT via_125xv5_10_good
via_125xv5_11_bad = RECTANGLE ENCLOSURE via_125xv5_11 M6 ABUT<90 SINGULAR 
GOOD 0.002 0.049 OPPOSITE 0.002 0.049 OPPOSITE
via_125xv5_11_good = via_125xv5_11 NOT via_125xv5_11_bad
//;end of the 125xVn.EN.11 derivations
 
Q: 
125xv5_EN_11 {
@ 1.25xVn enclosure by 1.25xMn+1 (width = 0.044um) for two opposite sides with the other two sides >= 0.002um. >= 0.049um
 err1 = via_125xv5_11_bad NOT (OR via_125xv5_10_good via_125xv5_10a_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.11 derivations
met_125xv5_11a = M6 WITH WIDTH == 0.046
via_125xv5_11a = V5N NOT OUTSIDE met_125xv5_11a
via_125xv5_11a_bad = RECTANGLE ENCLOSURE via_125xv5_11a M6 ABUT<90 SINGULAR 
GOOD 0.003 0.049 OPPOSITE 0.003 0.049 OPPOSITE
via_125xv5_11a_good = via_125xv5_11a NOT via_125xv5_11a_bad
//;end of the 125xVn.EN.11 derivations
 
Q: 
125xv5_EN_11a {
@ 1.25xVn enclosure by 1.25xMn+1 (width = 0.046um) for two opposite sides with the other two sides >= 0.003um. >= 0.049um
 err1 = via_125xv5_11a_bad NOT (OR via_125xv5_10_good via_125xv5_10a_good via_125xv5_11_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.12 derivations
met_125xv5_12 = M6 WITH WIDTH >= 0.060 < 0.08
via_125xv5_12 = V5N NOT OUTSIDE met_125xv5_12
via_125xv5_12_bad = RECTANGLE ENCLOSURE via_125xv5_12 M6 ABUT<90 SINGULAR 
GOOD 0.01 0.049 OPPOSITE 0.01 0.049 OPPOSITE
via_125xv5_12_good = via_125xv5_12 NOT via_125xv5_12_bad
//;end of the 125xVn.EN.12 derivations
via_125xv5_10_11_good = OR via_125xv5_10_good via_125xv5_10a_good via_125xv5_11_good via_125xv5_11a_good
via_125xv5_10_11_12_good = OR via_125xv5_10_11_good via_125xv5_12_good
 
Q: 
125xv5_EN_12 {
@ 1.25xVn enclosure by 1.25xMn+1 (0.06 <= width < 0.08um) for two opposite sides with the other two sides >= 0.01um. >= 0.049um
 err1 = via_125xv5_12_bad NOT via_125xv5_10_11_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.13 derivations
met_125xv5_13 = M6 WITH WIDTH == 0.080
via_125xv5_13 = V5N NOT OUTSIDE met_125xv5_13
via_125xv5_13_bad = RECTANGLE ENCLOSURE via_125xv5_13 M6 ABUT<90 SINGULAR 
GOOD 0.02 0.02 0.02 0.02 OPPOSITE
via_125xv5_13_good = via_125xv5_13 NOT via_125xv5_13_bad
//;end of the 125xVn.EN.13 derivations
 
Q: 
125xv5_EN_13 {
@ 1.25xVn enclosure by 1.25xMn+1 (width = 0.08um) for all sides >= 0.02um
 err1 = via_125xv5_13_bad NOT via_125xv5_10_11_12_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 = ENC via_125xv5_13 M6 < 0.02 ABUT<90 SINGULAR REGION //for via corner enclosure check
 err2 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.14 derivations
met_125xv5_14 = M6 WITH WIDTH > 0.080
via_125xv5_14 = V5N NOT OUTSIDE met_125xv5_14
via_125xv5_14_bad = RECTANGLE ENCLOSURE via_125xv5_14 M6 ABUT<90 SINGULAR 
GOOD 0.02 0.029 OPPOSITE 0.02 0.029 OPPOSITE
via_125xv5_14_good = via_125xv5_14 NOT via_125xv5_14_bad
//;end of the 125xVn.EN.14 derivations
 
Q: 
125xv5_EN_14 {
@ 1.25xVn enclosure by 1.25xMn+1 (width > 0.08um) for two opposite sides with the other two sides >= 0.02um. >= 0.029um
 err1 = via_125xv5_14_bad NOT (OR via_125xv5_10_11_12_good via_125xv5_13_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xv5_EN_15 {
@ 1.25xVn enclosure by 1.25xMn+1 edge (between two consecutive 90-270 degree corners, length < 0.16um), when PRL > 0um. >= 0.029um
 chk_edge = CONVEX EDGE M6 ANGLE1 == 90 ANGLE2 == 270 WITH LENGTH < 0.16
 err1_TMP = chk_edge TOUCH EDGE (EXT chk_edge M6_convex_270_90_edges < 0.005 ABUT==90 INTERSECTING ONLY REGION)
 err1 = ENC V5N err1_TMP < 0.029 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xv5_EN_16 {
@ 1.25xVn enclosure by 1.25xMn+1 for two opposite sides (PRL > 0) with the other side enclosure < 0.04um (corresponding edge length < 0.16um between two consecutive 90-270 degree corners) >= 0.04um
 correspond_EDG = CONVEX EDGE M6 ANGLE1 == 90 ANGLE2 == 270 WITH LENGTH < 0.16
 correspond_ENC = ENC [V5N] correspond_EDG < 0.04 ABUT<90 OPPOSITE EXTENDED 0.001
 correspond_VIA_ENC_EDGE = V5N TOUCH EDGE correspond_ENC
 correspond_VIA_EDG_CORN = INT [V5N] correspond_VIA_ENC_EDGE < 0.001 ABUT==90 INTERSECTING ONLY
 correspond_VIA_EDG = V5N TOUCH EDGE correspond_VIA_EDG_CORN
 err1_RAW = ENC [correspond_VIA_EDG] M6 < 0.040 ABUT<90 OPPOSITE EXTENDED 0.001
 err1_TMP = INT correspond_VIA_ENC_EDGE (correspond_VIA_EDG TOUCH EDGE err1_RAW) < 0.005 ABUT==90 INTERSECTING ONLY REGION
 err1 = EXPAND EDGE (V5N TOUCH EDGE err1_TMP) INSIDE BY 0.001
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xv5_EN_17 {
@ 1.25xVn bar fully enclosure by 1.25xMn+1 >= 0.2um
 err1 = (V5_BAR_100_all OR V5_BAR_450_all) NOT M6
 err2 = ENC V5_BAR_100_all M6 < 0.2 ABUT<90 SINGULAR REGION
 err3 = ENC V5_BAR_450_all M6 < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

//125xRv5

Q: 
125xRv5_EN_1 {
@ 1.25xRVn must be fully enclosed by 1.25xMy or 1.25xMn where 1.25xMy or 1.25xMn is the metal layer directly underneath 1.25xRVn. Enclosure by 1.25xMy or 1.25xMn must follow one of 1.25xRVn.EN.2 or 1.25xRVn.EN.3 or 1.25xRVn.EN.4 or 1.25xRVn.EN.5 or 1.25xRVn.EN.6 or 1.25xRVn.EN.7 or 1.25xRVn.EN.8
 err1 = RV5 NOT M5
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.2 derivations
met_125xRv5_2 = M5 WITH WIDTH == 0.040
via_125xRv5_2 = RV5 NOT OUTSIDE met_125xRv5_2
via_125xRv5_2_bad = RECTANGLE ENCLOSURE via_125xRv5_2 M5 ABUT<90 SINGULAR 
GOOD 0 0.049 OPPOSITE 0 0.049 OPPOSITE
via_125xRv5_2_good = via_125xRv5_2 NOT via_125xRv5_2_bad
//;end of the 125xRVn.EN.2 derivations
 
Q: 
125xRv5_EN_2 {
@ 1.25xRVn enclosure by 1.25xMy or 1.25xMn (width = 0.04um) for two opposite sides with the other two sides >= 0um. >= 0.049um
 err1 = copy via_125xRv5_2_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.2a derivations
met_125xRv5_2a = M5 WITH WIDTH == 0.042
via_125xRv5_2a = RV5 NOT OUTSIDE met_125xRv5_2a
via_125xRv5_2a_bad = RECTANGLE ENCLOSURE via_125xRv5_2a M5 ABUT<90 SINGULAR 
GOOD 0.001 0.049 OPPOSITE 0.001 0.049 OPPOSITE
via_125xRv5_2a_good = via_125xRv5_2a NOT via_125xRv5_2a_bad
//;end of the 125xRVn.EN.2a derivations
 
Q: 
125xRv5_EN_2a {
@ 1.25xRVn enclosure by 1.25xMy or 1.25xMn (width = 0.042um) for two opposite sides with the other two sides >= 0.001um. >= 0.049um
 err1 = via_125xRv5_2a_bad NOT via_125xRv5_2_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.3 derivations
met_125xRv5_3 = M5 WITH WIDTH == 0.044
via_125xRv5_3 = RV5 NOT OUTSIDE met_125xRv5_3
via_125xRv5_3_bad = RECTANGLE ENCLOSURE via_125xRv5_3 M5 ABUT<90 SINGULAR 
GOOD 0.002 0.049 OPPOSITE 0.002 0.049 OPPOSITE
via_125xRv5_3_good = via_125xRv5_3 NOT via_125xRv5_3_bad
//;end of the 125xRVn.EN.3 derivations
 
Q: 
125xRv5_EN_3 {
@ 1.25xRVn enclosure by 1.25xMy or 1.25xMn (width = 0.044um) for two opposite sides with the other two sides >= 0.002um. >= 0.049um
 err1 = via_125xRv5_3_bad NOT (OR via_125xRv5_2_good via_125xRv5_2a_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.3a derivations
met_125xRv5_3a = M5 WITH WIDTH == 0.046
via_125xRv5_3a = RV5 NOT OUTSIDE met_125xRv5_3a
via_125xRv5_3a_bad = RECTANGLE ENCLOSURE via_125xRv5_3a M5 ABUT<90 SINGULAR 
GOOD 0.003 0.049 OPPOSITE 0.003 0.049 OPPOSITE
via_125xRv5_3a_good = via_125xRv5_3a NOT via_125xRv5_3a_bad
//;end of the 125xRVn.EN.3a derivations
 
Q: 
125xRv5_EN_3a {
@ 1.25xRVn enclosure by 1.25xMy or 1.25xMn (width = 0.046um) for two opposite sides with the other two sides >= 0.003um. >= 0.049um
 err1 = via_125xRv5_3a_bad NOT (OR via_125xRv5_2_good via_125xRv5_2a_good via_125xRv5_3_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.4 derivations
met_125xRv5_4 = M5 WITH WIDTH >= 0.060 < 0.08
via_125xRv5_4 = RV5 NOT OUTSIDE met_125xRv5_4
via_125xRv5_4_bad = RECTANGLE ENCLOSURE via_125xRv5_4 M5 ABUT<90 SINGULAR 
GOOD 0.01 0.049 OPPOSITE 0.010 0.049 OPPOSITE
via_125xRv5_4_good = via_125xRv5_4 NOT via_125xRv5_4_bad
//;end of the 125xRVn.EN.4 derivations
via_125xRv5_2_3_good = OR via_125xRv5_2_good via_125xRv5_2a_good via_125xRv5_3_good via_125xRv5_3a_good
via_125xRv5_2_3_4_good = OR via_125xRv5_2_3_good via_125xRv5_4_good
 
Q: 
125xRv5_EN_4 {
@ 1.25xRVn enclosure by 1.25xMy or 1.25xMn (0.06um <= width < 0.08um) for two opposite sides with the other two sides >= 0.01um. >= 0.049um
 err1 = via_125xRv5_4_bad NOT via_125xRv5_2_3_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.5 derivations
met_125xRv5_5 = M5 WITH WIDTH == 0.080
via_125xRv5_5 = RV5 NOT OUTSIDE met_125xRv5_5
via_125xRv5_5_bad = RECTANGLE ENCLOSURE via_125xRv5_5 M5 ABUT<90 SINGULAR 
GOOD 0.02 0.02 0.02 0.02 OPPOSITE
via_125xRv5_5_good = via_125xRv5_5 NOT via_125xRv5_5_bad
//;end of the 125xRVn.EN.5 derivations
 
Q: 
125xRv5_EN_5 {
@ 1.25xRVn enclosure by 1.25xMy or 1.25xMn (width = 0.08um) for all sides >= 0.02um
 err1 = via_125xRv5_5_bad NOT via_125xRv5_2_3_4_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 = ENC via_125xRv5_5 M5 < 0.02 ABUT<90 SINGULAR REGION
 err2 NOT INSIDE SealR_NOT_BULK
}
 
125xRv_15 = EXT [RV5_L] == 0.08 ABUT<90 OPPOSITE
125xRv_25 = LENGTH 125xRv_15 == 0.1
125xRv_05 = (EXT RV5_L == 0.08 ABUT<90 OPPOSITE REGION) WITH EDGE 125xRv_25
125xRv_35 = RV5 WITH EDGE 125xRv_15
125xRv_array5 = (125xRv_35 OR 125xRv_05) INTERACT 125xRv_35 > 1
 
//;beginning of the 125xRVn.EN.6 derivations
met_125xRv5_6 = M5 WITH WIDTH > 0.080
via_125xRv5_6 = (RV5 INTERACT met_125xRv5_6) NOT INTERACT 125xRv_array5
via_125xRv5_6_bad = RECTANGLE ENCLOSURE via_125xRv5_6 M5 ABUT<90 SINGULAR 
GOOD 0.02 0.029 OPPOSITE 0.02 0.029 OPPOSITE
via_125xRv5_6_good = via_125xRv5_6 NOT via_125xRv5_6_bad
//;end of the 125xRVn.EN.6 derivations
 
Q: 
125xRv5_EN_6 {
@ 1.25xRVn enclosure by 1.25xMy or 1.25xMn (width > 0.08um) for two opposite sides with the other two sides >= 0.02um (except rectangular 1.25xRVn array) >= 0.029um
 err1 = via_125xRv5_6_bad NOT (OR via_125xRv5_2_3_4_good via_125xRv5_5_good via_125xRv5_7_good) //125xRv.EN.6~7: the width conditions are covered by each other
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.7 derivations
met_125xRv5_7 = M5 WITH WIDTH > 0.080
via_125xRv5_7 = (RV5 INTERACT met_125xRv5_7) NOT INTERACT 125xRv_array5
via_125xRv5_7_L_edges = LENGTH via_125xRv5_7 == 0.10
via_125xRv5_7_W_edges = LENGTH via_125xRv5_7 == 0.04
via_125xRv5_7_x = ENC [via_125xRv5_7_L_edges] M5 < 0.039 ABUT<90 OPPOSITE
via_125xRv5_7_y = ENC [via_125xRv5_7_W_edges] M5 < 0.01 ABUT<90 OPPOSITE
via_125xRv5_7_bad = via_125xRv5_7 WITH EDGE (OR EDGE via_125xRv5_7_x via_125xRv5_7_y)
via_125xRv5_7_good = via_125xRv5_7 NOT via_125xRv5_7_bad
//;end of the 125xRVn.EN.7 derivations
 
Q: 
125xRv5_EN_7 {
@ 1.25xRVn enclosure by short side of 1.25xMy or 1.25xMn (width > 0.08um) with long side enclosure >= 0.039um (except rectangular 1.25xRVn array) >= 0.01um
 err1 = via_125xRv5_7_bad NOT (OR via_125xRv5_2_3_4_good via_125xRv5_5_good via_125xRv5_6_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.8 derivations
met_125xRv5_8 = COPY M5
via_125xRv5_8 = (RV5 INTERACT met_125xRv5_8) INTERACT 125xRv_array5
via_125xRv5_8_bad = RECTANGLE ENCLOSURE via_125xRv5_8 M5 ABUT<90 SINGULAR 
GOOD 0.01 0.02 OPPOSITE 0.01 0.02 OPPOSITE
via_125xRv5_8_good = via_125xRv5_8 NOT via_125xRv5_8_bad
//;end of the 125xRVn.EN.8 derivations
 
Q: 
125xRv5_EN_8 {
@ 1.25xRVn array enclosed by 1.25xMn/1.25xMy for two opposite sides with the other two sides (rectangular 1.25xVn array edge length = 0.1um) >= 0.02um
@ Definition of 1.25xRVn array:
@ 1.25xVn long side space = 0.08um (PRL = 0.1um) >= 0.01um
 err1 = via_125xRv5_8_bad NOT (OR via_125xRv5_2_3_4_good via_125xRv5_5_good via_125xRv5_6_good via_125xRv5_7_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xRv5_EN_9 {
@ 1.25xRVn must be fully enclosed by 1.25xMn+1 where 1.25xMn+1 is the metal layer directly above 1.25xRVn. Enclosures by 1.25xMn+1 must follow one of 1.25xRVn.EN.10 or 1.25xRVn.EN.11 or 1.25xRVn.EN.12 or 1.25xRVn.EN.13 or 1.25xRVn.EN.14.
 err1 = RV5 NOT M6
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.10 derivations
met_125xRv5_10 = M6 WITH WIDTH == 0.040
via_125xRv5_10 = RV5 NOT OUTSIDE met_125xRv5_10
via_125xRv5_10_bad = RECTANGLE ENCLOSURE via_125xRv5_10 M6 ABUT<90 SINGULAR 
GOOD 0 0.039 OPPOSITE 0 0.039 OPPOSITE
via_125xRv5_10_good = via_125xRv5_10 NOT via_125xRv5_10_bad
//;end of the 125xRVn.EN.10 derivations
 
Q: 
125xRv5_EN_10 {
@ 1.25xRVn enclosure by 1.25xMn+1 (width = 0.04um) for two opposite sides with the other two sides >= 0um. >= 0.039um
 err1 = copy via_125xRv5_10_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.10a derivations
met_125xRv5_10a = M6 WITH WIDTH == 0.042
via_125xRv5_10a = RV5 NOT OUTSIDE met_125xRv5_10a
via_125xRv5_10a_bad = RECTANGLE ENCLOSURE via_125xRv5_10a M6 ABUT<90 SINGULAR 
GOOD 0.001 0.039 OPPOSITE 0.001 0.039 OPPOSITE
via_125xRv5_10a_good = via_125xRv5_10a NOT via_125xRv5_10a_bad
//;end of the 125xRVn.EN.10a derivations
 
Q: 
125xRv5_EN_10a {
@ 1.25xRVn enclosure by 1.25xMn+1 (width = 0.042um) for two opposite sides with the other two sides >= 0.001um. >= 0.039um
 err1 = via_125xRv5_10a_bad NOT via_125xRv5_10_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.10b derivations
met_125xRv5_10b = M6 WITH WIDTH == 0.044
via_125xRv5_10b = RV5 NOT OUTSIDE met_125xRv5_10b
via_125xRv5_10b_bad = RECTANGLE ENCLOSURE via_125xRv5_10b M6 ABUT<90 SINGULAR 
GOOD 0.002 0.039 OPPOSITE 0.002 0.039 OPPOSITE
via_125xRv5_10b_good = via_125xRv5_10b NOT via_125xRv5_10b_bad
//;end of the 125xRVn.EN.10b derivations
 
Q: 
125xRv5_EN_10b {
@ 1.25xRVn enclosure by 1.25xMn+1 (width = 0.044um) for two opposite sides with the other two sides >= 0.002um. >= 0.039um
 err1 = via_125xRv5_10b_bad NOT (OR via_125xRv5_10_good via_125xRv5_10a_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.10c derivations
met_125xRv5_10c = M6 WITH WIDTH == 0.046
via_125xRv5_10c = RV5 NOT OUTSIDE met_125xRv5_10c
via_125xRv5_10c_bad = RECTANGLE ENCLOSURE via_125xRv5_10c M6 ABUT<90 SINGULAR 
GOOD 0.003 0.039 OPPOSITE 0.003 0.039 OPPOSITE
via_125xRv5_10c_good = via_125xRv5_10c NOT via_125xRv5_10c_bad
//;end of the 125xRVn.EN.10c derivations
 
Q: 
125xRv5_EN_10c {
@ 1.25xRVn enclosure by 1.25xMn+1 (width = 0.046um) for two opposite sides with the other two sides >= 0.003um. >= 0.039um
 err1 = via_125xRv5_10c_bad NOT (OR via_125xRv5_10_good via_125xRv5_10a_good via_125xRv5_10b_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.10d derivations
met_125xRv5_10d = M6 WITH WIDTH >= 0.060 < 0.08
via_125xRv5_10d = RV5 NOT OUTSIDE met_125xRv5_10d
via_125xRv5_10d_bad = RECTANGLE ENCLOSURE via_125xRv5_10d M6 ABUT<90 SINGULAR 
GOOD 0.01 0.039 OPPOSITE 0.01 0.039 OPPOSITE
via_125xRv5_10d_good = via_125xRv5_10d NOT via_125xRv5_10d_bad
//;end of the 125xRVn.EN.10d derivations
 
Q: 
125xRv5_EN_10d {
@ 1.25xRVn enclosure by 1.25xMn+1 (width >= 0.06 < 0.08um) for two opposite sides with the other two sides >= 0.01um. >= 0.039um
 err1 = via_125xRv5_10d_bad NOT (OR via_125xRv5_10_good via_125xRv5_10a_good via_125xRv5_10b_good via_125xRv5_10c_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.11 derivations
met_125xRv5_11 = M6 WITH WIDTH == 0.080
via_125xRv5_11 = RV5 NOT OUTSIDE met_125xRv5_11
via_125xRv5_11_bad = RECTANGLE ENCLOSURE via_125xRv5_11 M6 ABUT<90 SINGULAR 
GOOD 0.02 0.02 0.02 0.02 OPPOSITE
via_125xRv5_11_good = via_125xRv5_11 NOT via_125xRv5_11_bad
//;end of the 125xRVn.EN.11 derivations
via_125xRv5_10_10abcd_good = OR via_125xRv5_10_good via_125xRv5_10a_good via_125xRv5_10b_good via_125xRv5_10c_good via_125xRv5_10d_good
via_125xRv5_10_10a_10b_10c_10d_11_good = OR via_125xRv5_10_10abcd_good via_125xRv5_11_good
 
Q: 
125xRv5_EN_11 {
@ 1.25xRVn enclosure by 1.25xMn+1 (width = 0.08um) for all sides >= 0.02um
 err1 = via_125xRv5_11_bad NOT via_125xRv5_10_10abcd_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 = ENC via_125xRv5_11 M6 < 0.02 ABUT<90 SINGULAR REGION
 err2 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.12 derivations
met_125xRv5_12 = M6 WITH WIDTH > 0.08
via_125xRv5_12 = (RV5 INTERACT met_125xRv5_12) NOT INTERACT 125xRv_array5
via_125xRv5_12_bad = RECTANGLE ENCLOSURE via_125xRv5_12 M6 ABUT<90 SINGULAR 
GOOD 0.02 0.029 OPPOSITE 0.02 0.029 OPPOSITE
via_125xRv5_12_good = via_125xRv5_12 NOT via_125xRv5_12_bad
//;end of the 125xRVn.EN.12 derivations
 
Q: 
125xRv5_EN_12 {
@ 1.25xRVn enclosure by 1.25xMn+1 (width > 0.080um) for two opposite sides with the other two sides >= 0.02um (except rectangular 1.25xVn array) >= 0.029um
 err1 = via_125xRv5_12_bad NOT (OR via_125xRv5_10_10a_10b_10c_10d_11_good via_125xRv5_13_13a_good) //125xRv.EN.12~13: the width conditions are covered by each other
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.13a derivations
met_125xRv5_13a = (M6 WITH WIDTH > 0.08) WITH WIDTH >= 0.12
via_125xRv5_13a = (RV5 INTERACT met_125xRv5_13a) NOT INTERACT 125xRv_array5
via_125xRv5_13a_bad = RECTANGLE ENCLOSURE via_125xRv5_13a M6 ABUT<90 SINGULAR 
GOOD 0.02 0.029 OPPOSITE 0.02 0.029 OPPOSITE
via_125xRv5_13a_good = via_125xRv5_13a NOT via_125xRv5_13a_bad
//;end of the 125xRVn.EN.13a derivations
 
//;beginning of the 125xRVn.EN.13 derivations
met_125xRv5_13 = (M6 WITH WIDTH > 0.08) WITH WIDTH >= 0.12
via_125xRv5_13_TMP = (RV5 INTERACT met_125xRv5_13) NOT INTERACT 125xRv_array5
via_125xRv5_13 = via_125xRv5_13_TMP NOT (OR via_125xRv5_10_10a_10b_10c_10d_11_good via_125xRv5_12_good)
via_125xRv5_13_L_edges = LENGTH via_125xRv5_13 == 0.10
via_125xRv5_13_W_edges = LENGTH via_125xRv5_13 == 0.04
via_125xRv5_13_x = ENC [via_125xRv5_13_L_edges] M6 < 0.039 ABUT<90 OPPOSITE
via_125xRv5_13_y = ENC [via_125xRv5_13_W_edges] M6 < 0.01 ABUT<90 OPPOSITE
via_125xRv5_13_bad = via_125xRv5_13 WITH EDGE (OR EDGE via_125xRv5_13_x via_125xRv5_13_y)
via_125xRv5_13_good = via_125xRv5_13 NOT via_125xRv5_13_bad
via_125xRv5_13_13a_good = OR via_125xRv5_13_good via_125xRv5_13a_good
//;end of the 125xRVn.EN.13 derivations
 
Q: 
125xRv5_EN_13a {
@ 1.25xRVn enclosure by 1.25xMn+1 (width >= 0.12um) for two opposite sides with the other two sides >= 0.02um (except rectangle 1.25xVn array) >= 0.029um
 err1 = via_125xRv5_13a_bad NOT (OR via_125xRv5_10_10a_10b_10c_10d_11_good via_125xRv5_12_good via_125xRv5_13_good) //125xRv.EN.13 already covered by 125xRv.EN.12
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xRv5_EN_13 {
@ 1.25xRVn short side enclosed by 1.25xMn+1, 1.25xMn+1 (width >= 0.12um) with long sides enclosure >= 0.039um (except rectangular 1.25xVn array) >= 0.01um
 err1 = via_125xRv5_13_bad NOT (OR via_125xRv5_10_10a_10b_10c_10d_11_good via_125xRv5_12_good via_125xRv5_13a_good) //125xRv.EN.12~13: the width conditions are covered by each other
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.14a derivations
met_125xRv5_14 = COPY M6
via_125xRv5_14_TMP = (RV5 INTERACT met_125xRv5_14) INTERACT 125xRv_array5
via_125xRv5_14 = via_125xRv5_14_TMP NOT (OR via_125xRv5_10_10a_10b_10c_10d_11_good via_125xRv5_12_good via_125xRv5_13_13a_good)
via_125xRv5_14_bad = RECTANGLE ENCLOSURE via_125xRv5_14 M6 ABUT<90 SINGULAR 
GOOD 0.01 0.02 OPPOSITE 0.01 0.02 OPPOSITE
via_125xRv5_14_good = via_125xRv5_14 NOT via_125xRv5_14_bad
//;end of the 125xRVn.EN.14 derivations
 
Q: 
125xRv5_EN_14 {
@ 1.25xRVn array enclosed by 1.25xMn+1 for two opposite sides with the other two sides (rectangular 1.25xVn array edge length = 0.1um) >= 0.02um
@ Definition of rectangular 1.25xVn array:
@ 1.25xVn long side space = 0.08um (PRL = 0.10um) >= 0.01um
 err1 = copy via_125xRv5_14_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xRv5_EN_15 {
@ 1.25xRVn enclosure by 1.25xMn+1 edge (between two consecutive 90-270 degree corners, length < 0.16um), when PRL > 0. >= 0.029um
 chk_edge = CONVEX EDGE M6 ANGLE1 == 90 ANGLE2 == 270 WITH LENGTH < 0.16
 err1_TMP = chk_edge TOUCH EDGE (EXT chk_edge M6_convex_270_90_edges < 0.005 ABUT==90 INTERSECTING ONLY REGION)
 err1 = ENC RV5 err1_TMP < 0.029 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xRv5_EN_16 {
@ 1.25xRVn enclosure by 1.25xMn+1 for two opposite sides (PRL > 0) with the other side enclosure < 0.04um (corresponding edge length < 0.16um between two consecutive 90-270 degree corners) >= 0.04um
 correspond_EDG = CONVEX EDGE M6 ANGLE1 == 90 ANGLE2 == 270 WITH LENGTH < 0.16
 correspond_ENC = ENC [RV5] correspond_EDG < 0.04 ABUT<90 OPPOSITE EXTENDED 0.001
 correspond_VIA_ENC_EDGE = RV5 TOUCH EDGE correspond_ENC
 correspond_VIA_EDG_CORN = INT [RV5] correspond_VIA_ENC_EDGE < 0.001 ABUT==90 INTERSECTING ONLY
 correspond_VIA_EDG = RV5 TOUCH EDGE correspond_VIA_EDG_CORN
 err1_RAW = ENC [correspond_VIA_EDG] M6 < 0.040 ABUT<90 OPPOSITE EXTENDED 0.001
 err1_TMP = INT correspond_VIA_ENC_EDGE (correspond_VIA_EDG TOUCH EDGE err1_RAW) < 0.005 ABUT==90 INTERSECTING ONLY REGION
 err1 = EXPAND EDGE (RV5 TOUCH EDGE err1_TMP) INSIDE BY 0.001
 err1 NOT INSIDE SealR_NOT_BULK
}

//125xv6

Q: 
125xv6_EN_1 {
@ 1.25xVn must be fully enclosed by 1.25xMy or 1.25xMn where 1.25xMy or 1.25xMn is the metal layer direct underneath 1.25xVn
@ Enclosure by 1.25xMy or 1.25xMn must follow one of 1.25xVn.EN.2 or 1.25xVn.EN.3 or 1.25xVn.EN.4 or 1.25xVn.EN.5 or 1.25xVn.EN.6 or 1.25xVn.EN.7
 err1 = V6N NOT M6
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.2 derivations
met_125xv6_2 = M6 WITH WIDTH == 0.040
via_125xv6_2 = V6N NOT OUTSIDE met_125xv6_2
via_125xv6_2_bad = RECTANGLE ENCLOSURE via_125xv6_2 M6 ABUT<90 SINGULAR 
GOOD 0 0.049 OPPOSITE 0 0.049 OPPOSITE
via_125xv6_2_good = via_125xv6_2 NOT via_125xv6_2_bad
//;end of the 125xVn.EN.2 derivations
 
Q: 
125xv6_EN_2 {
@ 1.25xVn enclosure by 1.25xMy or 1.25xMn (width = 0.04um) for two opposite sides with the other two sides >= 0um. >= 0.049um
 err1 = COPY via_125xv6_2_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.2a derivations
met_125xv6_2a = M6 WITH WIDTH == 0.042
via_125xv6_2a = V6N NOT OUTSIDE met_125xv6_2a
via_125xv6_2a_bad = RECTANGLE ENCLOSURE via_125xv6_2a M6 ABUT<90 SINGULAR 
GOOD 0.001 0.049 OPPOSITE 0.001 0.049 OPPOSITE
via_125xv6_2a_good = via_125xv6_2a NOT via_125xv6_2a_bad
//;end of the 125xVn.EN.2a derivations
 
Q: 
125xv6_EN_2a {
@ 1.25xVn enclosure by 1.25xMy or 1.25xMn (width = 0.042um) for two opposite sides with the other two sides >= 0.001um. >= 0.049um
 err1 = via_125xv6_2a_bad NOT via_125xv6_2_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.3 derivations
met_125xv6_3 = M6 WITH WIDTH == 0.044
via_125xv6_3 = V6N NOT OUTSIDE met_125xv6_3
via_125xv6_3_bad = RECTANGLE ENCLOSURE via_125xv6_3 M6 ABUT<90 SINGULAR 
GOOD 0.002 0.049 OPPOSITE 0.002 0.049 OPPOSITE
via_125xv6_3_good = via_125xv6_3 NOT via_125xv6_3_bad
//;end of the 125xVn.EN.3 derivations
 
Q: 
125xv6_EN_3 {
@ 1.25xVn enclosure by 1.25xMy or 1.25xMn (width = 0.044um) for two opposite sides with the other two sides >= 0.002um. >= 0.049um
 err1 = via_125xv6_3_bad NOT (OR via_125xv6_2_good via_125xv6_2a_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.3a derivations
met_125xv6_4 = M6 WITH WIDTH == 0.046
via_125xv6_4 = V6N NOT OUTSIDE met_125xv6_4
via_125xv6_4_bad = RECTANGLE ENCLOSURE via_125xv6_4 M6 ABUT<90 SINGULAR 
GOOD 0.003 0.049 OPPOSITE 0.003 0.049 OPPOSITE
via_125xv6_4_good = via_125xv6_4 NOT via_125xv6_4_bad
//;end of the 125xVn.EN.3a derivations
 
Q: 
125xv6_EN_4 {
@ 1.25xVn enclosure by 1.25xMy or 1.25xMn (width = 0.046um) for two opposite sides with the other two sides >= 0.003um. >= 0.049um
 err1 = via_125xv6_4_bad NOT (OR via_125xv6_2_good via_125xv6_2a_good via_125xv6_3_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.5 derivations
met_125xv6_5 = M6 WITH WIDTH >= 0.060 < 0.08
via_125xv6_5 = V6N NOT OUTSIDE met_125xv6_5
via_125xv6_5_bad = RECTANGLE ENCLOSURE via_125xv6_5 M6 ABUT<90 SINGULAR 
GOOD 0.01 0.049 OPPOSITE 0.01 0.049 OPPOSITE
via_125xv6_5_good = via_125xv6_5 NOT via_125xv6_5_bad
//;end of the 125xVn.EN.5 derivations
 
Q: 
125xv6_EN_5 {
@ 1.25xVn enclosure by 1.25xMy or 1.25xMn (0.06 <= width < 0.08um) for two opposite sides with the other two sides >= 0.01um. >= 0.049um
 err1 = via_125xv6_5_bad NOT (OR via_125xv6_2_good via_125xv6_2a_good via_125xv6_3_good via_125xv6_4_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
// 125xVn.EN.5: purposely blank
 
//;beginning of the 125xVn.EN.6 derivations
met_125xv6_6 = M6 WITH WIDTH == 0.080
via_125xv6_6 = V6N NOT OUTSIDE met_125xv6_6
via_125xv6_6_bad = RECTANGLE ENCLOSURE via_125xv6_6 M6 ABUT<90 SINGULAR 
GOOD 0.02 0.02 0.02 0.02 OPPOSITE
via_125xv6_6_good = via_125xv6_6 NOT via_125xv6_6_bad
//;end of the 125xVn.EN.6 derivations
via_125xv6_2_3_4_good = OR via_125xv6_2_good via_125xv6_2a_good via_125xv6_3_good via_125xv6_4_good via_125xv6_5_good
via_125xv6_2_3_4_6_good = OR via_125xv6_2_3_4_good via_125xv6_6_good
 
Q: 
125xv6_EN_6 {
@ 1.25xVn enclosure by 1.25xMy or 1.25xMn (width = 0.08um) for all sides >= 0.02um
 err1 = via_125xv6_6_bad NOT via_125xv6_2_3_4_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 = ENC via_125xv6_6 M6 < 0.02 ABUT<90 SINGULAR REGION //for via corner enclosure check
 err2 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.7 derivations
met_125xv6_7 = M6 WITH WIDTH > 0.080
via_125xv6_7 = V6N NOT OUTSIDE met_125xv6_7
via_125xv6_7_bad = RECTANGLE ENCLOSURE via_125xv6_7 M6 ABUT<90 SINGULAR 
GOOD 0.02 0.029 OPPOSITE 0.02 0.029 OPPOSITE
via_125xv6_7_good = via_125xv6_7 NOT via_125xv6_7_bad
//;end of the 125xVn.EN.7 derivations
 
Q: 
125xv6_EN_7 {
@ 1.25xVn enclosure by 1.25xMy or 1.25xMn (width > 0.08um) for two opposite sides with the other two sides >= 0.02um. >= 0.029um
 err1 = via_125xv6_7_bad NOT via_125xv6_2_3_4_6_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xv6_EN_8 {
@ 1.25xVn bar enclosure by 1.25xMy or 1.25xMn >= 0.098um
 err1 = (V6_BAR_100_all OR V6_BAR_450_all) NOT M6
 err2 = ENC V6_BAR_100_all M6 < 0.098 ABUT<90 SINGULAR REGION
 err3 = ENC V6_BAR_450_all M6 < 0.098 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xv6_EN_9 {
@ 1.25xVn must be fully enclosed by 1.25xMn+1 where 1.25xMn+1 is the metal layer directly above 1.25xVn
@ Enclosure by 1.25xMn+1 must follow one of 1.25xVn.EN.10 or 1.25xVn.EN.11 or 1.25xVn.EN.12 or 1.25xVn.EN.13 or 1.25xVn.EN.14
 err1 = V6N NOT M7
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.10 derivations
met_125xv6_10 = M7 WITH WIDTH == 0.040
via_125xv6_10 = V6N NOT OUTSIDE met_125xv6_10
via_125xv6_10_bad = RECTANGLE ENCLOSURE via_125xv6_10 M7 ABUT<90 SINGULAR 
GOOD 0 0.049 OPPOSITE 0 0.049 OPPOSITE
via_125xv6_10_good = via_125xv6_10 NOT via_125xv6_10_bad
//;end of the 125xVn.EN.10 derivations
 
Q: 
125xv6_EN_10 {
@ 1.25xVn enclosure by 1.25xMn+1 (width = 0.04um) for two opposite sides with the other two sides >= 0um. >= 0.049um
 err1 = copy via_125xv6_10_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.10a derivations
met_125xv6_10a = M7 WITH WIDTH == 0.042
via_125xv6_10a = V6N NOT OUTSIDE met_125xv6_10a
via_125xv6_10a_bad = RECTANGLE ENCLOSURE via_125xv6_10a M7 ABUT<90 SINGULAR 
GOOD 0.001 0.049 OPPOSITE 0.001 0.049 OPPOSITE
via_125xv6_10a_good = via_125xv6_10a NOT via_125xv6_10a_bad
//;end of the 125xVn.EN.10a derivations
 
Q: 
125xv6_EN_10a {
@ 1.25xVn enclosure by 1.25xMn+1 (width = 0.042um) for two opposite sides with the other two sides >= 0.001um. >= 0.049um
 err1 = via_125xv6_10a_bad NOT via_125xv6_10_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.11 derivations
met_125xv6_11 = M7 WITH WIDTH == 0.044
via_125xv6_11_TMP = V6N NOT OUTSIDE met_125xv6_11
via_125xv6_11 = via_125xv6_11_TMP NOT via_125xv6_10_good
via_125xv6_11_bad = RECTANGLE ENCLOSURE via_125xv6_11 M7 ABUT<90 SINGULAR 
GOOD 0.002 0.049 OPPOSITE 0.002 0.049 OPPOSITE
via_125xv6_11_good = via_125xv6_11 NOT via_125xv6_11_bad
//;end of the 125xVn.EN.11 derivations
 
Q: 
125xv6_EN_11 {
@ 1.25xVn enclosure by 1.25xMn+1 (width = 0.044um) for two opposite sides with the other two sides >= 0.002um. >= 0.049um
 err1 = via_125xv6_11_bad NOT (OR via_125xv6_10_good via_125xv6_10a_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.11 derivations
met_125xv6_11a = M7 WITH WIDTH == 0.046
via_125xv6_11a = V6N NOT OUTSIDE met_125xv6_11a
via_125xv6_11a_bad = RECTANGLE ENCLOSURE via_125xv6_11a M7 ABUT<90 SINGULAR 
GOOD 0.003 0.049 OPPOSITE 0.003 0.049 OPPOSITE
via_125xv6_11a_good = via_125xv6_11a NOT via_125xv6_11a_bad
//;end of the 125xVn.EN.11 derivations
 
Q: 
125xv6_EN_11a {
@ 1.25xVn enclosure by 1.25xMn+1 (width = 0.046um) for two opposite sides with the other two sides >= 0.003um. >= 0.049um
 err1 = via_125xv6_11a_bad NOT (OR via_125xv6_10_good via_125xv6_10a_good via_125xv6_11_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.12 derivations
met_125xv6_12 = M7 WITH WIDTH >= 0.060 < 0.08
via_125xv6_12 = V6N NOT OUTSIDE met_125xv6_12
via_125xv6_12_bad = RECTANGLE ENCLOSURE via_125xv6_12 M7 ABUT<90 SINGULAR 
GOOD 0.01 0.049 OPPOSITE 0.01 0.049 OPPOSITE
via_125xv6_12_good = via_125xv6_12 NOT via_125xv6_12_bad
//;end of the 125xVn.EN.12 derivations
via_125xv6_10_11_good = OR via_125xv6_10_good via_125xv6_10a_good via_125xv6_11_good via_125xv6_11a_good
via_125xv6_10_11_12_good = OR via_125xv6_10_11_good via_125xv6_12_good
 
Q: 
125xv6_EN_12 {
@ 1.25xVn enclosure by 1.25xMn+1 (0.06 <= width < 0.08um) for two opposite sides with the other two sides >= 0.01um. >= 0.049um
 err1 = via_125xv6_12_bad NOT via_125xv6_10_11_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.13 derivations
met_125xv6_13 = M7 WITH WIDTH == 0.080
via_125xv6_13 = V6N NOT OUTSIDE met_125xv6_13
via_125xv6_13_bad = RECTANGLE ENCLOSURE via_125xv6_13 M7 ABUT<90 SINGULAR 
GOOD 0.02 0.02 0.02 0.02 OPPOSITE
via_125xv6_13_good = via_125xv6_13 NOT via_125xv6_13_bad
//;end of the 125xVn.EN.13 derivations
 
Q: 
125xv6_EN_13 {
@ 1.25xVn enclosure by 1.25xMn+1 (width = 0.08um) for all sides >= 0.02um
 err1 = via_125xv6_13_bad NOT via_125xv6_10_11_12_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 = ENC via_125xv6_13 M7 < 0.02 ABUT<90 SINGULAR REGION //for via corner enclosure check
 err2 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xVn.EN.14 derivations
met_125xv6_14 = M7 WITH WIDTH > 0.080
via_125xv6_14 = V6N NOT OUTSIDE met_125xv6_14
via_125xv6_14_bad = RECTANGLE ENCLOSURE via_125xv6_14 M7 ABUT<90 SINGULAR 
GOOD 0.02 0.029 OPPOSITE 0.02 0.029 OPPOSITE
via_125xv6_14_good = via_125xv6_14 NOT via_125xv6_14_bad
//;end of the 125xVn.EN.14 derivations
 
Q: 
125xv6_EN_14 {
@ 1.25xVn enclosure by 1.25xMn+1 (width > 0.08um) for two opposite sides with the other two sides >= 0.02um. >= 0.029um
 err1 = via_125xv6_14_bad NOT (OR via_125xv6_10_11_12_good via_125xv6_13_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xv6_EN_15 {
@ 1.25xVn enclosure by 1.25xMn+1 edge (between two consecutive 90-270 degree corners, length < 0.16um), when PRL > 0um. >= 0.029um
 chk_edge = CONVEX EDGE M7 ANGLE1 == 90 ANGLE2 == 270 WITH LENGTH < 0.16
 err1_TMP = chk_edge TOUCH EDGE (EXT chk_edge M7_convex_270_90_edges < 0.005 ABUT==90 INTERSECTING ONLY REGION)
 err1 = ENC V6N err1_TMP < 0.029 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xv6_EN_16 {
@ 1.25xVn enclosure by 1.25xMn+1 for two opposite sides (PRL > 0) with the other side enclosure < 0.04um (corresponding edge length < 0.16um between two consecutive 90-270 degree corners) >= 0.04um
 correspond_EDG = CONVEX EDGE M7 ANGLE1 == 90 ANGLE2 == 270 WITH LENGTH < 0.16
 correspond_ENC = ENC [V6N] correspond_EDG < 0.04 ABUT<90 OPPOSITE EXTENDED 0.001
 correspond_VIA_ENC_EDGE = V6N TOUCH EDGE correspond_ENC
 correspond_VIA_EDG_CORN = INT [V6N] correspond_VIA_ENC_EDGE < 0.001 ABUT==90 INTERSECTING ONLY
 correspond_VIA_EDG = V6N TOUCH EDGE correspond_VIA_EDG_CORN
 err1_RAW = ENC [correspond_VIA_EDG] M7 < 0.040 ABUT<90 OPPOSITE EXTENDED 0.001
 err1_TMP = INT correspond_VIA_ENC_EDGE (correspond_VIA_EDG TOUCH EDGE err1_RAW) < 0.005 ABUT==90 INTERSECTING ONLY REGION
 err1 = EXPAND EDGE (V6N TOUCH EDGE err1_TMP) INSIDE BY 0.001
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xv6_EN_17 {
@ 1.25xVn bar fully enclosure by 1.25xMn+1 >= 0.2um
 err1 = (V6_BAR_100_all OR V6_BAR_450_all) NOT M7
 err2 = ENC V6_BAR_100_all M7 < 0.2 ABUT<90 SINGULAR REGION
 err3 = ENC V6_BAR_450_all M7 < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

//125xRv6

Q: 
125xRv6_EN_1 {
@ 1.25xRVn must be fully enclosed by 1.25xMy or 1.25xMn where 1.25xMy or 1.25xMn is the metal layer directly underneath 1.25xRVn. Enclosure by 1.25xMy or 1.25xMn must follow one of 1.25xRVn.EN.2 or 1.25xRVn.EN.3 or 1.25xRVn.EN.4 or 1.25xRVn.EN.5 or 1.25xRVn.EN.6 or 1.25xRVn.EN.7 or 1.25xRVn.EN.8
 err1 = RV6 NOT M6
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.2 derivations
met_125xRv6_2 = M6 WITH WIDTH == 0.040
via_125xRv6_2 = RV6 NOT OUTSIDE met_125xRv6_2
via_125xRv6_2_bad = RECTANGLE ENCLOSURE via_125xRv6_2 M6 ABUT<90 SINGULAR 
GOOD 0 0.049 OPPOSITE 0 0.049 OPPOSITE
via_125xRv6_2_good = via_125xRv6_2 NOT via_125xRv6_2_bad
//;end of the 125xRVn.EN.2 derivations
 
Q: 
125xRv6_EN_2 {
@ 1.25xRVn enclosure by 1.25xMy or 1.25xMn (width = 0.04um) for two opposite sides with the other two sides >= 0um. >= 0.049um
 err1 = copy via_125xRv6_2_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.2a derivations
met_125xRv6_2a = M6 WITH WIDTH == 0.042
via_125xRv6_2a = RV6 NOT OUTSIDE met_125xRv6_2a
via_125xRv6_2a_bad = RECTANGLE ENCLOSURE via_125xRv6_2a M6 ABUT<90 SINGULAR 
GOOD 0.001 0.049 OPPOSITE 0.001 0.049 OPPOSITE
via_125xRv6_2a_good = via_125xRv6_2a NOT via_125xRv6_2a_bad
//;end of the 125xRVn.EN.2a derivations
 
Q: 
125xRv6_EN_2a {
@ 1.25xRVn enclosure by 1.25xMy or 1.25xMn (width = 0.042um) for two opposite sides with the other two sides >= 0.001um. >= 0.049um
 err1 = via_125xRv6_2a_bad NOT via_125xRv6_2_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.3 derivations
met_125xRv6_3 = M6 WITH WIDTH == 0.044
via_125xRv6_3 = RV6 NOT OUTSIDE met_125xRv6_3
via_125xRv6_3_bad = RECTANGLE ENCLOSURE via_125xRv6_3 M6 ABUT<90 SINGULAR 
GOOD 0.002 0.049 OPPOSITE 0.002 0.049 OPPOSITE
via_125xRv6_3_good = via_125xRv6_3 NOT via_125xRv6_3_bad
//;end of the 125xRVn.EN.3 derivations
 
Q: 
125xRv6_EN_3 {
@ 1.25xRVn enclosure by 1.25xMy or 1.25xMn (width = 0.044um) for two opposite sides with the other two sides >= 0.002um. >= 0.049um
 err1 = via_125xRv6_3_bad NOT (OR via_125xRv6_2_good via_125xRv6_2a_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.3a derivations
met_125xRv6_3a = M6 WITH WIDTH == 0.046
via_125xRv6_3a = RV6 NOT OUTSIDE met_125xRv6_3a
via_125xRv6_3a_bad = RECTANGLE ENCLOSURE via_125xRv6_3a M6 ABUT<90 SINGULAR 
GOOD 0.003 0.049 OPPOSITE 0.003 0.049 OPPOSITE
via_125xRv6_3a_good = via_125xRv6_3a NOT via_125xRv6_3a_bad
//;end of the 125xRVn.EN.3a derivations
 
Q: 
125xRv6_EN_3a {
@ 1.25xRVn enclosure by 1.25xMy or 1.25xMn (width = 0.046um) for two opposite sides with the other two sides >= 0.003um. >= 0.049um
 err1 = via_125xRv6_3a_bad NOT (OR via_125xRv6_2_good via_125xRv6_2a_good via_125xRv6_3_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.4 derivations
met_125xRv6_4 = M6 WITH WIDTH >= 0.060 < 0.08
via_125xRv6_4 = RV6 NOT OUTSIDE met_125xRv6_4
via_125xRv6_4_bad = RECTANGLE ENCLOSURE via_125xRv6_4 M6 ABUT<90 SINGULAR 
GOOD 0.01 0.049 OPPOSITE 0.010 0.049 OPPOSITE
via_125xRv6_4_good = via_125xRv6_4 NOT via_125xRv6_4_bad
//;end of the 125xRVn.EN.4 derivations
via_125xRv6_2_3_good = OR via_125xRv6_2_good via_125xRv6_2a_good via_125xRv6_3_good via_125xRv6_3a_good
via_125xRv6_2_3_4_good = OR via_125xRv6_2_3_good via_125xRv6_4_good
 
Q: 
125xRv6_EN_4 {
@ 1.25xRVn enclosure by 1.25xMy or 1.25xMn (0.06um <= width < 0.08um) for two opposite sides with the other two sides >= 0.01um. >= 0.049um
 err1 = via_125xRv6_4_bad NOT via_125xRv6_2_3_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.5 derivations
met_125xRv6_5 = M6 WITH WIDTH == 0.080
via_125xRv6_5 = RV6 NOT OUTSIDE met_125xRv6_5
via_125xRv6_5_bad = RECTANGLE ENCLOSURE via_125xRv6_5 M6 ABUT<90 SINGULAR 
GOOD 0.02 0.02 0.02 0.02 OPPOSITE
via_125xRv6_5_good = via_125xRv6_5 NOT via_125xRv6_5_bad
//;end of the 125xRVn.EN.5 derivations
 
Q: 
125xRv6_EN_5 {
@ 1.25xRVn enclosure by 1.25xMy or 1.25xMn (width = 0.08um) for all sides >= 0.02um
 err1 = via_125xRv6_5_bad NOT via_125xRv6_2_3_4_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 = ENC via_125xRv6_5 M6 < 0.02 ABUT<90 SINGULAR REGION
 err2 NOT INSIDE SealR_NOT_BULK
}
 
 //--------------Definition of 1.25xRVn array----------------- 
125xRv_16 = EXT [RV6_L] == 0.08 ABUT<90 OPPOSITE
125xRv_26 = LENGTH 125xRv_16 == 0.1
125xRv_06 = (EXT RV6_L == 0.08 ABUT<90 OPPOSITE REGION) WITH EDGE 125xRv_26
125xRv_36 = RV6 WITH EDGE 125xRv_16
125xRv_array6 = (125xRv_36 OR 125xRv_06) INTERACT 125xRv_36 > 1
 
//;beginning of the 125xRVn.EN.6 derivations
met_125xRv6_6 = M6 WITH WIDTH > 0.080
via_125xRv6_6 = (RV6 INTERACT met_125xRv6_6) NOT INTERACT 125xRv_array6
via_125xRv6_6_bad = RECTANGLE ENCLOSURE via_125xRv6_6 M6 ABUT<90 SINGULAR 
GOOD 0.02 0.029 OPPOSITE 0.02 0.029 OPPOSITE
via_125xRv6_6_good = via_125xRv6_6 NOT via_125xRv6_6_bad
//;end of the 125xRVn.EN.6 derivations
 
Q: 
125xRv6_EN_6 {
@ 1.25xRVn enclosure by 1.25xMy or 1.25xMn (width > 0.08um) for two opposite sides with the other two sides >= 0.02um (except rectangular 1.25xRVn array) >= 0.029um
 err1 = via_125xRv6_6_bad NOT (OR via_125xRv6_2_3_4_good via_125xRv6_5_good via_125xRv6_7_good) //125xRv.EN.6~7: the width conditions are covered by each other
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.7 derivations
met_125xRv6_7 = M6 WITH WIDTH > 0.080
via_125xRv6_7 = (RV6 INTERACT met_125xRv6_7) NOT INTERACT 125xRv_array6
via_125xRv6_7_L_edges = LENGTH via_125xRv6_7 == 0.10
via_125xRv6_7_W_edges = LENGTH via_125xRv6_7 == 0.04
via_125xRv6_7_x = ENC [via_125xRv6_7_L_edges] M6 < 0.039 ABUT<90 OPPOSITE
via_125xRv6_7_y = ENC [via_125xRv6_7_W_edges] M6 < 0.01 ABUT<90 OPPOSITE
via_125xRv6_7_bad = via_125xRv6_7 WITH EDGE (OR EDGE via_125xRv6_7_x via_125xRv6_7_y)
via_125xRv6_7_good = via_125xRv6_7 NOT via_125xRv6_7_bad
//;end of the 125xRVn.EN.7 derivations
 
Q: 
125xRv6_EN_7 {
@ 1.25xRVn enclosure by short side of 1.25xMy or 1.25xMn (width > 0.08um) with long side enclosure >= 0.039um (except rectangular 1.25xRVn array) >= 0.01um
 err1 = via_125xRv6_7_bad NOT (OR via_125xRv6_2_3_4_good via_125xRv6_5_good via_125xRv6_6_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.8 derivations
met_125xRv6_8 = COPY M6
via_125xRv6_8 = (RV6 INTERACT met_125xRv6_8) INTERACT 125xRv_array6
via_125xRv6_8_bad = RECTANGLE ENCLOSURE via_125xRv6_8 M6 ABUT<90 SINGULAR 
GOOD 0.01 0.02 OPPOSITE 0.01 0.02 OPPOSITE
via_125xRv6_8_good = via_125xRv6_8 NOT via_125xRv6_8_bad
//;end of the 125xRVn.EN.8 derivations
 
Q: 
125xRv6_EN_8 {
@ 1.25xRVn array enclosed by 1.25xMn/1.25xMy for two opposite sides with the other two sides (rectangular 1.25xVn array edge length = 0.1um) >= 0.02um
@ Definition of 1.25xRVn array:
@ 1.25xVn long side space = 0.08um (PRL = 0.1um) >= 0.01um
 err1 = via_125xRv6_8_bad NOT (OR via_125xRv6_2_3_4_good via_125xRv6_5_good via_125xRv6_6_good via_125xRv6_7_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xRv6_EN_9 {
@ 1.25xRVn must be fully enclosed by 1.25xMn+1 where 1.25xMn+1 is the metal layer directly above 1.25xRVn. Enclosures by 1.25xMn+1 must follow one of 1.25xRVn.EN.10 or 1.25xRVn.EN.11 or 1.25xRVn.EN.12 or 1.25xRVn.EN.13 or 1.25xRVn.EN.14.
 err1 = RV6 NOT M7
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.10 derivations
met_125xRv6_10 = M7 WITH WIDTH == 0.040
via_125xRv6_10 = RV6 NOT OUTSIDE met_125xRv6_10
via_125xRv6_10_bad = RECTANGLE ENCLOSURE via_125xRv6_10 M7 ABUT<90 SINGULAR 
GOOD 0 0.039 OPPOSITE 0 0.039 OPPOSITE
via_125xRv6_10_good = via_125xRv6_10 NOT via_125xRv6_10_bad
//;end of the 125xRVn.EN.10 derivations
 
Q: 
125xRv6_EN_10 {
@ 1.25xRVn enclosure by 1.25xMn+1 (width = 0.04um) for two opposite sides with the other two sides >= 0um. >= 0.039um
 err1 = copy via_125xRv6_10_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.10a derivations
met_125xRv6_10a = M7 WITH WIDTH == 0.042
via_125xRv6_10a = RV6 NOT OUTSIDE met_125xRv6_10a
via_125xRv6_10a_bad = RECTANGLE ENCLOSURE via_125xRv6_10a M7 ABUT<90 SINGULAR 
GOOD 0.001 0.039 OPPOSITE 0.001 0.039 OPPOSITE
via_125xRv6_10a_good = via_125xRv6_10a NOT via_125xRv6_10a_bad
//;end of the 125xRVn.EN.10a derivations
 
Q: 
125xRv6_EN_10a {
@ 1.25xRVn enclosure by 1.25xMn+1 (width = 0.042um) for two opposite sides with the other two sides >= 0.001um. >= 0.039um
 err1 = via_125xRv6_10a_bad NOT via_125xRv6_10_good
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.10b derivations
met_125xRv6_10b = M7 WITH WIDTH == 0.044
via_125xRv6_10b = RV6 NOT OUTSIDE met_125xRv6_10b
via_125xRv6_10b_bad = RECTANGLE ENCLOSURE via_125xRv6_10b M7 ABUT<90 SINGULAR 
GOOD 0.002 0.039 OPPOSITE 0.002 0.039 OPPOSITE
via_125xRv6_10b_good = via_125xRv6_10b NOT via_125xRv6_10b_bad
//;end of the 125xRVn.EN.10b derivations
 
Q: 
125xRv6_EN_10b {
@ 1.25xRVn enclosure by 1.25xMn+1 (width = 0.044um) for two opposite sides with the other two sides >= 0.002um. >= 0.039um
 err1 = via_125xRv6_10b_bad NOT (OR via_125xRv6_10_good via_125xRv6_10a_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.10c derivations
met_125xRv6_10c = M7 WITH WIDTH == 0.046
via_125xRv6_10c = RV6 NOT OUTSIDE met_125xRv6_10c
via_125xRv6_10c_bad = RECTANGLE ENCLOSURE via_125xRv6_10c M7 ABUT<90 SINGULAR 
GOOD 0.003 0.039 OPPOSITE 0.003 0.039 OPPOSITE
via_125xRv6_10c_good = via_125xRv6_10c NOT via_125xRv6_10c_bad
//;end of the 125xRVn.EN.10c derivations
 
Q: 
125xRv6_EN_10c {
@ 1.25xRVn enclosure by 1.25xMn+1 (width = 0.046um) for two opposite sides with the other two sides >= 0.003um. >= 0.039um
 err1 = via_125xRv6_10c_bad NOT (OR via_125xRv6_10_good via_125xRv6_10a_good via_125xRv6_10b_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.10d derivations
met_125xRv6_10d = M7 WITH WIDTH >= 0.060 < 0.08
via_125xRv6_10d = RV6 NOT OUTSIDE met_125xRv6_10d
via_125xRv6_10d_bad = RECTANGLE ENCLOSURE via_125xRv6_10d M7 ABUT<90 SINGULAR 
GOOD 0.01 0.039 OPPOSITE 0.01 0.039 OPPOSITE
via_125xRv6_10d_good = via_125xRv6_10d NOT via_125xRv6_10d_bad
//;end of the 125xRVn.EN.10d derivations
 
Q: 
125xRv6_EN_10d {
@ 1.25xRVn enclosure by 1.25xMn+1 (width >= 0.06 < 0.08um) for two opposite sides with the other two sides >= 0.01um. >= 0.039um
 err1 = via_125xRv6_10d_bad NOT (OR via_125xRv6_10_good via_125xRv6_10a_good via_125xRv6_10b_good via_125xRv6_10c_good)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.11 derivations
met_125xRv6_11 = M7 WITH WIDTH == 0.080
via_125xRv6_11 = RV6 NOT OUTSIDE met_125xRv6_11
via_125xRv6_11_bad = RECTANGLE ENCLOSURE via_125xRv6_11 M7 ABUT<90 SINGULAR 
GOOD 0.02 0.02 0.02 0.02 OPPOSITE
via_125xRv6_11_good = via_125xRv6_11 NOT via_125xRv6_11_bad
//;end of the 125xRVn.EN.11 derivations
via_125xRv6_10_10abcd_good = OR via_125xRv6_10_good via_125xRv6_10a_good via_125xRv6_10b_good via_125xRv6_10c_good via_125xRv6_10d_good
via_125xRv6_10_10a_10b_10c_10d_11_good = OR via_125xRv6_10_10abcd_good via_125xRv6_11_good
 
Q: 
125xRv6_EN_11 {
@ 1.25xRVn enclosure by 1.25xMn+1 (width = 0.08um) for all sides >= 0.02um
 err1 = via_125xRv6_11_bad NOT via_125xRv6_10_10abcd_good
 err1 NOT INSIDE SealR_NOT_BULK
 err2 = ENC via_125xRv6_11 M7 < 0.02 ABUT<90 SINGULAR REGION
 err2 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.12 derivations
met_125xRv6_12 = M7 WITH WIDTH > 0.08
via_125xRv6_12 = (RV6 INTERACT met_125xRv6_12) NOT INTERACT 125xRv_array6
via_125xRv6_12_bad = RECTANGLE ENCLOSURE via_125xRv6_12 M7 ABUT<90 SINGULAR 
GOOD 0.02 0.029 OPPOSITE 0.02 0.029 OPPOSITE
via_125xRv6_12_good = via_125xRv6_12 NOT via_125xRv6_12_bad
//;end of the 125xRVn.EN.12 derivations
 
Q: 
125xRv6_EN_12 {
@ 1.25xRVn enclosure by 1.25xMn+1 (width > 0.080um) for two opposite sides with the other two sides >= 0.02um (except rectangular 1.25xVn array) >= 0.029um
 err1 = via_125xRv6_12_bad NOT (OR via_125xRv6_10_10a_10b_10c_10d_11_good via_125xRv6_13_13a_good) //125xRv.EN.12~13: the width conditions are covered by each other
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.13a derivations
met_125xRv6_13a = (M7 WITH WIDTH > 0.08) WITH WIDTH >= 0.12
via_125xRv6_13a = (RV6 INTERACT met_125xRv6_13a) NOT INTERACT 125xRv_array6
via_125xRv6_13a_bad = RECTANGLE ENCLOSURE via_125xRv6_13a M7 ABUT<90 SINGULAR 
GOOD 0.02 0.029 OPPOSITE 0.02 0.029 OPPOSITE
via_125xRv6_13a_good = via_125xRv6_13a NOT via_125xRv6_13a_bad
//;end of the 125xRVn.EN.13a derivations
 
//;beginning of the 125xRVn.EN.13 derivations
met_125xRv6_13 = (M7 WITH WIDTH > 0.08) WITH WIDTH >= 0.12
via_125xRv6_13_TMP = (RV6 INTERACT met_125xRv6_13) NOT INTERACT 125xRv_array6
via_125xRv6_13 = via_125xRv6_13_TMP NOT (OR via_125xRv6_10_10a_10b_10c_10d_11_good via_125xRv6_12_good)
via_125xRv6_13_L_edges = LENGTH via_125xRv6_13 == 0.10
via_125xRv6_13_W_edges = LENGTH via_125xRv6_13 == 0.04
via_125xRv6_13_x = ENC [via_125xRv6_13_L_edges] M7 < 0.039 ABUT<90 OPPOSITE
via_125xRv6_13_y = ENC [via_125xRv6_13_W_edges] M7 < 0.01 ABUT<90 OPPOSITE
via_125xRv6_13_bad = via_125xRv6_13 WITH EDGE (OR EDGE via_125xRv6_13_x via_125xRv6_13_y)
via_125xRv6_13_good = via_125xRv6_13 NOT via_125xRv6_13_bad
via_125xRv6_13_13a_good = OR via_125xRv6_13_good via_125xRv6_13a_good
//;end of the 125xRVn.EN.13 derivations
 
Q: 
125xRv6_EN_13a {
@ 1.25xRVn enclosure by 1.25xMn+1 (width >= 0.12um) for two opposite sides with the other two sides >= 0.02um (except rectangle 1.25xVn array) >= 0.029um
 err1 = via_125xRv6_13a_bad NOT (OR via_125xRv6_10_10a_10b_10c_10d_11_good via_125xRv6_12_good via_125xRv6_13_good) //125xRv.EN.13 already covered by 125xRv.EN.12
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xRv6_EN_13 {
@ 1.25xRVn short side enclosed by 1.25xMn+1, 1.25xMn+1 (width >= 0.12um) with long sides enclosure >= 0.039um (except rectangular 1.25xVn array) >= 0.01um
 err1 = via_125xRv6_13_bad NOT (OR via_125xRv6_10_10a_10b_10c_10d_11_good via_125xRv6_12_good via_125xRv6_13a_good) //125xRv.EN.12~13: the width conditions are covered by each other
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//;beginning of the 125xRVn.EN.14a derivations
met_125xRv6_14 = COPY M7
via_125xRv6_14_TMP = (RV6 INTERACT met_125xRv6_14) INTERACT 125xRv_array6
via_125xRv6_14 = via_125xRv6_14_TMP NOT (OR via_125xRv6_10_10a_10b_10c_10d_11_good via_125xRv6_12_good via_125xRv6_13_13a_good)
via_125xRv6_14_bad = RECTANGLE ENCLOSURE via_125xRv6_14 M7 ABUT<90 SINGULAR 
GOOD 0.01 0.02 OPPOSITE 0.01 0.02 OPPOSITE
via_125xRv6_14_good = via_125xRv6_14 NOT via_125xRv6_14_bad
//;end of the 125xRVn.EN.14 derivations
 
Q: 
125xRv6_EN_14 {
@ 1.25xRVn array enclosed by 1.25xMn+1 for two opposite sides with the other two sides (rectangular 1.25xVn array edge length = 0.1um) >= 0.02um
@ Definition of rectangular 1.25xVn array:
@ 1.25xVn long side space = 0.08um (PRL = 0.10um) >= 0.01um
 err1 = copy via_125xRv6_14_bad
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xRv6_EN_15 {
@ 1.25xRVn enclosure by 1.25xMn+1 edge (between two consecutive 90-270 degree corners, length < 0.16um), when PRL > 0. >= 0.029um
 chk_edge = CONVEX EDGE M7 ANGLE1 == 90 ANGLE2 == 270 WITH LENGTH < 0.16
 err1_TMP = chk_edge TOUCH EDGE (EXT chk_edge M7_convex_270_90_edges < 0.005 ABUT==90 INTERSECTING ONLY REGION)
 err1 = ENC RV6 err1_TMP < 0.029 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
125xRv6_EN_16 {
@ 1.25xRVn enclosure by 1.25xMn+1 for two opposite sides (PRL > 0) with the other side enclosure < 0.04um (corresponding edge length < 0.16um between two consecutive 90-270 degree corners) >= 0.04um
 correspond_EDG = CONVEX EDGE M7 ANGLE1 == 90 ANGLE2 == 270 WITH LENGTH < 0.16
 correspond_ENC = ENC [RV6] correspond_EDG < 0.04 ABUT<90 OPPOSITE EXTENDED 0.001
 correspond_VIA_ENC_EDGE = RV6 TOUCH EDGE correspond_ENC
 correspond_VIA_EDG_CORN = INT [RV6] correspond_VIA_ENC_EDGE < 0.001 ABUT==90 INTERSECTING ONLY
 correspond_VIA_EDG = RV6 TOUCH EDGE correspond_VIA_EDG_CORN
 err1_RAW = ENC [correspond_VIA_EDG] M7 < 0.040 ABUT<90 OPPOSITE EXTENDED 0.001
 err1_TMP = INT correspond_VIA_ENC_EDGE (correspond_VIA_EDG TOUCH EDGE err1_RAW) < 0.005 ABUT==90 INTERSECTING ONLY REGION
 err1 = EXPAND EDGE (RV6 TOUCH EDGE err1_TMP) INSIDE BY 0.001
 err1 NOT INSIDE SealR_NOT_BULK
}

//10xTV2

Q: 
10xTV2_EN_1 {
@ 10xTVn must be fully enclosed by 1.25xMn, 2xMn, 10xTMn-1, MIM, or CTOP, and must follow 10xTVn.EN.2a 10xTVn.EN.2b, MIM.3 or CTOP.5, where 1.25xMn, 2xMn, 10xTMn-1, MIM, or CTOP is the metal layer directly underneath 10xTVn
 err1 = (TV2 NOT M7) NOT (OR MIM CTOP)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
10xTV2_EN_2a_2 {
@ 10xTVn.EN.2a: 10xTVn must be fully enclosed by 1.25xMn, 2xMn, 10xTMn-1 >= 0.018um
@ 10xTVn.EN.2b: 10xTVn enclosure by 1.25xMn, 2xMn, 10xTMn-1 for two opposite sides with the other two sides >= 0.018um. >= 0.071um
 err1 = RECTANGLE ENCLOSURE (TV2N NOT OUTSIDE M7) M7 ABUT<90 SINGULAR OUTSIDE ALSO 
 GOOD 0.018 0.071 OPPOSITE 0.018 0.071 OPPOSITE
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
10xTV2_EN_3 {
@ 10xTVn must be fully enclosed by 10xTMn and must follow 10xTVn.EN.4a, 10xTVn.EN.4b as below, 10xTMn is the metal layer directly above 10xTVn
 err1 = TV2 NOT TM2
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
10xTV2_EN_4a_4 {
@ 10xTVn.EN.4a: 10xTVn fully enclosure by 10xTMn >= 0.018um
@ 10xTVn.EN.4b: 10xTVn enclosure by 10xTMn for two opposite sides with the other two sides >= 0.018um. >= 0.071um
 err1 = RECTANGLE ENCLOSURE TV2N TM2 ABUT<90 SINGULAR 
 GOOD 0.018 0.071 OPPOSITE 0.018 0.071 OPPOSITE
 err1 NOT INSIDE SealR_NOT_BULK
}

//PA

Q: 
PA_EN_1 {
@ PA fully enclosure by ALPA if PA not overlap with MD, except LOGO region >= 0.45um
@ It allows 0.009um DRC checking tolerance in INDMY region
 err1 = (ENC PA_in_ALRDL ALPA < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO) NOT INSIDE LOGO
 err2 = (ENC PA_in_ALRDL ALPA < 0.45 ABUT<90 SINGULAR REGION ANGLED==0 OUTSIDE ALSO) NOT INSIDE LOGO
 err3 = (ENC (PA_in_ALRDL COIN EDGE PA_s_edges) ALPA < 0.45-0.009 ABUT<90 OPPOSITE1 REGION OUTSIDE ALSO) NOT INSIDE LOGO
 err4 = (PA_in_ALRDL NOT ALPA) NOT INSIDE LOGO

 err1 NOT INSIDE INDMY
 err2 NOT OUTSIDE INDMY
 err3 NOT OUTSIDE INDMY
 err4 NOT INSIDE INDMY
}

Q: 
PA_EN_1a {
@ PA fully enclosure by ALPA if PA overlap with MD, except LOGO region >= 0.9um
@ It allows 0.009um DRC checking tolerance in INDMY region
 err1 = (ENC PA_in_ALRDL_PAD ALPA < 0.90 ABUT<90 SINGULAR REGION OUTSIDE ALSO) NOT INSIDE LOGO
 err2 = (ENC PA_in_ALRDL_PAD ALPA < 0.90 ABUT<90 SINGULAR REGION ANGLED==0 OUTSIDE ALSO) NOT INSIDE LOGO
 err3 = (ENC (PA_in_ALRDL_PAD COIN EDGE PA_s_edges) ALPA < 0.90-0.009 ABUT<90 OPPOSITE1 REGION OUTSIDE ALSO) NOT INSIDE LOGO
 err4 = (PA_in_ALRDL_PAD NOT ALPA) NOT INSIDE LOGO

 err1 NOT INSIDE INDMY
 err2 NOT OUTSIDE INDMY
 err3 NOT OUTSIDE INDMY
 err4 NOT INSIDE INDMY
}

Q: 
PA_EN_2 {
@ PA fully enclosure by UTM/14xTMn/10xTMn, except LOGO region >= 0.45um
@ It allows 0.009um DRC checking tolerance in INDMY region
 err1 = (ENC PA TM < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO) NOT INSIDE LOGO
 err2 = (ENC PA TM < 0.45 ABUT<90 SINGULAR REGION ANGLED==0 OUTSIDE ALSO) NOT INSIDE LOGO
 err3 = (ENC PA_s_edges TM < 0.45-0.009 ABUT<90 OPPOSITE1 REGION OUTSIDE ALSO) NOT INSIDE LOGO
 err4 = (PA NOT TM) NOT INSIDE LOGO

 err1 NOT INSIDE INDMY
 err2 NOT OUTSIDE INDMY
 err3 NOT OUTSIDE INDMY
 err4 NOT INSIDE INDMY
}

//MD

Q: 
MD_EN_1 {
@ MD fully enclosure by ALPA, except LOGO region >= 0.9um
 err1 = ENC MD ALPA < 0.9 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE LOGO

 err2 = MD NOT ALPA
 err2 NOT INSIDE LOGO
}

//CHIPB

Q: 
CHIPB_EN_1 {
@ CHIPB enclosure of (CELLB OR DMCB1) in GATE poly direction (Cut is not allowed) = 0.384+0.048*num
@ DRC tips:: Please check the distance between the CELLB horizontal edge and the CHIPB bottom side
 err1 = ENC CELLB_ALL CHIPB_h_edges < 0.384 ABUT<90 OPPOSITE REGION
 err2 = CHIPB INSIDE EDGE CELLB_ALL
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK

 err3 = DFM COPY (OFFGRID CELLB_ALL_h_edges 1 480 INSIDE OF LAYER CHIPB ABSOLUTE) REGION
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: 
CHIPB_EN_2 {
@ CHIPB enclosure of OCCDFH in GATE poly direction = 0.048*num
@ DRC tips:: Please check the distance between the OCCDFH horizontal edge and the CHIPB bottom side
 err1 = CHIPB_h_edges NOT OUTSIDE EDGE OCCDFH
 err1 NOT INSIDE EDGE SealR_NOT_BULK

 err2 = DFM COPY (OFFGRID OCCDFH_h_edges 1 480 INSIDE OF LAYER CHIPB ABSOLUTE) REGION
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: 
CHIPB_EN_3_AA {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC AA_v_edges CHIPB < 0.45 ABUT<90 OPPOSITE REGION
 err2 = ENC AA CHIPB < 0.001 ABUT<90 SINGULAR REGION OUTSIDE ALSO

 err1 NOT INSIDE (OR MARKS NODMF)
 err2 NOT INSIDE (OR MARKS NODMF)
}

Q: 
CHIPB_EN_3_AADMP {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC (ANGLE AADMP == 90) CHIPB < 0.45 ABUT<90 OPPOSITE REGION
 err2 = ENC AADMP CHIPB < 0.001 ABUT<90 SINGULAR REGION OUTSIDE ALSO

 err1 NOT INSIDE (OR MARKS NODMF)
 err2 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_AR {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC AR CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_NW {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC NW CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_PSUB {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC PSUB CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_SVT_N {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC SVT_N CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_SVT_P {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC SVT_P CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_LVT_N {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC LVT_N CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_LVT_P {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC LVT_P CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_HVT_N {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC HVT_N CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_HVT_P {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC HVT_P CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_ULVT_N {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC ULVT_N CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_ULVT_P {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC ULVT_P CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_LFN_N {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC LFN_N CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_LFN_P {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC LFN_P CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_DG {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC DG CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_GT {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC GT CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_GTDMP {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC GTDMP CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_P2 {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC P2 CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_P2DMP {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC P2DMP CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_SN {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC SN CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_SP {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC SP CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_M0 {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC M0 CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_M0DMP {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC M0DMP CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_M0G {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC M0G CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_M0GDMP {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC M0GDMP CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_M0C {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC M0C CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_M0CDMP {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC M0CDMP CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_DIR {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC DIR CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_DIRDMP {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC DIRDMP CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_V0 {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC V0 CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_PA {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC PA CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_ALPA {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC ALPA CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_MD {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC MD CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_MIM {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC MIM CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_CTOP {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC CTOP CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_M1 {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC M1 CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_M2 {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC M2 CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_M3 {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC M3 CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_M4 {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC M4 CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_M5 {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC M5 CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_M6 {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC M6 CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_M7 {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC M7 CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_TM2 {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC TM2 CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_V1 {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC V1 CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_V2 {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC V2 CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_V3 {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC V3 CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_V4 {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC V4 CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_V5 {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC V5 CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_V6 {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC V6 CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}
 
Q: 
CHIPB_EN_3_TV2 {
@ CHIPB must enclose all chip layout patterns (all chip design, excluding MARKS, NODMF marking layer) if seal ring is inserted by SMIC. DRC waive if the chip has been added seal ring by designer >= 0.45um
@ DRC check layers: AA, AADMP, AR, NW, PSUB, SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, ULVT_N, ULVT_P, LFN_N, LFN_P, DG, GT, GTDMP, P2, P2DMP, SN, SP, M0, M0DMP, M0G, M0GDMP, M0C, M0CDMP, DIR, DIRDMP, V0, M1, Vy, Mxy, 1.25xMy, 1.25xVn, 1.25xMn, 2xVn, 2xMn, 10xTVn, 10xTMn, 14xTVn, 14xTMn, UTV, UTM, PA, ALPA, MD, MIM, CTOP
@ DRC only check AA and AADMP enclosure in S/D direction
 err1 = ENC TV2 CHIPB < 0.45 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE (OR MARKS NODMF)
}

Q: 
CHIPB_EN_4 {
@ CHIPB enclosure of ALL_AA in GATE poly direction, except INST region = 0.528+0.048*num
@ DRC hints:: Please check the distance between the AA horizontal edge and the CHIPB bottom side
 chk_AA = ALL_AA NOT INSIDE EDGE INST
 chk_AA_side = ALL_AA_h_edges NOT INSIDE EDGE INST
 err1 = ENC chk_AA CHIPB_h_edges < 0.528 ABUT<90 OPPOSITE REGION
 err2 = CHIPB_h_edges NOT OUTSIDE EDGE ALL_AA
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK

 err3 = DFM COPY (OFFGRID chk_AA_side 1 480 INSIDE OF LAYER CHIPB ABSOLUTE) REGION
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: 
CHIPB_EN_5 {
@ CHIPB ensclosure of FIN in GATE poly direction, except INST region = 0.019+0.048*num
@ DRC hints:: Please check the distance between the FIN horizontal edge and the CHIPB bottom side
 chk_FIN_TMP = FIN NOT INST
 chk_FIN_WAIVE = DFM COPY (DFM SPACE chk_FIN_TMP < FIN_WIDTH BY INT VERTICAL) REGION
 chk_FIN = chk_FIN_TMP NOT chk_FIN_WAIVE
 err1 = ENC chk_FIN CHIPB_h_edges < 0.019 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err1 NOT INSIDE SealR_NOT_BULK

 OFFGRID chk_FIN 1 480 OFFSET 0 190+50 INSIDE OF LAYER CHIPB ABSOLUTE CENTERS HINT
}

Q: 
CHIPB_EN_6 {
@ CHIPB enclosure of DNW if seal ring is inserted by SMIC >= 3um
 err1 = ENC DNW CHIPB < 3.0 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
CHIPB_EN_7 {
@ CHIPB enclosure of MD if seal ring is inserted by SMIC >= 3um
 err1 = ENC MD CHIPB < 3.0 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
CHIPB_EN_8 {
@ CHIPB enclosure of seal ring outer ring outline edge (except seal ring corner stress relief area) if seal ring is inserted by designers >= 0.7um
 met_in_Sring = all_metal_layer AND MARKS
 met_in_Sring_OR_Holes = OR (HOLES met_in_Sring INNER) met_in_Sring
 err1 = ENC met_in_Sring_OR_Holes CHIPB < 0.7 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE NODMF
}

//OCCD

Q: 
OCCD_EN_1 {
@ OCCD enclosure by CHIPB >= 1.8um
 err1 = ENC OCCD CHIPB < 1.8 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
}

//OCOVL

Q: 
OCOVL_EN_1 {
@ OCOVL enclosure by CHIPB >= 1.8um
 err1 = ENC OCOVL CHIPB < 1.8 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
}

//HR

Q: 
HR_EN_1 {
@ RESP1 enclosure of ((AADMP OR DIRDMP) OR DIR) >= 0.065um
 err1 = ENC AADMP RESP1 < 0.065 ABUT<90 SINGULAR REGION
 err2 = ENC DIRDMP RESP1 < 0.065 ABUT<90 SINGULAR REGION
 err3 = ENC DIR RESP1 < 0.065 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: 
HR_EN_1a {
@ RESP1 enclosure of DIRDMP <= 0.36um
 chk_all = EXTENTS DIRDMP INSIDE OF LAYER RESP1
 chk_side = DIRDMP COIN EDGE chk_all
 err1 = ENC (chk_side) RESP1 <= 0.36 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

//RESNW

Q: 
RESNW_EN_1 {
@ SN enclosure of (AA INTERACT Resistor NW) >= 0.341um
 err1 = ENC (AA_NWR AND SN) SN < 0.341 ABUT<90 SINGULAR REGION OUTSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK

 err2 = AA_NWR NOT SN
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: 
RESNW_EN_1a {
@ SN enclosure of (AA INTERACT Resistor NW) (AA vertical edge extend 1/2 GT width) in S/D direction >= 0.360um
 err1_c = ANGLE (OR AA_NWR (GT_and_GTMK1 INTERACT AA_NWR)) == 90
 err1 = ENC err1_c SN < 0.36 ABUT<90 EXCLUDE SHIELDED OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//DSTR

Q: 
DSTR_EN_1 {
@ DSTR enclosure of ACTIVE (INTERACT M0) >= 0.048um
 err1 = ENC ((ACT INTERACT M0) AND DSTR) DSTR < 0.048 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
DSTR_EN_1a {
@ DSTR enclosure of ACTIVE (INTERACT M0, ACTIVE vertical edge expanding 1/2 GT width) in S/D direction >= 0.065um
 chk_aa = edge_gate_AA_act NOT OUTSIDE ACT
 chk_mn = chk_aa INTERACT M0
 err1 = ENC (chk_mn AND DSTR) (ANGLE DSTR != 0) < 0.065 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
DSTR_EN_2 {
@ DSTR enclosure of ALL_GT (Except GT jog width <= 0.004um) >= 0.035um
 chk_GT = ALL_GT NOT COIN EDGE (LENGTH GT_convex_equal_one_edge <= 0.004)
 err1 = ENC chk_GT DSTR < 0.035 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//GATED

Q: 
GATED_EN_1 {
@ DIOMK2 enclosure of AA >= 0.048um
 err1 = ENC AA_and_DIOMK2 DIOMK2 < 0.048 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
GATED_EN_1a {
@ DIOMK2 enclosure of AA (AA vertical edge extend 1/2 GT width) in S/D direction >= 0.065um
 err1 = ENC edge_gate_AA_all_v_edges DIOMK2 < 0.065 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
GATED_EN_2 {
@ DIOMK2 enclosure of (ALL_GT NOT P2) (Cut is not allowed) >= 0.059um
 err1 = ENC (ALL_GT_NOT_P2 AND DIOMK2) DIOMK2 < 0.059 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//BJT

Q: 
BJT_EN_1 {
@ DMPNP enclosure of Collector AA = 0.768-1.008um
 CHK_BJT_AA = BJT_AA NOT (Collector_AA_merged NOT real_Collector_AA)
 err1_TMP = (EXTENTS CHK_BJT_AA INSIDE OF LAYER DMPNP) NOT OUTSIDE EDGE DMPNP
 err1 = ENC (err1_TMP) DMPNP >= 0.768 <= 1.008 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 err1 NOT INSIDE EDGE SealR_NOT_BULK

 err2 = ENC CHK_BJT_AA DMPNP < 0.768 ABUT<90 SINGULAR REGION
 err2 NOT INSIDE SealR_NOT_BULK

 err3 = DMPNP INSIDE EDGE AA
 err4 = DMPNP NOT TOUCH EDGE (DMPNP INSIDE EDGE (SIZE CHK_BJT_AA BY 1.008+GLOBAL_TOLERANCE))
 err3 NOT INSIDE EDGE SealR_NOT_BULK
 err4 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: 
BJT_EN_2 {
@ DMPNP enclosure of ALL_GT >= 0.035um
 err1 = ENC (ALL_GT AND DMPNP) DMPNP < 0.035 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//VAR

Q: 
VAR_EN_1 {
@ VARMOS enclosure of AA >= 0.125um
 err1 = ENC (AA AND VARMOS) VARMOS < 0.125 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
VAR_EN_1a {
@ VARMOS enclosure of AA (AA vertical edge extend 1/2 GT width) in S/D direction >= 0.144um
 err1 = ENC edge_gate_AA_all_v_edges VARMOS < 0.144 ABUT<90 EXCLUDE SHIELDED OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
VAR_EN_2 {
@ VARMOS enclosure of ALL_GT >= 0.035um
 err1 = ENC ALL_GT VARMOS < 0.035 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
VAR_EN_3a {
@ SN fully enclosure (GATE AND VARMOS) AND NW) along the S/D direction >= 0.32um
 err1 = ENC ((GATE AND VARMOS) AND NW) SN_v_edges < 0.32 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: 
VAR_EN_3b {
@ SN fully enclosure (GATE AND VARMOS) AND NW) along GATE poly direction >= 0.125um
 err1 = ENC (((GATE AND VARMOS) AND NW) AND SN) SN < 0.125 ABUT<90 SINGULAR REGION //;minimum requirement
 err1 NOT INSIDE SealR_NOT_BULK
}


//BV0


Q: 
BV0_EN_1 {
@ Square V0 enclosure by V0_B0 for three sides = 0um
 chk_via = V0N_raw COIN EDGE V0_B0
 err1 = (V0N_raw INTERACT V0_B0) NOT WITH EDGE chk_via == 3
 err1 NOT INSIDE SealR_NOT_BULK

 err2 = (V0N_raw INTERACT V0_B0) NOT V0_B0
 err2 NOT INSIDE SealR_NOT_BULK
}

//V0

Q: 
V0_EN_1_9T_TBS {
@ V0 enclosure by M0G (width = 0.04um) with other two sides >= 0.004um in 9T DDB design = 0.012/0.018/0.029um
@ Exclude V0 totally enclosured by M0
@ DRC waive if enclosure >= 0.036um. = 0.012/0.018/0.029
 chk_V0N = ((V0iN_STD INTERACT M0G_040) NOT INSIDE M0_NOT_M0C) NOT OUTSIDE PowerRail_Area_90T
 err1 = ENC chk_V0N M0G_040 > 0.004 < 0.012 ABUT>0<90 OPPOSITE REGION
 err2 = ENC chk_V0N M0G_040 > 0.012 < 0.018 ABUT>0<90 OPPOSITE REGION
 err3 = ENC chk_V0N M0G_040 > 0.018 < 0.029 ABUT>0<90 OPPOSITE REGION
 err4 = ENC chk_V0N M0G_040 > 0.029 < 0.036 ABUT>0<90 OPPOSITE REGION
 err5 = ENC chk_V0N M0G_040_eq_040_edges < 0.012 ABUT>0<90 OPPOSITE REGION //;short side enclosure should be >= 0.012
 err1 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err2 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err3 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err4 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err5 NOT OUTSIDE (DDBTBS_real AND STDB_all)

 err6 = ENC chk_V0N M0G_040 < 0.004 ABUT<90 OPPOSITE REGION OUTSIDE ALSO  //;minimum requirement
 err6 NOT OUTSIDE (DDBTBS_real AND STDB_all)
}

Q: 
V0_EN_1_75T_TBS {
@ V0 enclosure by M0G (width = 0.04um) with other two sides >= 0.004um in 7.5T DDB design = 0.016um
@ Exclude V0 totally enclosured by M0
@ DRC waive if enclosure >= 0.036um
 chk_V0N = ((V0iN_STD INTERACT M0G_040) NOT INSIDE M0_NOT_M0C) NOT OUTSIDE PowerRail_Area_75T
 err1 = ENC chk_V0N M0G_040 > 0.004 < 0.016 ABUT>0<90 OPPOSITE REGION
 err2 = ENC chk_V0N M0G_040 > 0.016 < 0.036 ABUT>0<90 OPPOSITE REGION
 err3 = ENC chk_V0N M0G_040_eq_040_edges < 0.016 ABUT>0<90 OPPOSITE REGION //;short side enclosure should be >= 0.016
 err1 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err2 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err3 NOT OUTSIDE (DDBTBS_real AND STDB_all)

 err4 = ENC chk_V0N M0G_040 < 0.004 ABUT<90 OPPOSITE REGION OUTSIDE ALSO  //;minimum requirement
 err4 NOT OUTSIDE (DDBTBS_real AND STDB_all)
}

Q: 
V0_EN_1_AR_TBS {
@ V0 Enclosure by M0G (width = 0.04um) with other two sides >= 0.004um in SDB design = 0.016/0.035um
@ Exclude V0 totally enclosured by M0
@ DRC waive if enclosure >= 0.036um
 chk_V0N = ((V0iN_STD INTERACT M0G_040) NOT INSIDE M0_NOT_M0C) NOT OUTSIDE SDBTBS_real
 err1 = ENC chk_V0N M0G_040 > 0.004 < 0.016 ABUT>0<90 OPPOSITE REGION
 err2 = ENC chk_V0N M0G_040 > 0.016 < 0.035 ABUT>0<90 OPPOSITE REGION
 err3 = ENC chk_V0N M0G_040_eq_040_edges < 0.016 ABUT>0<90 OPPOSITE REGION //;short side enclosure should be >= 0.016
 err1 NOT OUTSIDE (SDBTBS_real AND STDB_all)
 err2 NOT OUTSIDE (SDBTBS_real AND STDB_all)
 err3 NOT OUTSIDE (SDBTBS_real AND STDB_all)

 err4 = ENC chk_V0N M0G_040 < 0.004 ABUT<90 OPPOSITE REGION OUTSIDE ALSO  //;minimum requirement
 err4 NOT OUTSIDE (SDBTBS_real AND STDB_all)
}

Q: 
V0_EN_2a_2b_TBS {
@ V0.EN.2a.TBS: V0 enclosure by M0G (width = 0.05um) in gate poly direction >= 0.009um with other side >= 0.002um. >= 0.016um
@ V0.EN.2b.TBS: V0 enclosure by M0G (width = 0.05um) in four direction >= 0.009um
 err1 = ANGLE (ENC [V0iN_STD] M0G_050 < 0.009 ABUT<90 OPPOSITE) == 0
 err1 NOT OUTSIDE EDGE STDB_all

 err2 = RECTANGLE ENCLOSURE (V0iN_STD INTERACT M0G_050) M0G_050 ABUT<90 OUTSIDE ALSO
 GOOD 0.009 OPPOSITE 0.002 OPPOSITE 0.009 OPPOSITE 0.016 OPPOSITE
 GOOD 0.009 OPPOSITE 0.009 OPPOSITE 0.009 OPPOSITE 0.009 OPPOSITE
 err2 NOT OUTSIDE STDB_all
}

Q: 
V0_EN_2c_AR_TBS {
@ V0 Enclosure by M0G (width = 0.05um) in Gate poly direction >= 0.009um with other side >= 0um in SDB design >= 0.018um
 err1 = ANGLE (ENC [V0iN_STD] M0G_050 < 0.009 ABUT<90 OPPOSITE) == 0
 err1 NOT OUTSIDE EDGE SDBTBS_real

 err2 = RECTANGLE ENCLOSURE (V0iN_STD INTERACT M0G_050) M0G_050 ABUT<90 OUTSIDE ALSO
 GOOD 0 0.009 OPPOSITE 0.009 OPPOSITE 0.018 OPPOSITE
 GOOD 0 0.009 OPPOSITE 0.018 OPPOSITE 0.009 OPPOSITE
 err2 NOT OUTSIDE SDBTBS_real
}

Q: 
V0_EN_3_TBS {
@ V0 Enclosure by M1 (width = 0.032um) line-end with the other two sides >= 0um in DDB design
@ DRC waive if enclosure >= 0.048um. = 0.038/0.04
 chk_V0N = V0iN_STD NOT OUTSIDE (OR M1_STD_good_032 (INT M1_STD == 0.032 OPPOSITE REGION PARA ONLY))
 err1 = ENC chk_V0N M1_STD_032_end < 0.038 ABUT<90 OPPOSITE REGION
 err2 = ENC chk_V0N M1_STD_032_end > 0.038 < 0.040 ABUT<90 OPPOSITE REGION
 err3 = ENC chk_V0N M1_STD_032_end > 0.040 < 0.048 ABUT<90 OPPOSITE REGION
 err1 NOT OUTSIDE DDBTBS_real
 err2 NOT OUTSIDE DDBTBS_real
 err3 NOT OUTSIDE DDBTBS_real

 err5 = ENC chk_V0N M1 < 0.001 ABUT>0<90 SINGULAR REGION OUTSIDE ALSO  //;point touch
 err5 NOT OUTSIDE DDBTBS_real
}

Q: 
V0_EN_3_AR_TBS {
@ V0 enclosure by M1 (width = 0.032um) line-end with the other two sides >= 0um in SDB design = 0.036/0.038/0.040um
@ DRC waive if enclosure >= 0.048um
 chk_V0N = V0iN_STD NOT OUTSIDE (OR M1_STD_good_032 (INT M1_STD == 0.032 OPPOSITE REGION PARA ONLY))
 err1 = ENC chk_V0N M1_STD_032_end < 0.036 ABUT<90 OPPOSITE REGION
 err2 = ENC chk_V0N M1_STD_032_end > 0.036 < 0.038 ABUT<90 OPPOSITE REGION
 err3 = ENC chk_V0N M1_STD_032_end > 0.038 < 0.040 ABUT<90 OPPOSITE REGION
 err4 = ENC chk_V0N M1_STD_032_end > 0.040 < 0.048 ABUT<90 OPPOSITE REGION
 err1 NOT OUTSIDE SDBTBS_real
 err2 NOT OUTSIDE SDBTBS_real
 err3 NOT OUTSIDE SDBTBS_real
 err4 NOT OUTSIDE SDBTBS_real

 err5 = ENC chk_V0N M1 < 0.001 ABUT>0<90 SINGULAR REGION OUTSIDE ALSO  //;point touch
 err5 NOT OUTSIDE SDBTBS_real
}

Q: 
V0_EN_4_9T_TBS {
@ V0 enclosure by M1 (width = 0.034um) line-end with the other two sides >= 0.001um in 9T DDB design
@ DRC waive if enclosure >= 0.048um. = 0.038/0.040/0.041um
 chk_V0N = (V0iN_STD NOT OUTSIDE (OR M1_STD_good_034 (INT M1_STD == 0.034 OPPOSITE REGION PARA ONLY))) NOT OUTSIDE PowerRail_Area_90T
 err1 = ENC chk_V0N M1_STD_034_end < 0.038 ABUT<90 OPPOSITE REGION
 err2 = ENC chk_V0N M1_STD_034_end > 0.038 < 0.040 ABUT<90 OPPOSITE REGION
 err3 = ENC chk_V0N M1_STD_034_end > 0.040 < 0.041 ABUT<90 OPPOSITE REGION
 err4 = ENC chk_V0N M1_STD_034_end > 0.041 < 0.048 ABUT<90 OPPOSITE REGION
 err1 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err2 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err3 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err4 NOT OUTSIDE (DDBTBS_real AND STDB_all)

 err5 = ENC chk_V0N M1 < 0.001 ABUT<90 SINGULAR REGION OUTSIDE ALSO  //;minimum requirement
 err5 NOT OUTSIDE (DDBTBS_real AND STDB_all)
}

Q: 
V0_EN_4_75T_TBS {
@ V0 enclosure by M1 (width = 0.034um) line-end with the other two sides >= 0.001um in 7.5T DDB design
@ DRC waive if enclosure >= 0.048um. = 0.038/0.040um
 chk_V0N = (V0iN_STD NOT OUTSIDE (OR M1_STD_good_034 (INT M1_STD == 0.034 OPPOSITE REGION PARA ONLY))) NOT OUTSIDE PowerRail_Area_75T
 err1 = ENC chk_V0N M1_STD_034_end < 0.038 ABUT<90 OPPOSITE REGION
 err2 = ENC chk_V0N M1_STD_034_end > 0.038 < 0.040 ABUT<90 OPPOSITE REGION
 err3 = ENC chk_V0N M1_STD_034_end > 0.040 < 0.048 ABUT<90 OPPOSITE REGION
 err1 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err2 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err3 NOT OUTSIDE (DDBTBS_real AND STDB_all)

 err5 = ENC chk_V0N M1 < 0.001 ABUT<90 SINGULAR REGION OUTSIDE ALSO  //;minimum requirement
 err5 NOT OUTSIDE (DDBTBS_real AND STDB_all)
}

Q: 
V0_EN_4_AR_TBS {
@ V0 Enclosure by M1 (width = 0.034um) line-end with the other two sides >= 0.001um in SDB design = 0.038/0.040um
@ DRC waive if enclosure >= 0.048um
 chk_V0N = (V0iN_STD NOT OUTSIDE (OR M1_STD_good_034 (INT M1_STD == 0.034 OPPOSITE REGION PARA ONLY))) NOT OUTSIDE SDBTBS_real
 err1 = ENC chk_V0N M1_STD_034_end < 0.038 ABUT<90 OPPOSITE REGION
 err2 = ENC chk_V0N M1_STD_034_end > 0.038 < 0.040 ABUT<90 OPPOSITE REGION
 err3 = ENC chk_V0N M1_STD_034_end > 0.040 < 0.048 ABUT<90 OPPOSITE REGION
 err1 NOT OUTSIDE (SDBTBS_real AND STDB_all)
 err2 NOT OUTSIDE (SDBTBS_real AND STDB_all)
 err3 NOT OUTSIDE (SDBTBS_real AND STDB_all)

 err5 = ENC chk_V0N M1 < 0.001 ABUT<90 SINGULAR REGION OUTSIDE ALSO  //;minimum requirement
 err5 NOT OUTSIDE (SDBTBS_real AND STDB_all)
}

Q: 
V0_EN_5_75T_TBS {
@ V0 enclosure by M1 (width = 0.035um) line-end with the other two sides = 0/0.003um in 7.5T DDB design = 0.038/0.040um
@ DRC waive if enclosure >= 0.048um
 chk_V0N = (V0iN_STD NOT OUTSIDE (OR M1_STD_good_035 (INT M1_STD == 0.035 OPPOSITE REGION PARA ONLY))) NOT OUTSIDE PowerRail_Area_75T
 err1 = ENC chk_V0N M1_STD_035_line < 0.003 ABUT>0<90 OPPOSITE REGION
 err2 = ENC chk_V0N M1_STD_035_end < 0.038 ABUT<90 OPPOSITE REGION
 err3 = ENC chk_V0N M1_STD_035_end > 0.038 < 0.040 ABUT<90 OPPOSITE REGION
 err4 = ENC chk_V0N M1_STD_035_end > 0.040 < 0.048 ABUT<90 OPPOSITE REGION
 err1 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err2 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err3 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err4 NOT OUTSIDE (DDBTBS_real AND STDB_all)

 err5 = ENC chk_V0N M1 < 0.003 ABUT>0<90 SINGULAR REGION OUTSIDE ALSO  //;minimum requirement
 err5 NOT OUTSIDE (DDBTBS_real AND STDB_all)
}

Q: 
V0_EN_5_AR_TBS {
@ V0 Enclosure by M1 (width = 0.035um) line-end with the other two sides = 0/0.003um in SDB design = 0.038um
@ DRC waive if enclosure >= 0.048um
 chk_V0N = (V0iN_STD NOT OUTSIDE (OR M1_STD_good_035 (INT M1_STD == 0.035 OPPOSITE REGION PARA ONLY))) NOT OUTSIDE SDBTBS_real
 err1 = ENC chk_V0N M1_STD_035_line < 0.003 ABUT>0<90 OPPOSITE REGION
 err2 = ENC chk_V0N M1_STD_035_end < 0.038 ABUT<90 OPPOSITE REGION
 err3 = ENC chk_V0N M1_STD_035_end > 0.038 < 0.048 ABUT<90 OPPOSITE REGION
 err1 NOT OUTSIDE SDBTBS_real
 err2 NOT OUTSIDE SDBTBS_real
 err3 NOT OUTSIDE DDBTBS_real

 err5 = ENC chk_V0N M1 < 0.003 ABUT>0<90 SINGULAR REGION OUTSIDE ALSO  //;minimum requirement
 err5 NOT OUTSIDE SDBTBS_real
}

Q: 
V0_EN_6_TBS {
@ V0 Enclosure by M1 (width = 0.046um) line-end with the other two sides = 0/0.003/0.007/0.011/0.014um in in DDB design
@ DRC waive if enclosure >= 0.048um. = 0.032
 chk_V0N = V0iN_STD NOT OUTSIDE (OR M1_STD_good_046 (INT M1_STD == 0.046 OPPOSITE REGION PARA ONLY))
 err1 = ENC chk_V0N M1_STD_046_line < 0.003 ABUT>0<90 OPPOSITE REGION
 err2 = ENC chk_V0N M1_STD_046_line > 0.003 < 0.007 ABUT>0<90 OPPOSITE REGION
 err3 = ENC chk_V0N M1_STD_046_line > 0.007 < 0.011 ABUT>0<90 OPPOSITE REGION
 err4 = ENC chk_V0N M1_STD_046_line > 0.011 < 0.014 ABUT>0<90 OPPOSITE REGION
 err5 = ENC chk_V0N M1_STD_046_end < 0.032 ABUT<90 OPPOSITE REGION
 err6 = ENC chk_V0N M1_STD_046_end > 0.032 < 0.048 ABUT<90 OPPOSITE REGION
 err1 NOT OUTSIDE DDBTBS_real
 err2 NOT OUTSIDE DDBTBS_real
 err3 NOT OUTSIDE DDBTBS_real
 err4 NOT OUTSIDE DDBTBS_real
 err5 NOT OUTSIDE DDBTBS_real
 err6 NOT OUTSIDE DDBTBS_real

 err7 = ENC chk_V0N M1 < 0.003 ABUT>0<90 SINGULAR REGION OUTSIDE ALSO  //;minimum requirement
 err7 NOT OUTSIDE DDBTBS_real
}

Q: 
V0_EN_6_AR_TBS {
@ V0 Enclosure by M1 (width = 0.046um) line-end with the other two sides = 0/0.004/0.007/0.01/0.014um in SDB design = 0.032um
@ DRC waive if enclosure >= 0.048um
 chk_V0N = V0iN_STD NOT OUTSIDE (OR M1_STD_good_046 (INT M1_STD == 0.046 OPPOSITE REGION PARA ONLY))
 err1 = ENC chk_V0N M1_STD_046_line < 0.003 ABUT>0<90 OPPOSITE REGION
 err2 = ENC chk_V0N M1_STD_046_line > 0.003 < 0.007 ABUT>0<90 OPPOSITE REGION
 err3 = ENC chk_V0N M1_STD_046_end > 0.007 < 0.011 ABUT<90 OPPOSITE REGION
 err4 = ENC chk_V0N M1_STD_046_end > 0.011 < 0.014 ABUT<90 OPPOSITE REGION
 err5 = ENC chk_V0N M1_STD_046_end > 0.014 < 0.032 ABUT<90 OPPOSITE REGION
 err6 = ENC chk_V0N M1_STD_046_end > 0.032 < 0.048 ABUT<90 OPPOSITE REGION
 err1 NOT OUTSIDE SDBTBS_real
 err2 NOT OUTSIDE SDBTBS_real
 err3 NOT OUTSIDE SDBTBS_real
 err4 NOT OUTSIDE SDBTBS_real
 err5 NOT OUTSIDE SDBTBS_real
 err6 NOT OUTSIDE SDBTBS_real

 err7 = ENC chk_V0N M1 < 0.003 ABUT>0<90 SINGULAR REGION OUTSIDE ALSO  //;minimum requirement
 err7 NOT OUTSIDE SDBTBS_real
}

Q: 
V0_EN_7_9T_TBS {
@ V0 enclosure by M1 (width = 0.05um) line-end with the other two sides >= 0.009um in 9T DDB design = 0.025/0.027/0.029/0.035um
@ DRC waive if enclosure >= 0.036um
 chk_V0N = (V0iN_STD NOT OUTSIDE (OR M1_STD_good_050 (INT M1_STD == 0.050 OPPOSITE REGION PARA ONLY))) NOT OUTSIDE PowerRail_Area_90T
 err1 = ENC chk_V0N M1_STD_050_end < 0.025 ABUT<90 OPPOSITE REGION
 err2 = ENC chk_V0N M1_STD_050_end > 0.025 < 0.027 ABUT<90 OPPOSITE REGION
 err3 = ENC chk_V0N M1_STD_050_end > 0.027 < 0.029 ABUT<90 OPPOSITE REGION
 err4 = ENC chk_V0N M1_STD_050_end > 0.029 < 0.035 ABUT<90 OPPOSITE REGION
 err5 = ENC chk_V0N M1_STD_050_end > 0.035 < 0.036 ABUT<90 OPPOSITE REGION
 err1 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err2 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err3 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err4 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err5 NOT OUTSIDE (DDBTBS_real AND STDB_all)

 err6 = ENC chk_V0N M1 < 0.009 ABUT<90 SINGULAR REGION OUTSIDE ALSO  //;for minimum requirement and corner enclosure
 err6 NOT OUTSIDE (DDBTBS_real AND STDB_all)
}

Q: 
V0_EN_7_75T_TBS {
@ V0 enclosure by M1 (width = 0.05um) line-end with the other two sides = 0.006/0.009/0.012um in 7.5T DDB design = 0.025/0.028um
@ DRC waive if enclosure >= 0.036um
 chk_V0N = (V0iN_STD NOT OUTSIDE (OR M1_STD_good_050 (INT M1_STD == 0.050 OPPOSITE REGION PARA ONLY))) NOT OUTSIDE PowerRail_Area_75T
 err1 = ENC chk_V0N M1_STD_050_line < 0.006 ABUT<90 OPPOSITE REGION
 err2 = ENC chk_V0N M1_STD_050_line > 0.006 < 0.009 ABUT<90 OPPOSITE REGION
 err3 = ENC chk_V0N M1_STD_050_line > 0.009 < 0.012 ABUT<90 OPPOSITE REGION
 err4 = ENC chk_V0N M1_STD_050_end < 0.025 ABUT<90 OPPOSITE REGION
 err5 = ENC chk_V0N M1_STD_050_end > 0.025 < 0.028 ABUT<90 OPPOSITE REGION
 err6 = ENC chk_V0N M1_STD_050_end > 0.028 < 0.036 ABUT<90 OPPOSITE REGION
 err1 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err2 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err3 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err4 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err5 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err6 NOT OUTSIDE (DDBTBS_real AND STDB_all)

 err7 = ENC chk_V0N M1 < 0.006 ABUT<90 SINGULAR REGION OUTSIDE ALSO  //;for minimum requirement and corner enclosure
 err7 NOT OUTSIDE (DDBTBS_real AND STDB_all)
}

Q: 
V0_EN_7_AR_TBS {
@ V0 enclosure by M1 (width = 0.050um) line-end with the other two sides >= 0.006um in SDB design = 0.025/0.028um
@ DRC waive if enclosure >= 0.036um
 chk_V0N = (V0iN_STD NOT OUTSIDE (OR M1_STD_good_050 (INT M1_STD == 0.050 OPPOSITE REGION PARA ONLY))) NOT OUTSIDE SDBTBS_real
 err1 = ENC chk_V0N M1_STD_050_end < 0.025 ABUT<90 OPPOSITE REGION
 err2 = ENC chk_V0N M1_STD_050_end > 0.025 < 0.028 ABUT<90 OPPOSITE REGION
 err3 = ENC chk_V0N M1_STD_050_end > 0.028 < 0.036 ABUT<90 OPPOSITE REGION
 err1 NOT OUTSIDE (SDBTBS_real AND STDB_all)
 err2 NOT OUTSIDE (SDBTBS_real AND STDB_all)
 err3 NOT OUTSIDE (SDBTBS_real AND STDB_all)

 err4 = ENC chk_V0N M1 < 0.006 ABUT<90 SINGULAR REGION OUTSIDE ALSO  //;for minimum requirement and corner enclosure
 err4 NOT OUTSIDE (SDBTBS_real AND STDB_all)
}

Q: 
V0_EN_13_AR_TBS {
@ Enclosure by M1 (width = 0.058um) line-end with the other two sides >= 0.006um in SDB design = 0.025um
@ Drc waive if enclosure >= 0.036um
 chk_V0N = (V0iN_STD NOT OUTSIDE (OR M1_STD_good_058 (INT M1_STD == 0.058 OPPOSITE REGION PARA ONLY))) NOT OUTSIDE SDBTBS_real
 err1 = ENC chk_V0N M1_STD_058_end < 0.025 ABUT<90 OPPOSITE REGION
 err2 = ENC chk_V0N M1_STD_058_end > 0.025 < 0.036 ABUT<90 OPPOSITE REGION
 err1 NOT OUTSIDE (SDBTBS_real AND STDB_all)
 err2 NOT OUTSIDE (SDBTBS_real AND STDB_all)

 err3 = ENC chk_V0N M1 < 0.006 ABUT<90 SINGULAR REGION OUTSIDE ALSO  //;for minimum requirement and corner enclosure
 err3 NOT OUTSIDE (SDBTBS_real AND STDB_all)
}

Q: 
V0_EN_8_9T_TBS {
@ V0 enclosure by M1 (width = 0.064um) in three direction in 9T DDB design = 0.016um
 CHK_AREA = DDBTBS_real AND STDB_all
 chk_V0N = (V0iN_STD NOT OUTSIDE (OR M1_STD_good_064 (INT M1_STD == 0.064 OPPOSITE REGION PARA ONLY))) NOT OUTSIDE PowerRail_Area_90T
 err1 = chk_V0N NOT (chk_V0N WITH EDGE (ENC [chk_V0N] M1 == 0.016 ABUT<90 OPPOSITE) == 3)
 err1 NOT OUTSIDE EDGE CHK_AREA

 err2 = ENC chk_V0N M1 < 0.016 ABUT<90 SINGULAR REGION OUTSIDE ALSO  //;for minimum requirement and corner enclosure
 err2 NOT OUTSIDE CHK_AREA
}

Q: 
V0_EN_8_75T_TBS {
@ Enclosure by M1 (width = 0.064um) line-end with the other two sides >= 0.016um in 7.5T DDB design = 0.016/0.017/0.025um
@ DRC waive if enclosure >= 0.036um
 chk_V0N = (V0iN_STD NOT OUTSIDE (OR M1_STD_good_064 (INT M1_STD == 0.064 OPPOSITE REGION PARA ONLY))) NOT OUTSIDE PowerRail_Area_75T
 err1 = ENC chk_V0N M1_STD_064_end > 0.016 < 0.017 ABUT<90 OPPOSITE REGION
 err2 = ENC chk_V0N M1_STD_064_end > 0.017 < 0.025 ABUT<90 OPPOSITE REGION
 err3 = ENC chk_V0N M1_STD_064_end > 0.025 < 0.036 ABUT<90 OPPOSITE REGION
 err1 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err2 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err3 NOT OUTSIDE (DDBTBS_real AND STDB_all)

 err4 = ENC chk_V0N M1 < 0.016 ABUT<90 SINGULAR REGION OUTSIDE ALSO  //;for minimum requirement and corner enclosure
 err4 NOT OUTSIDE (DDBTBS_real AND STDB_all)
}

Q: 
V0_EN_8_AR_TBS {
@ Enclosure by M1 (width = 0.064um) line-end with the other two sides >= 0.016um in SDB design = 0.016/0.017um
@ DRC waive if enclosure >= 0.025um
 chk_V0N = (V0iN_STD NOT OUTSIDE (OR M1_STD_good_064 (INT M1_STD == 0.064 OPPOSITE REGION PARA ONLY))) NOT OUTSIDE SDBTBS_real
 err1 = ENC chk_V0N M1_STD_064_end > 0.016 < 0.017 ABUT<90 OPPOSITE REGION
 err2 = ENC chk_V0N M1_STD_064_end > 0.017 < 0.025 ABUT<90 OPPOSITE REGION
 err1 NOT OUTSIDE (SDBTBS_real AND STDB_all)
 err2 NOT OUTSIDE (SDBTBS_real AND STDB_all)

 err3 = ENC chk_V0N M1 < 0.016 ABUT<90 SINGULAR REGION OUTSIDE ALSO  //;for minimum requirement and corner enclosure
 err3 NOT OUTSIDE (SDBTBS_real AND STDB_all)
}

Q: 
V0_EN_9_75T_TBS {
@ Enclosure by M1 (width = 0.066um) line-end with the other two sides >= 0.017um in 7.5T DDB design = 0.016um
@ DRC waive if enclosure >= 0.036um
 chk_V0N = (V0iN_STD NOT OUTSIDE (OR M1_STD_good_066 (INT M1_STD == 0.066 OPPOSITE REGION PARA ONLY))) NOT OUTSIDE PowerRail_Area_75T
 err1 = ENC chk_V0N M1_STD_066_end < 0.016 ABUT<90 OPPOSITE REGION
 err2 = ENC chk_V0N M1_STD_066_end > 0.016 < 0.036 ABUT<90 OPPOSITE REGION
 err3 = RECTANGLE ENCLOSURE chk_V0N M1 ABUT<90 SINGULAR OUTSIDE ALSO GOOD 0.016 0.017 OPPOSITE 0.016 0.017 OPPOSITE
 err1 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err2 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err3 NOT OUTSIDE (DDBTBS_real AND STDB_all)
}

Q: 
V0_EN_9_AR_TBS {
@ Enclosure by M1 (width = 0.066um) line-end with the other two sides >= 0.017um in SDB design = 0.016um
@ DRC waive if enclosure >= 0.025um
 chk_V0N = (V0iN_STD NOT OUTSIDE (OR M1_STD_good_066 (INT M1_STD == 0.066 OPPOSITE REGION PARA ONLY))) NOT OUTSIDE SDBTBS_real
 err1 = ENC chk_V0N M1_STD_066_end < 0.016 ABUT<90 OPPOSITE REGION
 err2 = ENC chk_V0N M1_STD_066_end > 0.016 < 0.025 ABUT<90 OPPOSITE REGION
 err3 = RECTANGLE ENCLOSURE chk_V0N M1 ABUT<90 SINGULAR OUTSIDE ALSO GOOD 0.016 0.017 OPPOSITE 0.016 0.017 OPPOSITE
 err1 NOT OUTSIDE (SDBTBS_real AND STDB_all)
 err2 NOT OUTSIDE (SDBTBS_real AND STDB_all)
 err3 NOT OUTSIDE (SDBTBS_real AND STDB_all)
}

Q: 
V0_EN_10_75T_TBS {
@ Enclosure by M1 (width = 0.076um) line-end with the other two sides >= 0.009um in 7.5T DDB design = 0.025um
@ DRC waive if enclosure >= 0.036um
 chk_V0N = (V0iN_STD NOT OUTSIDE (OR M1_STD_good_076 (INT M1_STD == 0.076 OPPOSITE REGION PARA ONLY))) NOT OUTSIDE PowerRail_Area_75T
 err1 = ENC chk_V0N M1_STD_076_end < 0.025 ABUT<90 OPPOSITE REGION
 err2 = ENC chk_V0N M1_STD_076_end > 0.025 < 0.036 ABUT<90 OPPOSITE REGION
 err3 = RECTANGLE ENCLOSURE chk_V0N M1 ABUT<90 SINGULAR OUTSIDE ALSO GOOD 0.009 0.025 OPPOSITE 0.009 0.025 OPPOSITE
 err1 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err2 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err3 NOT OUTSIDE (DDBTBS_real AND STDB_all)
}

Q: 
V0_EN_10_AR_TBS {
@ Enclosure by M1 (width = 0.076um) line-end with the other two sides >= 0.009um in SDB design = 0.025um
@ DRC waive if enclosure >= 0.036um
 chk_V0N = (V0iN_STD NOT OUTSIDE (OR M1_STD_good_076 (INT M1_STD == 0.076 OPPOSITE REGION PARA ONLY))) NOT OUTSIDE SDBTBS_real
 err1 = ENC chk_V0N M1_STD_076_end < 0.025 ABUT<90 OPPOSITE REGION
 err2 = ENC chk_V0N M1_STD_076_end > 0.025 < 0.036 ABUT<90 OPPOSITE REGION
 err3 = RECTANGLE ENCLOSURE chk_V0N M1 ABUT<90 SINGULAR OUTSIDE ALSO GOOD 0.009 0.025 OPPOSITE 0.009 0.025 OPPOSITE
 err1 NOT OUTSIDE (SDBTBS_real AND STDB_all)
 err2 NOT OUTSIDE (SDBTBS_real AND STDB_all)
 err3 NOT OUTSIDE (SDBTBS_real AND STDB_all)
}

Q: 
V0_EN_11_AR_TBS {
@ Enclosure by M1 (width = 0.082um) line-end with the other two sides = 0.009/0.016/0.024/0.025um in SDB design = 0.012/0.016/0.025um
@ DRC waive if enclosure >= 0.036um
@ Enclosure = (0.009, 0.012)/(0.009, 0.016)/(0.012, 0.016) by two neighbor sides is not allowed
 chk_V0N = (V0iN_STD NOT OUTSIDE (OR M1_STD_good_082 (INT M1_STD == 0.082 OPPOSITE REGION PARA ONLY))) NOT OUTSIDE SDBTBS_real
 lside_enc_a = chk_V0N TOUCH EDGE (ENC [chk_V0N] M1_STD_082_line == 0.025 ABUT<90 OPPOSITE)
 lside_enc_b = chk_V0N TOUCH EDGE (ENC [chk_V0N] M1_STD_082_line == 0.016 ABUT<90 OPPOSITE)
 lside_enc_c = chk_V0N TOUCH EDGE (ENC [chk_V0N] M1_STD_082_line == 0.034 ABUT<90 OPPOSITE)
 lside_enc_d = chk_V0N TOUCH EDGE (ENC [chk_V0N] M1_STD_082_line == 0.024 ABUT<90 OPPOSITE)
 lside_enc_e = chk_V0N TOUCH EDGE (ENC [chk_V0N] M1_STD_082_line == 0.026 ABUT<90 OPPOSITE)
 lside_enc_f = chk_V0N TOUCH EDGE (ENC [chk_V0N] M1_STD_082_line == 0.009 ABUT<90 OPPOSITE)
 lside_enc_g = chk_V0N TOUCH EDGE (ENC [chk_V0N] M1_STD_082_line == 0.041 ABUT<90 OPPOSITE)
 lside_enc_good = OR EDGE (OR EDGE (OR EDGE lside_enc_a lside_enc_b) (OR EDGE lside_enc_c lside_enc_d)) (OR EDGE (OR EDGE lside_enc_e lside_enc_f) lside_enc_g)
 lside_enc_good_via = OR (INT lside_enc_a == 0.032 OPPOSITE REGION) (INT lside_enc_b lside_enc_c == 0.032 OPPOSITE REGION) (INT lside_enc_d lside_enc_e == 0.032 OPPOSITE REGION) (INT lside_enc_f lside_enc_g == 0.032 OPPOSITE REGION)
 err1 = chk_V0N NOT lside_enc_good_via
 err1 NOT OUTSIDE (SDBTBS_real AND STDB_all)

 err2 = ENC (chk_V0N NOT TOUCH EDGE lside_enc_good) M1_STD_082_end < 0.012 ABUT<90 OPPOSITE REGION
 err3 = ENC (chk_V0N NOT TOUCH EDGE lside_enc_good) M1_STD_082_end > 0.012 < 0.016 ABUT<90 OPPOSITE REGION
 err4 = ENC (chk_V0N NOT TOUCH EDGE lside_enc_good) M1_STD_082_end > 0.016 < 0.025 ABUT<90 OPPOSITE REGION
 err5 = ENC (chk_V0N NOT TOUCH EDGE lside_enc_good) M1_STD_082_end > 0.025 < 0.036 ABUT<90 OPPOSITE REGION
 err6 = OR (INT (ENC [chk_V0N] M1 == 0.009 ABUT<90 SINGULAR OPPOSITE) (ENC [chk_V0N] M1 == 0.012 ABUT<90 SINGULAR OPPOSITE) < 0.005 ABUT==90 INTERSECTING ONLY REGION)
        (INT (ENC [chk_V0N] M1 == 0.009 ABUT<90 SINGULAR OPPOSITE) (ENC [chk_V0N] M1 == 0.016 ABUT<90 SINGULAR OPPOSITE) < 0.005 ABUT==90 INTERSECTING ONLY REGION)
        (INT (ENC [chk_V0N] M1 == 0.012 ABUT<90 SINGULAR OPPOSITE) (ENC [chk_V0N] M1 == 0.016 ABUT<90 SINGULAR OPPOSITE) < 0.005 ABUT==90 INTERSECTING ONLY REGION)

 err2 NOT OUTSIDE (SDBTBS_real AND STDB_all)
 err3 NOT OUTSIDE (SDBTBS_real AND STDB_all)
 err4 NOT OUTSIDE (SDBTBS_real AND STDB_all)
 err5 NOT OUTSIDE (SDBTBS_real AND STDB_all)
 err6 NOT OUTSIDE (SDBTBS_real AND STDB_all)
}

Q: 
V0_EN_11_9T_TBS {
@ Enclosure by M1 (width = 0.082um) line-end with the other two sides = 0.016/0.025/0.034um in 9T DDB design = 0.009/0.016/0.025/0.032um
@ Enclosure = (0.009, 0.016) by two neighbor sides is not allowed
@ DRC waive if enclosure >= 0.036um
 chk_V0N = (V0iN_STD NOT OUTSIDE (OR M1_STD_good_082 (INT M1_STD == 0.082 OPPOSITE REGION PARA ONLY))) NOT OUTSIDE PowerRail_Area_90T
 lside_enc_a = chk_V0N TOUCH EDGE (ENC [chk_V0N] M1_STD_082_line == 0.025 ABUT<90 OPPOSITE)
 lside_enc_b = chk_V0N TOUCH EDGE (ENC [chk_V0N] M1_STD_082_line == 0.016 ABUT<90 OPPOSITE)
 lside_enc_c = chk_V0N TOUCH EDGE (ENC [chk_V0N] M1_STD_082_line == 0.034 ABUT<90 OPPOSITE)
 lside_enc_good = OR EDGE lside_enc_a (OR EDGE lside_enc_b lside_enc_c)
 lside_enc_good_via = (INT lside_enc_a == 0.032 OPPOSITE REGION) OR (INT lside_enc_b lside_enc_c == 0.032 OPPOSITE REGION)
 err1 = chk_V0N NOT lside_enc_good_via
 err1 NOT OUTSIDE (DDBTBS_real AND STDB_all)

 err2 = ENC (chk_V0N NOT TOUCH EDGE lside_enc_good) M1_STD_082_end < 0.009 ABUT<90 OPPOSITE REGION
 err3 = ENC (chk_V0N NOT TOUCH EDGE lside_enc_good) M1_STD_082_end > 0.009 < 0.016 ABUT<90 OPPOSITE REGION
 err4 = ENC (chk_V0N NOT TOUCH EDGE lside_enc_good) M1_STD_082_end > 0.016 < 0.025 ABUT<90 OPPOSITE REGION
 err5 = ENC (chk_V0N NOT TOUCH EDGE lside_enc_good) M1_STD_082_end > 0.025 < 0.032 ABUT<90 OPPOSITE REGION
 err6 = ENC (chk_V0N NOT TOUCH EDGE lside_enc_good) M1_STD_082_end > 0.032 < 0.036 ABUT<90 OPPOSITE REGION
 err7 = INT (ENC [chk_V0N] M1 == 0.009 ABUT<90 SINGULAR OPPOSITE) (ENC [chk_V0N] M1 == 0.016 ABUT<90 SINGULAR OPPOSITE) < 0.005 ABUT==90 INTERSECTING ONLY REGION

 err2 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err3 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err4 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err5 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err6 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err7 NOT OUTSIDE (DDBTBS_real AND STDB_all)
}

Q: 
V0_EN_11_75T_TBS {
@ Enclosure by M1 (width = 0.082um) line-end with the other two sides = 0.016/0.025/0.034um in 7.5T DDB design = 0.016/0.018/0.024/0.025/0.029/0.032/0.035um
@ DRC waive if enclosure >= 0.036um
 chk_V0N = (V0iN_STD NOT OUTSIDE (OR M1_STD_good_082 (INT M1_STD == 0.082 OPPOSITE REGION PARA ONLY))) NOT OUTSIDE PowerRail_Area_75T
 lside_enc_a = chk_V0N TOUCH EDGE (ENC [chk_V0N] M1_STD_082_line == 0.025 ABUT<90 OPPOSITE)
 lside_enc_b = chk_V0N TOUCH EDGE (ENC [chk_V0N] M1_STD_082_line == 0.016 ABUT<90 OPPOSITE)
 lside_enc_c = chk_V0N TOUCH EDGE (ENC [chk_V0N] M1_STD_082_line == 0.034 ABUT<90 OPPOSITE)
 lside_enc_good = OR EDGE lside_enc_a (OR EDGE lside_enc_b lside_enc_c)
 lside_enc_good_via = (INT lside_enc_a == 0.032 OPPOSITE REGION) OR (INT lside_enc_b lside_enc_c == 0.032 OPPOSITE REGION)
 err1 = chk_V0N NOT lside_enc_good_via
 err1 NOT OUTSIDE (DDBTBS_real AND STDB_all)

 err2 = ENC (chk_V0N NOT TOUCH EDGE lside_enc_good) M1_STD_082_end < 0.016 ABUT<90 OPPOSITE REGION
 err3 = ENC (chk_V0N NOT TOUCH EDGE lside_enc_good) M1_STD_082_end > 0.016 < 0.018 ABUT<90 OPPOSITE REGION
 err4 = ENC (chk_V0N NOT TOUCH EDGE lside_enc_good) M1_STD_082_end > 0.018 < 0.024 ABUT<90 OPPOSITE REGION
 err5 = ENC (chk_V0N NOT TOUCH EDGE lside_enc_good) M1_STD_082_end > 0.024 < 0.025 ABUT<90 OPPOSITE REGION
 err6 = ENC (chk_V0N NOT TOUCH EDGE lside_enc_good) M1_STD_082_end > 0.025 < 0.029 ABUT<90 OPPOSITE REGION
 err7 = ENC (chk_V0N NOT TOUCH EDGE lside_enc_good) M1_STD_082_end > 0.029 < 0.032 ABUT<90 OPPOSITE REGION
 err8 = ENC (chk_V0N NOT TOUCH EDGE lside_enc_good) M1_STD_082_end > 0.032 < 0.035 ABUT<90 OPPOSITE REGION

 err2 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err3 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err4 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err5 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err6 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err7 NOT OUTSIDE (DDBTBS_real AND STDB_all)
 err8 NOT OUTSIDE (DDBTBS_real AND STDB_all)
}
