//CELLB
Q: CELLB space in S/D direction when PRL > -0.096um. >= 0.11um
A: 
CELLB_S_1 {
@ CELLB space in S/D direction when PRL > -0.096um. >= 0.11um
 err1 = EXT CELLB_v_edges < 0.11 ABUT<90 OPPOSITE EXTENDED 0.096 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: CELLB space in GATE poly direction when PRL > -0.11um. = 0.096+0.048*num
    DRC hint: When violation found, please check the relative coordinate between CELLB and CHIPB or the outermost boundary of all CELLB layers
A: 
CELLB_S_2 {
@ CELLB space in GATE poly direction when PRL > -0.11um. = 0.096+0.048*num
@ DRC hint: When violation found, please check the relative coordinate between CELLB and CHIPB or the outermost boundary of all CELLB layers
 err1 = EXT CELLB_h_edges < 0.096 ABUT<90 OPPOSITE EXTENDED 0.11 REGION
 err1 NOT INSIDE SealR_NOT_BULK

 cellb_v_exp = EXPAND EDGE CELLB_v_edges OUTSIDE BY 0.11/2
 cellb_h_chk = ANGLE (CELLB OR cellb_v_exp) == 0
 err2 = DFM COPY (OFFGRID cellb_h_chk 1 480 INSIDE OF LAYER CHIPB ABSOLUTE) REGION
 err2 NOT INSIDE SealR_NOT_BULK

 cellb_boundary = EXTENT CELLB
 err3 = DFM COPY (OFFGRID CELLB_h_edges 1 480 OFFSET 0 480 INSIDE OF LAYER cellb_boundary ABSOLUTE) REGION
 err3 NOT INSIDE SealR_NOT_BULK
}

//AA

Q: Space between ALL_AA, except INST region >= 0.09um
A:  
AA_S_1 {
@ Space between ALL_AA, except INST region >= 0.09um
 err1 = EXT ALL_AA < 0.09 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE INST
}

Q: Space between ALL_AA for I/O region (including core to I/O) >= 0.192um
A: 
AA_S_2 {
@ Space between ALL_AA for I/O region (including core to I/O) >= 0.192um
 err1_TMP = EXT ALL_AA_IO ALL_AA < 0.192 ABUT<90 SINGULAR REGION
 err1 = err1_TMP NOT OUTSIDE DG
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ALL_AA (AA vertical edge extend 1/2 GT width) for I/O region in S/D direction >= 0.117um
A: 
AA_S_2a {
@ Space between ALL_AA (AA vertical edge extend 1/2 GT width) for I/O region in S/D direction >= 0.117um
 err1_TMP = EXT (ANGLE (OR edge_gate_AA_all edge_gate_dumAA_all) == 90) < 0.117 ABUT<90 OPPOSITE REGION
 err1 = err1_TMP NOT OUTSIDE DG
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ALL_AA in GATE poly direction when PRL > -0.09um, except INST region = 0.096+0.048*num
    Notice: CELLB must be drawn for AA on-grid check
A: 
AA_S_3a {
@ Space between ALL_AA in GATE poly direction when PRL > -0.09um, except INST region = 0.096+0.048*num
@ Notice: CELLB must be drawn for AA on-grid check
 err1 = EXT ALL_AA_h_edges < 0.096 ABUT<90 OPPOSITE EXTENDED 0.09 REGION
 err1 NOT INSIDE INST

 check_AREA = (EXPAND EDGE ALL_AA_v_edges OUTSIDE BY 0.09/2) OR ALL_AA
 check_EDGE = (ANGLE check_AREA == 0) NOT INSIDE EDGE INST
 err2 = DFM COPY (OFFGRID check_EDGE 1 480 OFFSET 0 960 INSIDE OF LAYER CELLB ABSOLUTE) REGION
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ALL_AA in GATE poly direction for I/O region when PRL > -0.198um. = 0.192+0.048*num
     Notice: CELLB must be drawn for AA on-grid check
A: 
AA_S_3b {
@ Space between ALL_AA in GATE poly direction for I/O region when PRL > -0.198um. = 0.192+0.048*num
@ Notice: CELLB must be drawn for AA on-grid check
 check_AREA = (EXPAND EDGE (ANGLE ALL_AA_IO == 90) OUTSIDE BY 0.198/2) OR ALL_AA_IO
 check_EDGE = ANGLE check_AREA == 0
 err1_TMP = EXT check_EDGE < 0.192 ABUT<90 OPPOSITE REGION
 err1 = err1_TMP AND DG
 err1 NOT INSIDE SealR_NOT_BULK

 err2_TMP = (check_EDGE NOT OUTSIDE EDGE DG) NOT INSIDE EDGE SealR_NOT_BULK
 err2 = DFM COPY (OFFGRID err2_TMP 1 480 OFFSET 0 1920 INSIDE OF LAYER CELLB ABSOLUTE) REGION
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ALL_AA in GATE poly direction when at least one side ALL_AA horizontal edge length = 0.09um and PRL > -0.09um. = 0.096, = 0.288+0.048*num
    Notice: CELLB must be drawn for AA on-grid check
A: 
AA_S_4 {
@ Space between ALL_AA in GATE poly direction when at least one side ALL_AA horizontal edge length = 0.09um and PRL > -0.09um. = 0.096, = 0.288+0.048*num
@ Notice: CELLB must be drawn for AA on-grid check
 check_AA = ALL_AA WITH EDGE (LENGTH ALL_AA_h_edges == 0.09)
 check_AREA = (EXPAND EDGE (ANGLE check_AA == 90) OUTSIDE BY 0.045) OR check_AA
 check_EDGE = ANGLE check_AREA == 0
 err1 = EXT check_AA ALL_AA_h_edges < 0.096 ABUT<90 OPPOSITE EXTENDED 0.09 REGION
 err2 = EXT check_AA ALL_AA_h_edges > 0.096 < 0.288 ABUT<90 OPPOSITE EXTENDED 0.09 REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK

 err3_TMP = check_EDGE NOT INSIDE EDGE SealR_NOT_BULK
 err3 = DFM COPY (OFFGRID err3_TMP 1 480 OFFSET 0 2880 INSIDE OF LAYER CELLB ABSOLUTE) REGION
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between NW and N+AA in PW, except INST and DIOMK2 regions >= 0.048um
A: 
AA_S_5a {
@ Space between NW and N+AA in PW, except INST and DIOMK2 regions >= 0.048um
 err1 = EXT NACT NWRN < 0.048 ABUT<90 REGION  //;exclude NW resistor
 err2 = NACT INTERACT NW SINGULAR ONLY
 err3 = NWRN INSIDE EDGE NAA

 err1 NOT INSIDE INST_DIOMK2
 err2 NOT INSIDE INST_DIOMK2   //; singular interacting
 err3 NOT INSIDE EDGE INST_DIOMK2
}

Q: Space between NW and N+AA (AA vertical edge extend 1/2 GT width) in PW in S/D direction, except INST and DIOMK2 regions >= 0.065um
A: 
AA_S_5b {
@ Space between NW and N+AA (AA vertical edge extend 1/2 GT width) in PW in S/D direction, except INST and DIOMK2 regions >= 0.065um
 err1 = EXT NACT_v_edges_ov NWRN < 0.065 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE INST_DIOMK2
}

Q: Space between NW and P+ pick-up AA, except INST and DIOMK2 regions >= 0.048um
A: 
AA_S_6a {
@ Space between NW and P+ pick-up AA, except INST and DIOMK2 regions >= 0.048um
 err1 = EXT PTAP_RAW NW < 0.048 ABUT<90 REGION
 err2 = PTAP_RAW INTERACT NW SINGULAR ONLY
 err3 = NWRN INSIDE EDGE PAA

 err1 NOT INSIDE INST_DIOMK2
 err2 NOT INSIDE INST_DIOMK2   //; singular interacting
 err3 NOT INSIDE EDGE INST_DIOMK2
}

Q: Space between NW and P+ pick-up AA (AA vertical edge extend 1/2 GT width) in S/D direction, except INST and DIOMK2 regions >= 0.065um
A: 
AA_S_6b {
@ Space between NW and P+ pick-up AA (AA vertical edge extend 1/2 GT width) in S/D direction, except INST and DIOMK2 regions >= 0.065um
 err1 = EXT NW_v_edges edge_gate_AA_ptap < 0.065 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE INST_DIOMK2
}

Q: Space between NW and N+AA in I/O area, except DIOMK2 region >= 0.144um
A: 
AA_S_7a {
@ Space between NW and N+AA in I/O area, except DIOMK2 region >= 0.144um
 nact_CHK = (NACT NOT OUTSIDE DG) NOT COIN EDGE (NTAP_RAW INTERACT NTAPi)
 err1 = (EXT nact_CHK NW < 0.144 ABUT<90 REGION MEASURE ALL) NOT OUTSIDE DG
 err1 NOT INSIDE DIOMK2
}

Q:  Space between NW and N+AA (AA vertical edge extend 1/2 GT width) in I/O area in S/D direction, except DIOMK2 region >= 0.162um
A: 
AA_S_7b {
@ Space between NW and N+AA (AA vertical edge extend 1/2 GT width) in I/O area in S/D direction, except DIOMK2 region >= 0.162um
 err1 = EXT NW_v_edges (edge_gate_AA_nact NOT OUTSIDE DG) < 0.162 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE DIOMK2
}

NWRN_chk_edges = LENGTH NWRN >= 0.001
NWRN_convex_corner = INT [NWRN_chk_edges] < 0.002 ABUT==90 INTERSECTING ONLY
pact_convex_corner_aa = INT [PACT] < 0.002 ABUT==90 INTERSECTING ONLY
nact_convex_corner_aa = INT [NACT] < 0.002 ABUT==90 INTERSECTING ONLY

NWRN_concave_corner = EXT [NWRN_chk_edges] < 0.002 ABUT==90 INTERSECTING ONLY
pact_concave_corner_aa = EXT [PACT] < 0.002 ABUT==90 INTERSECTING ONLY
nact_concave_corner_aa = EXT [NACT] < 0.002 ABUT==90 INTERSECTING ONLY

NACT_h_edges = ANGLE NACT == 0
NACT_v_edges = ANGLE NACT == 90
PACT_h_edges = ANGLE PACT == 0
PACT_v_edges = ANGLE PACT == 90

NACT_ov = NACT OR edge_gate_AA_nact
PACT_ov = PACT OR edge_gate_AA_pact

pact_convex_corner_aa_ov = INT [PACT_ov] < 0.002 ABUT==90 INTERSECTING ONLY
nact_convex_corner_aa_ov = INT [NACT_ov] < 0.002 ABUT==90 INTERSECTING ONLY

pact_concave_corner_aa_ov = EXT [PACT_ov] < 0.002 ABUT==90 INTERSECTING ONLY
nact_concave_corner_aa_ov = EXT [NACT_ov] < 0.002 ABUT==90 INTERSECTING ONLY

NACT_h_edges_ov = ANGLE NACT_ov == 0
NACT_v_edges_ov = ANGLE NACT_ov == 90
PACT_h_edges_ov = ANGLE PACT_ov == 0
PACT_v_edges_ov = ANGLE PACT_ov == 90

VARIABLE AA_S_8a_val_ver 0.061
VARIABLE AA_S_8a_val_hor 0.079

Q: Space between NW and N+AA (AA vertical edge extend 1/2 GT width) in GATE poly direction, when space in S/D direction < 0.079um at PW corner, except resistor NW and LDBK region >= 0.061um
A: 
AA_S_8a {
@ Space between NW and N+AA (AA vertical edge extend 1/2 GT width) in GATE poly direction, when space in S/D direction < 0.079um at PW corner, except resistor NW and LDBK region >= 0.061um
 y1 = (EXT [NACT_v_edges_ov] NWRN < AA_S_8a_val_hor ABUT<90 OPPOSITE EXTENDED AA_S_8a_val_ver) OR EDGE 
   (EXT [NACT_h_edges_ov] NWRN < AA_S_8a_val_ver ABUT<90 OPPOSITE EXTENDED AA_S_8a_val_hor)
 y2 = (EXT NACT_v_edges_ov [NWRN] < AA_S_8a_val_hor ABUT<90 OPPOSITE EXTENDED AA_S_8a_val_ver) OR EDGE 
   (EXT NACT_h_edges_ov [NWRN] < AA_S_8a_val_ver ABUT<90 OPPOSITE EXTENDED AA_S_8a_val_hor)
 y3 = EXT nact_convex_corner_aa_ov NWRN_concave_corner < AA_S_8a_val_hor ABUT<90 OPPOSITE EXTENDED AA_S_8a_val_hor
 y4 = EXT nact_concave_corner_aa_ov NWRN_convex_corner < AA_S_8a_val_hor ABUT<90 OPPOSITE EXTENDED AA_S_8a_val_hor
 err1_a = INT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_b = EXT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_a = INT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_b = EXT y1 < 0.001 ABUT==90 INTERSECTING ONLY

 err1_c = DFM PROPERTY y3 err1_a err1_b ABUT ALSO OVERLAP MULTI [-= (count(err1_a) > 0 && count(err1_b) > 0) ? 1 : 0] > 0
 err2_c = DFM PROPERTY y4 err2_a err2_b ABUT ALSO OVERLAP MULTI [-= (count(err2_a) > 0 && count(err2_b) > 0) ? 1 : 0] > 0
 err1 = DFM COPY err1_c REGION
 err2 = DFM COPY err2_c REGION
 err1 NOT INSIDE LDBK
 err2 NOT INSIDE LDBK
}

VARIABLE AA_S_8b_val_ver 0.061
VARIABLE AA_S_8b_val_hor 0.079

Q: Space between NW and AA (AA vertical edge extend 1/2 GT width) in S/D direction, when space in GATE poly direction < 0.061um at PW corner, except resistor NW and LDBK region >= 0.079um
A: 
AA_S_8b {
@ Space between NW and AA (AA vertical edge extend 1/2 GT width) in S/D direction, when space in GATE poly direction < 0.061um at PW corner, except resistor NW and LDBK region >= 0.079um
 y1 = (EXT [NACT_v_edges_ov] NWRN < AA_S_8b_val_hor ABUT<90 OPPOSITE EXTENDED AA_S_8b_val_ver) OR EDGE 
   (EXT [NACT_h_edges_ov] NWRN < AA_S_8b_val_ver ABUT<90 OPPOSITE EXTENDED AA_S_8b_val_hor)
 y2 = (EXT NACT_v_edges_ov [NWRN] < AA_S_8b_val_hor ABUT<90 OPPOSITE EXTENDED AA_S_8b_val_ver) OR EDGE 
   (EXT NACT_h_edges_ov [NWRN] < AA_S_8b_val_ver ABUT<90 OPPOSITE EXTENDED AA_S_8b_val_hor)
 y3 = EXT nact_convex_corner_aa_ov NWRN_concave_corner < AA_S_8b_val_hor ABUT<90 OPPOSITE EXTENDED AA_S_8b_val_hor
 y4 = EXT nact_concave_corner_aa_ov NWRN_convex_corner < AA_S_8b_val_hor ABUT<90 OPPOSITE EXTENDED AA_S_8b_val_hor
 err1_a = INT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_b = EXT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_a = INT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_b = EXT y1 < 0.001 ABUT==90 INTERSECTING ONLY

 err1_c = DFM PROPERTY y3 err1_a err1_b ABUT ALSO OVERLAP MULTI [-= (count(err1_a) > 0 && count(err1_b) > 0) ? 1 : 0] > 0
 err2_c = DFM PROPERTY y4 err2_a err2_b ABUT ALSO OVERLAP MULTI [-= (count(err2_a) > 0 && count(err2_b) > 0) ? 1 : 0] > 0
 err1 = DFM COPY err1_c REGION
 err2 = DFM COPY err2_c REGION
 err1 NOT INSIDE LDBK
 err2 NOT INSIDE LDBK
}

Q: Space between NW vertical edge (edge length <= 0.296um between two concave corners with both sides length >= 0.09um) and AA (AA vertical edge extend 1/2 GT width) in S/D direction >= 0.079um
A: 
AA_S_9 {
@ Space between NW vertical edge (edge length <= 0.296um between two concave corners with both sides length >= 0.09um) and AA (AA vertical edge extend 1/2 GT width) in S/D direction >= 0.079um
 EDGE_RAW = CONVEX EDGE NW ANGLE1 == 270 LENGTH1 >= 0.09 ANGLE2 == 270 LENGTH2 >= 0.09 WITH LENGTH <= 0.296
 EDGE_CHK = ANGLE EDGE_RAW == 90
 err1 = EXT EDGE_CHK edge_gate_AA_all < 0.079 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

NW_chk_edges = LENGTH NW >= 0.001
NW_convex_corner = INT [NW_chk_edges] < 0.002 ABUT==90 INTERSECTING ONLY
NW_concave_corner = EXT [NW_chk_edges] < 0.002 ABUT==90 INTERSECTING ONLY
NW_v_U_end = ANGLE (CONVEX EDGE NW ANGLE1 == 270 LENGTH1 >= 0.09 ANGLE2 == 270 LENGTH2 >= 0.09 WITH LENGTH < 0.24) == 90
NW_v_N_end = ANGLE (CONVEX EDGE NW ANGLE1 == 90 LENGTH1 >= 0.09 ANGLE2 == 90 LENGTH2 >= 0.09 WITH LENGTH < 0.24) == 90

AA_concave_corner_aa_ov = EXT [edge_gate_AA_all] < 0.002 ABUT==90 INTERSECTING ONLY
AA_convex_corner_aa_ov = INT [edge_gate_AA_all] < 0.002 ABUT==90 INTERSECTING ONLY
AA_v_lend = ANGLE (CONVEX EDGE edge_gate_AA_all ANGLE1 == 90 ANGLE2 == 90 WITH LENGTH <= 0.096) == 90

VARIABLE AA_S_9a_val_ver 0.071
VARIABLE AA_S_9a_val_hor 0.140+GLOBAL_TOLERANCE

Q: Space between AA line-end (AA vertical edge extend 1/2 GT width) and NW space-end in GATE poly direction when space in S/D direction <= 0.14um, except INST region. >= 0.071um
    NW space-end: vertical space < 0.24um between two consecutive 270-270 degree corners with both sides length >= 0.09um
    AA line-end: vertical width <= 0.096um between two consecutive 90-90 degree corners
A: 
AA_S_9a {
@ Space between AA line-end (AA vertical edge extend 1/2 GT width) and NW space-end in GATE poly direction when space in S/D direction <= 0.14um, except INST region. >= 0.071um
@ NW space-end: vertical space < 0.24um between two consecutive 270-270 degree corners with both sides length >= 0.09um
@ AA line-end: vertical width <= 0.096um between two consecutive 90-90 degree corners
 y1 = (EXT [edge_gate_AA_all_v_edges] NW_v_U_end < AA_S_9a_val_hor ABUT<90 OPPOSITE EXTENDED AA_S_9a_val_ver) OR EDGE 
   (EXT [edge_gate_AA_all_h_edges] NW < AA_S_9a_val_ver ABUT<90 OPPOSITE EXTENDED AA_S_9a_val_hor)
 y2 = (EXT edge_gate_AA_all_v_edges [NW_v_U_end] < AA_S_9a_val_hor ABUT<90 OPPOSITE EXTENDED AA_S_9a_val_ver) OR EDGE 
   (EXT edge_gate_AA_all_h_edges [NW] < AA_S_9a_val_ver ABUT<90 OPPOSITE EXTENDED AA_S_9a_val_hor)
 y3 = EXT AA_convex_corner_aa_ov NW_concave_corner < AA_S_9a_val_hor ABUT<90 OPPOSITE EXTENDED AA_S_9a_val_hor
 err1_a = INT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_b = EXT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_c = DFM PROPERTY y3 err1_a err1_b NW_v_U_end AA_v_lend ABUT ALSO OVERLAP MULTI [-= (count(err1_a) > 0 && count(err1_b) > 0 && count(NW_v_U_end) > 0 && count(AA_v_lend) > 0) ? 1 : 0] > 0
 err1 = DFM COPY err1_c REGION
 err1 NOT INSIDE INST
}

VARIABLE AA_S_9b_val_ver 0.061+GLOBAL_TOLERANCE
VARIABLE AA_S_9b_val_hor 0.088

Q: Space between AA line-end (AA vertical edge extend 1/2 GT width) and NW space-end in S/D direction when space in GATE poly direction <= 0.061um, except INST region. >= 0.088um
    NW space-end: vertical space < 0.24um between two consecutive 270-270 degree corners with both sides length >= 0.09um
    AA line-end: vertical width <= 0.096um between two consecutive 90-90 degree corners
A: 
AA_S_9b {
@ Space between AA line-end (AA vertical edge extend 1/2 GT width) and NW space-end in S/D direction when space in GATE poly direction <= 0.061um, except INST region. >= 0.088um
@ NW space-end: vertical space < 0.24um between two consecutive 270-270 degree corners with both sides length >= 0.09um
@ AA line-end: vertical width <= 0.096um between two consecutive 90-90 degree corners
 y1 = (EXT [edge_gate_AA_all_v_edges] NW_v_U_end < AA_S_9b_val_hor ABUT<90 OPPOSITE EXTENDED AA_S_9b_val_ver) OR EDGE 
   (EXT [edge_gate_AA_all_h_edges] NW < AA_S_9b_val_ver ABUT<90 OPPOSITE EXTENDED AA_S_9b_val_hor)
 y2 = (EXT edge_gate_AA_all_v_edges [NW_v_U_end] < AA_S_9b_val_hor ABUT<90 OPPOSITE EXTENDED AA_S_9b_val_ver) OR EDGE 
   (EXT edge_gate_AA_all_h_edges [NW] < AA_S_9b_val_ver ABUT<90 OPPOSITE EXTENDED AA_S_9b_val_hor)
 y3 = EXT AA_convex_corner_aa_ov NW_concave_corner < AA_S_9b_val_hor ABUT<90 OPPOSITE EXTENDED AA_S_9b_val_hor
 err1_a = INT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_b = EXT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_c = DFM PROPERTY y3 err1_a err1_b NW_v_U_end AA_v_lend ABUT ALSO OVERLAP MULTI [-= (count(err1_a) > 0 && count(err1_b) > 0 && count(NW_v_U_end) > 0 && count(AA_v_lend) > 0) ? 1 : 0] > 0
 err1 = DFM COPY err1_c REGION
 err1 NOT INSIDE INST
}

Q: Space between ACTIVE AA and pick-up AA in S/D direction, except DSTR and INST regions >= 0.18um
A: 
AA_S_10 {
@ Space between ACTIVE AA and pick-up AA in S/D direction, except DSTR and INST regions >= 0.18um
 chk_pick_up = ((TAP_RAW NOT DSTR) NOT COIN EDGE ACT) COIN EDGE AA_v_edges
 err1 = EXT ACT chk_pick_up < 0.180 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE (OR DSTR INST)
}



Q: Empty ALL_AA space, except RESNW, RESP1, OCOVL, (NODMF su 1um) and LOGO regions <= 2.1um
    This rule is a local density related rule
    DRC flags if (((Chip NOT ALL_AA) sd 1.05um) su 1.05um) region greater than 2.1*2.1um
A: 
AA_S_13 {
@ Empty ALL_AA space, except RESNW, RESP1, OCOVL, (NODMF su 1um) and LOGO regions <= 2.1um
@ This rule is a local density related rule
@ DRC flags if (((Chip NOT ALL_AA) sd 1.05um) su 1.05um) region greater than 2.1*2.1um
 waive_AREA = OR RESNW RESP1 MARKS OCOVL NODMF_SIZE_1 LOGO
 check_AREA = CHIP_NOT_ALL_AA NOT waive_AREA
 err1 = SIZE check_AREA BY 2.1/2 UNDEROVER
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Empty ALL_AA space in RESNW and RESP1 regions <= 5.1um
    This rule is a local density related rule
    DRC flags if (((Chip NOT ALL_AA) sd 2.55um) su 2.55um) region greater than 5.1*5.1um
A: 
AA_S_14 {
@ Empty ALL_AA space in RESNW and RESP1 regions <= 5.1um
@ This rule is a local density related rule
@ DRC flags if (((Chip NOT ALL_AA) sd 2.55um) su 2.55um) region greater than 5.1*5.1um
 chk_real = OR RESNW RESP1
 chk_area = CHIP_NOT_ALL_AA NOT MARKS
 err1 = (SIZE chk_area BY 5.1/2 UNDEROVER) NOT OUTSIDE chk_real
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between NPAA and AA (overlap is not allowed)
    (NPAA in chip is not allowed, this rule only for SMIC internal test structure usage) >= 0.5um
A: 
AA_S_15 {
@ Space between NPAA and AA (overlap is not allowed)
@ (NPAA in chip is not allowed, this rule only for SMIC internal test structure usage) >= 0.5um
 err1 = EXT NPAA AA < 0.5 ABUT<90 SINGULAR REGION INSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
}

AA_convex_L1_048_L2_048_270_270_edges = CONVEX EDGE AA ANGLE1 == 270 LENGTH1 == 0.048 ANGLE2 == 270 LENGTH2 == 0.048
AA_convex_L1_048_L2_096_270_270_edges = CONVEX EDGE AA ANGLE1 == 270 LENGTH1 == 0.048 ANGLE2 == 270 LENGTH2 == 0.096
AA_convex_L1_048_L2_144_270_270_edges = CONVEX EDGE AA ANGLE1 == 270 LENGTH1 == 0.048 ANGLE2 == 270 LENGTH2 == 0.144

AA_convex_L1_096_L2_096_270_270_edges = CONVEX EDGE AA ANGLE1 == 270 LENGTH1 == 0.096 ANGLE2 == 270 LENGTH2 == 0.096
AA_convex_L1_096_L2_144_270_270_edges = CONVEX EDGE AA ANGLE1 == 270 LENGTH1 == 0.096 ANGLE2 == 270 LENGTH2 == 0.144
AA_convex_L1_144_L2_144_270_270_edges = CONVEX EDGE AA ANGLE1 == 270 LENGTH1 == 0.144 ANGLE2 == 270 LENGTH2 == 0.144

//;-----------------------------------------------------------------------------------------------------------------------------
AA_048_to_ALL_AA_extend_090_space_eq_096_AA_048_h_edges = EXT [AA_048_h_edges] ALL_AA == 0.096 ABUT<90 OPPOSITE EXTENDED 0.09
AA_048_to_ALL_AA_extend_090_space_eq_192_AA_048_h_edges = EXT [AA_048_h_edges] ALL_AA == 0.192 ABUT<90 OPPOSITE EXTENDED 0.09

AA_048_to_ALL_AA_extend_090_space_lt_192_AA_048_h_edges = EXT [AA_048_h_edges] ALL_AA < 0.192 ABUT<90 OPPOSITE EXTENDED 0.09
AA_048_to_ALL_AA_extend_090_space_lt_240_AA_048_h_edges = EXT [AA_048_h_edges] ALL_AA < 0.240 ABUT<90 OPPOSITE EXTENDED 0.09
AA_048_to_ALL_AA_extend_090_space_lt_192_not_AA_048_h_edges = EXT (AA_048_h_edges) ALL_AA < 0.192 ABUT<90 OPPOSITE EXTENDED 0.09
AA_048_to_ALL_AA_extend_090_space_lt_240_not_AA_048_h_edges = EXT (AA_048_h_edges) ALL_AA < 0.240 ABUT<90 OPPOSITE EXTENDED 0.09

AA_048_v_region = INT AA_h_edges == 0.048 ABUT<90 OPPOSITE REGION
AA_convex_90_270_OR_270_270_edges = AA_convex_90_270_edge OR EDGE AA_convex_270_270_edge
//;-----------------------------------------------------------------------------------------------------------------------------

Q: Space between AA vertical edge (edge length <= 0.144um between two consecutive 270-90 degree corners) when 0 < PRL <= 0.048um. >= 0.18um
A: 
AA_S_16 {
@ Space between AA vertical edge (edge length <= 0.144um between two consecutive 270-90 degree corners) when 0 < PRL <= 0.048um. >= 0.18um
 err1_e = ANGLE (LENGTH AA_convex_90_270_edge <= 0.144) == 90
 err1_s = EXT err1_e < 0.18 ABUT<90 OPPOSITE
 err1_TMP = DFM PROPERTY err1_s [-= EC(err1_s)] > 0 <= 0.048
 err1 = DFM COPY err1_TMP REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Forbidden space between ALL_AA (width = 0.096um) at both side and ALL_AA in GATE poly direction = 0.144um
A: 
AA_S_17 {
@ Forbidden space between ALL_AA (width = 0.096um) at both side and ALL_AA in GATE poly direction = 0.144um
 err1_e = ANGLE ALL_AA_096 == 0
 err1_s = EXT [err1_e] ALL_AA == 0.144 ABUT<90 OPPOSITE
 err1 = INT (err1_e COIN EDGE err1_s) == 0.096 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}


Q: Forbidden space between (ALL_AA vertical edge expand 0.089um) in GATE poly direction when both two adjacent space = 0.096um, and the space between two 0.096um space region is 0.048um in GATE poly direction = 0.24um
A: 
AA_S_19 {
@ Forbidden space between (ALL_AA vertical edge expand 0.089um) in GATE poly direction when both two adjacent space = 0.096um, and the space between two 0.096um space region is 0.048um in GATE poly direction = 0.24um
 AA_EXP_HOR = EXPAND EDGE ALL_AA_v_edges OUTSIDE BY 0.089
 AA_EXP_ALL = (AA_EXP_HOR OR ALL_AA) INTERACT AA_EXP_HOR
 AA_EXP_ALL_h_edges = ANGLE AA_EXP_ALL == 0
 ADJACENT_SPACE_096 = EXT AA_EXP_ALL_h_edges == 0.096 ABUT<90 OPPOSITE REGION

 FORBIDDEN_SPACE_240_RAW = EXT AA_EXP_ALL_h_edges == 0.240 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 FORBIDDEN_SPACE_240_TMP = FORBIDDEN_SPACE_240_RAW TOUCH ADJACENT_SPACE_096 == 2
 FORBIDDEN_SPACE_240_TMP_SIDES_COIN = FORBIDDEN_SPACE_240_TMP COIN OUTSIDE EDGE ADJACENT_SPACE_096
 FORBIDDEN_SPACE_240_TMP_SIDES_ANTI = (FORBIDDEN_SPACE_240_TMP TOUCH EDGE FORBIDDEN_SPACE_240_TMP_SIDES_COIN) NOT COIN EDGE ADJACENT_SPACE_096
 FORBIDDEN_SPACE_240_TMP_FILTER = FORBIDDEN_SPACE_240_TMP WITH EDGE FORBIDDEN_SPACE_240_TMP_SIDES_ANTI == 2
 FORBIDDEN_SPACE_240_TMP_SIDES_TOP = (GROW FORBIDDEN_SPACE_240_TMP_FILTER TOP BY 0.0005) NOT FORBIDDEN_SPACE_240_TMP_FILTER
 FORBIDDEN_SPACE_240_TMP_SIDES_BOTTOM = (GROW FORBIDDEN_SPACE_240_TMP_FILTER BOTTOM BY 0.0005) NOT FORBIDDEN_SPACE_240_TMP_FILTER

 FORBIDDEN_SPACE_240_TMP_SIDES_ANTI_LEGS = EXPAND EDGE FORBIDDEN_SPACE_240_TMP_SIDES_ANTI INSIDE BY 0.0001
 FORBIDDEN_SPACE_240_TMP_SIDES_ANTI_TOP = FORBIDDEN_SPACE_240_TMP_SIDES_ANTI_LEGS INTERACT FORBIDDEN_SPACE_240_TMP_SIDES_TOP
 FORBIDDEN_SPACE_240_TMP_SIDES_ANTI_BOTTOM = FORBIDDEN_SPACE_240_TMP_SIDES_ANTI_LEGS INTERACT FORBIDDEN_SPACE_240_TMP_SIDES_BOTTOM
 err1 = ((FORBIDDEN_SPACE_240_TMP_FILTER INTERACT FORBIDDEN_SPACE_240_TMP_SIDES_ANTI_LEGS == 2) INTERACT FORBIDDEN_SPACE_240_TMP_SIDES_ANTI_TOP) INTERACT FORBIDDEN_SPACE_240_TMP_SIDES_ANTI_BOTTOM
 err1 NOT INSIDE SealR_NOT_BULK
}

//AR

Q: AR pitch in S/D direction >= 0.09um
A: 
AR_S_1 {
@ AR pitch in S/D direction >= 0.09um
 CHK_018_sides = INT [AR_v_edges] == 0.018 ABUT<90 OPPOSITE
 CHK_020_sides = INT [AR_v_edges] == 0.020 ABUT<90 OPPOSITE
 err1 = EXT CHK_018_sides < 0.09-0.018 ABUT<90 OPPOSITE REGION
 err2 = EXT CHK_020_sides < 0.09-0.020 ABUT<90 OPPOSITE REGION
 err3 = EXT CHK_018_sides CHK_020_sides < 0.09-0.019 ABUT<90 OPPOSITE REGION  //; 0.019 = (0.02+0.018)/2
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AR and ALL_AA >= 0.048um
A: 
AR_S_2 {
@ Space between AR and ALL_AA >= 0.048um
 err1 = EXT AR ALL_AA < 0.048 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AR in GATE poly direction >= 0.144um
A: 
AR_S_3 {
@ Space between AR in GATE poly direction >= 0.144um
 err1 = OR (EXT AR_h_edges < 0.144 ABUT<90 OPPOSITE REGION) (EXT AR < 0.001 ABUT<90 SINGULAR REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}

//DNW

Q: Space between two DNWs >= 3.1um
A:
DNW_S_1 {
@ Space between two DNWs >= 3.1um
 err1 = EXT DNW < 3.1 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DNW and N+AA (N+AA outside of DNW or NW) >= 1.48um
A: 
DNW_S_2 {
@ Space between DNW and N+AA (N+AA outside of DNW or NW) >= 1.48um
 err1 = EXT DNW (NACT OUTSIDE DNW) < 1.48 ABUT<90 REGION
 err2 = EXT DNW (NACT OUTSIDE NW) < 1.48 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DNW and NW at different net >= 1.49um
A: 
DNW_S_3 {
@ Space between DNW and NW at different net >= 1.49um
 err1 = EXT DNW NW < 1.49 ABUT<90 MEASURE ALL REGION NOT CONNECTED
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between (NW hole in DNW) and ((NW hole in DNW) OR PW) at different net >= 0.52um
A: 
DNW_S_4 {
@ Space between (NW hole in DNW) and ((NW hole in DNW) OR PW) at different net >= 0.52um
 err1 = EXT PW_and_HOLES_NW_in_DNW < 0.52 ABUT<90 REGION NOT CONNECTED
 err2 = EXT PW_and_HOLES_NW_in_DNW PW < 0.52 ABUT<90 REGION NOT CONNECTED
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK

 rw_raw = HOLES_NW_INNER INSIDE DNW
 rw_chk = PW AND rw_raw
 err3 = EXT rw_chk < 0.52 ABUT<90 REGION NOT CONNECTED
 err4 = EXT rw_chk PW < 0.52 ABUT<90 REGION NOT CONNECTED
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
}

Q: Space between (NW hole in DNW) and (((NW hole in DNW) OR PW) INTERACT DG) at different net >= 0.896um
A: 
DNW_S_5 {
@ Space between (NW hole in DNW) and (((NW hole in DNW) OR PW) INTERACT DG) at different net >= 0.896um
 err1 = EXT PW_and_HOLES_NW_in_DNW (PW_and_HOLES_NW_in_DNW INTERACT DG) < 0.896 ABUT<90 REGION NOT CONNECTED
 err2 = EXT PW_and_HOLES_NW_in_DNW (PW INTERACT DG) < 0.896 ABUT<90 REGION NOT CONNECTED
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK

 rw_raw = HOLES_NW_INNER INSIDE DNW
 rw_chk = PW AND rw_raw
 rw_chk_IO = rw_chk INTERACT DG
 err3 = EXT rw_chk rw_chk_IO < 0.896 ABUT<90 REGION NOT CONNECTED
 err4 = EXT rw_chk (PW INTERACT DG) < 0.896 ABUT<90 REGION NOT CONNECTED
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
}

//NW

Q: NW space, except INST region >= 0.214um
A: 
NW_S_1 {
@ NW space, except INST region >= 0.214um
 err1 = EXT NW < 0.214 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE INST
}

Q: (NW OR DG) space, except INST region >= 0.214um
A: 
NW_S_1a_1 {
@ (NW OR DG) space, except INST region >= 0.214um
 err1 = EXT DG_or_NW < 0.214 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE INST
}

Q: Core_NW space, except INST region >= 0.214um
A: 
NW_S_1a_2 {
@ Core_NW space, except INST region >= 0.214um
 err1 = EXT core_NW < 0.214 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE INST
}

Q: IO_PW space, except INST region >= 0.214um
A: 
NW_S_1a_3 {
@ IO_PW space, except INST region >= 0.214um
 err1 = EXT IO_PW < 0.214 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE INST
}

Q: IO_NW space >= 0.238um
A: 
NW_S_1b {
@ IO_NW space >= 0.238um
 err1 = EXT IO_NW < 0.238 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: IO_NW space, when the width <= 0.235um. <= 0.365um
A: 
NW_S_2a_1 {
@ IO_NW space, when the width <= 0.235um. <= 0.365um
 nw_meet_wid_sides = INT [IO_NW] <= 0.235 ABUT<90 OPPOSITE
 nw_meet_sps_sides = EXT [IO_NW] <= 0.365 ABUT<90 OPPOSITE
 nw_errs_sps_sides = EXT (IO_NW) <= 0.365 ABUT<90 OPPOSITE
 err1 = INT (nw_meet_wid_sides NOT COIN EDGE nw_meet_sps_sides) nw_errs_sps_sides <= 0.235 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: IO_PW space, when the width <= 0.235um. <= 0.365um
A: 
NW_S_2a_2 {
@ IO_PW space, when the width <= 0.235um. <= 0.365um
 nw_meet_wid_sides = INT [IO_PW] <= 0.235 ABUT<90 OPPOSITE
 nw_meet_sps_sides = EXT [IO_PW] <= 0.365 ABUT<90 OPPOSITE
 nw_errs_sps_sides = EXT (IO_PW) <= 0.365 ABUT<90 OPPOSITE
 err1 = INT (nw_meet_wid_sides NOT COIN EDGE nw_meet_sps_sides) nw_errs_sps_sides <= 0.235 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: NW space, when the width <= 0.235um, expect INST region <= 0.365um
A: 
NW_S_2_d {
@ NW space, when the width <= 0.235um, expect INST region <= 0.365um
 nw_meet_wid_sides = INT [NW] <= 0.235 ABUT<90 OPPOSITE
 nw_meet_sps_sides = EXT [NW] <= 0.365 ABUT<90 OPPOSITE
 nw_errs_sps_sides = EXT (NW) <= 0.365 ABUT<90 OPPOSITE
 err1 = INT (nw_meet_wid_sides NOT COIN EDGE nw_meet_sps_sides) nw_errs_sps_sides <= 0.235 OPPOSITE REGION
 err1 NOT INSIDE INST
}

Q: Core_NW space, when the width <= 0.235um, expect INST region <= 0.365um
A: 
NW_S_2_e {
@ Core_NW space, when the width <= 0.235um, expect INST region <= 0.365um
 nw_meet_wid_sides = INT [core_NW] <= 0.235 ABUT<90 OPPOSITE
 nw_meet_sps_sides = EXT [core_NW] <= 0.365 ABUT<90 OPPOSITE
 nw_errs_sps_sides = EXT (core_NW) <= 0.365 ABUT<90 OPPOSITE
 err1 = INT (nw_meet_wid_sides NOT COIN EDGE nw_meet_sps_sides) nw_errs_sps_sides <= 0.235 OPPOSITE REGION
 err1 NOT INSIDE INST
}

Q: (NW OR DG) space, when the width <= 0.235um, expect INST region <= 0.365um
A: 
NW_S_2_f {
@ (NW OR DG) space, when the width <= 0.235um, expect INST region <= 0.365um
 nw_meet_wid_sides = INT [DG_or_NW] <= 0.235 ABUT<90 OPPOSITE
 nw_meet_sps_sides = EXT [DG_or_NW] <= 0.365 ABUT<90 OPPOSITE
 nw_errs_sps_sides = EXT (DG_or_NW) <= 0.365 ABUT<90 OPPOSITE
 err1 = INT (nw_meet_wid_sides NOT COIN EDGE nw_meet_sps_sides) nw_errs_sps_sides <= 0.235 OPPOSITE REGION
 err1 NOT INSIDE INST
}

VARIABLE NW_S_3a_val 0.248
VARIABLE NW_S_3a_PRL 0.255-GLOBAL_TOLERANCE

Q: Space between NWs when PRL >= 0.255um, except INST region >= 0.248um
A: 
NW_S_3a {
@ Space between NWs when PRL >= 0.255um, except INST region >= 0.248um
 nw_err_RAW = EXT [NW] < NW_S_3a_val ABUT<90 OPPOSITE
 nw_jog_ALL = (CONVEX EDGE NW == 1) NOT COIN EDGE nw_err_RAW
 nw_jog_EXP_a = EXPAND EDGE nw_jog_ALL INSIDE BY 0.0005
 nw_jog_EXP_b = EXPAND EDGE nw_jog_ALL OUTSIDE BY 0.0005
 nw_jog_TMP = (nw_jog_ALL COIN EDGE (nw_jog_EXP_a WITH EDGE nw_err_RAW)) COIN EDGE (nw_jog_EXP_b WITH EDGE nw_err_RAW)
 nw_jog_EXP = ((VERTEX (EXPAND EDGE nw_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE nw_err_RAW OUTSIDE BY 0.001)) NOT NW
 nw_err_PRL = DFM PROPERTY nw_jog_EXP nw_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(nw_err_RAW)] > NW_S_3a_PRL
 err1 = EXT (nw_err_RAW TOUCH EDGE nw_err_PRL) NW < NW_S_3a_val ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE INST
}

Q: Space between core NWs at different net, except INST region >= 0.38um
A: 
NW_S_4a {
@ Space between core NWs at different net, except INST region >= 0.38um
 err1 = EXT LVNW < 0.38 ABUT<90 SINGULAR REGION NOT CONNECTED
 err1 NOT INSIDE INST
}

VARIABLE NW_S_4b_val 0.475
VARIABLE NW_S_4b_PRL 0.365-GLOBAL_TOLERANCE

Q: Space between core NWs at different net when PRL >= 0.365um. >= 0.475um
A:  
NW_S_4b {
@ Space between core NWs at different net when PRL >= 0.365um. >= 0.475um
 err1_TMP_a = EXT (NW INTERACT LVNW) < NW_S_4b_val NOT CONNECTED OPPOSITE
 err1_TMP_b = EXT (NW INTERACT LVNW) < NW_S_4b_val NOT CONNECTED OPPOSITE REGION
//; err1 = DFM PROPERTY err1_TMP_b err1_TMP_a OVERLAP ABUT ALSO MULTI [-= EC(err1_TMP_a)] > NW_S_4b_PRL

 nw_wid_all = NW INTERACT LVNW
 nw_err_RAW = EXT [nw_wid_all] < NW_S_4b_val ABUT<90 NOT CONNECTED OPPOSITE
 nw_jog_ALL = (CONVEX EDGE nw_wid_all == 1) NOT COIN EDGE nw_err_RAW
 nw_jog_EXP_a = EXPAND EDGE nw_jog_ALL INSIDE BY 0.0005
 nw_jog_EXP_b = EXPAND EDGE nw_jog_ALL OUTSIDE BY 0.0005
 nw_jog_TMP = (nw_jog_ALL COIN EDGE (nw_jog_EXP_a WITH EDGE nw_err_RAW)) COIN EDGE (nw_jog_EXP_b WITH EDGE nw_err_RAW)
 nw_jog_EXP = ((VERTEX (EXPAND EDGE nw_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE nw_err_RAW OUTSIDE BY 0.001)) NOT nw_wid_all
 nw_err_PRL = DFM PROPERTY nw_jog_EXP nw_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(nw_err_RAW)] > NW_S_4b_PRL
 err1 = EXT (nw_err_RAW TOUCH EDGE nw_err_PRL) nw_wid_all < NW_S_4b_val ABUT<90 NOT CONNECTED OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between core NW and IO_NW at different net >= 0.896um
A: 
NW_S_4c {
@ Space between core NW and IO_NW at different net >= 0.896um
 err1 = EXT LVNW HVNW < 0.896 ABUT<90 SINGULAR REGION NOT CONNECTED
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between IO_NWs at different net >= 0.896um
A: 
NW_S_4d {
@ Space between IO_NWs at different net >= 0.896um
 err1 = EXT HVNW < 0.896 ABUT<90 SINGULAR REGION NOT CONNECTED
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between NW and DOP_AA (DOP_AA CUT NW is not allowed), except ((DOP_AA INSIDE DMCB1) NOT DMC1) >= 0.048um
A: 
NW_S_6a {
@ Space between NW and DOP_AA (DOP_AA CUT NW is not allowed), except ((DOP_AA INSIDE DMCB1) NOT DMC1) >= 0.048um
 chk_DOP_AA = DOP_AA NOT ((DOP_AA INSIDE DMCB1) NOT DMC1)
 err1 = EXT NW chk_DOP_AA < 0.048 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK

 err2 = NW INSIDE EDGE DOP_AA
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between NW and DOP_AA (AA vertical edge extend 1/2 GT width) in S/D direction (DOP_AA CUT NW is not allowed), except ((DOP_AA INSIDE DMCB1) NOT DMC1) >= 0.065um
A: 
NW_S_6b {
@ Space between NW and DOP_AA (AA vertical edge extend 1/2 GT width) in S/D direction (DOP_AA CUT NW is not allowed), except ((DOP_AA INSIDE DMCB1) NOT DMC1) >= 0.065um
 chk_DOP_AA = edge_gate_dopAA_all NOT ((edge_gate_dopAA_all INSIDE DMCB1) NOT DMC1)
 err1 = EXT NW_v_edges chk_DOP_AA < 0.065 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK

 err2 = NW INSIDE EDGE edge_gate_dopAA_all
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

//PSUB
Q: Space between two PSUBs >= 0.214um
A: 
PSUB_S_1 {
@ Space between two PSUBs >= 0.214um
 err1 = EXT PSUB < 0.214 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between PSUB and AA >= 0.34um
A: 
PSUB_S_2 {
@ Space between PSUB and AA >= 0.34um
 err1 = EXT PSUB AA < 0.34 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between PSUB and NW >= 0.718um
A: 
PSUB_S_3 {
@ Space between PSUB and NW >= 0.718um
 err1 = EXT PSUB NW < 0.718 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

//SVT_N
Q: Space between SVT_N, single-point-interaction is allowed >= 0.192um
    DRC waive:
    1) SVT_N one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction 
    3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
SVT_N_S_1 {
@ Space between SVT_N, single-point-interaction is allowed >= 0.192um
@ DRC waive:
@ 1) SVT_N one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction 
@ 3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = EXT [SVT_N] < 0.192 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = EXT [SVT_N] < 0.192 CORNER
 y3 = EXT [SVT_N_v_edges] >= 0.09 < 0.107 PROJ == 0
 y4 = EXT [SVT_N_v_edges] >= 0.18 < 0.213 PROJ == 0
 y5 = EXT [SVT_N_h_edges] >= 0.09 < 0.107 PROJ == 0
 y6 = EXT [SVT_N_h_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = (y3 OR EDGE y4) OR EDGE (y5 OR EDGE y6)
 w_all = SVT_N_rvs_90_90_jog_180_135_144 OR EDGE SVT_N_90_90_jog_180_135_144

 z1 = w_all COIN EDGE SVT_N_h_edges
 z2 = SVT_N_rvs COIN EDGE SVT_N_v_edges
 z3 = INT [z2] z1 < 0.005 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE z3
 err2 = (y2 COIN EDGE SVT_N_convex_corner) NOT COIN EDGE y_all
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between SVT_N in S/D direction, single-point-interaction is allowed >= 0.27um
    DRC waive:
    1) SVT_N one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
    3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
SVT_N_S_2 {
@ Space between SVT_N in S/D direction, single-point-interaction is allowed >= 0.27um
@ DRC waive:
@ 1) SVT_N one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 w_all = SVT_N_90_90_jog_180_192_225_240_135_144 OR EDGE SVT_N_rvs_90_90_jog_180_192_225_240_135_144
 y1 = ANGLE (EXT [SVT_N] < 0.27 ABUT<90 OPPOSITE EXTENDED 0.001) == 90
 y2 = EXT [SVT_N_v_edges] >= 0.09 < 0.107 PROJ == 0
 y3 = EXT [SVT_N_v_edges] >= 0.18 < 0.213 PROJ == 0
 y4 = y2 OR EDGE y3

 z1 = ANGLE SVT_N_rvs == 0
 z2 = w_all COIN EDGE z1
 z3 = ANGLE SVT_N_rvs == 90
 z4 = INT [z3] z2 < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y4) NOT TOUCH EDGE z4
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between SVT_N in S/D direction, when just one SVT_N vertical edge CUT (GTMK1 OR AR) and abut LVT_N or ULVT_N >= 0.315um
    DRC waive:
    1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
    2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
SVT_N_S_3a {
@ Space between SVT_N in S/D direction, when just one SVT_N vertical edge CUT (GTMK1 OR AR) and abut LVT_N or ULVT_N >= 0.315um
@ DRC waive:
@ 1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 check_edges = (SVT_N_inside_AA_side_mark_v_edges TOUCH EDGE LVT_N) OR EDGE (SVT_N_inside_AA_side_mark_v_edges TOUCH EDGE ULVT_N)
 waive_corner = EXT SVT_N_270_270_jog_180_192_225_240_135_144_h_edges check_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = check_edges NOT TOUCH EDGE waive_corner
 err1 = EXT check_corner SVT_N_v_edges < 0.315 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_N in S/D direction, when both SVT_N vertical edge CUT (GTMK1 OR AR) and abut LVT_N or ULVT_N >= 0.36um
    DRC waive:
    1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
    2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
SVT_N_S_3b {
@ Space between SVT_N in S/D direction, when both SVT_N vertical edge CUT (GTMK1 OR AR) and abut LVT_N or ULVT_N >= 0.36um
@ DRC waive:
@ 1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 check_edges = (SVT_N_inside_AA_side_mark_v_edges TOUCH EDGE LVT_N) OR EDGE (SVT_N_inside_AA_side_mark_v_edges TOUCH EDGE ULVT_N)
 waive_corner = EXT SVT_N_270_270_jog_180_192_225_240_135_144_h_edges check_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = check_edges NOT TOUCH EDGE waive_corner
 err1 = EXT check_corner < 0.36 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_N when PRL >= 0.29um. >= 0.248um
A: 
SVT_N_S_4 {
@ Space between SVT_N when PRL >= 0.29um. >= 0.248um
 Layer_area = EXT SVT_N < 0.248 OPPOSITE REGION
 err1 = Layer_area ENCLOSE RECTANGLE 0.001 0.29 ORTHOGONAL ONLY
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: SVT_N space in GATE poly direction when SVT_N point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um in GATE poly direction >= 0.238um
A: 
SVT_N_S_5 {
@ SVT_N space in GATE poly direction when SVT_N point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um in GATE poly direction >= 0.238um
 err1 = EXT SVT_N_h_edges_singular_point SVT_N_h_edges < 0.238 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK

 y1 = SVT_N_convex_eqlt_1_edges COIN EDGE SVT_N_h_edges
 y2 = SVT_N COIN EDGE (EXPAND EDGE (y1 COIN EDGE SVT_N_concave_corner) INSIDE BY 0.001 OUTSIDE BY 0.001)
 y3 = INT [y2] >= 0.09 <= 0.106+0.0005 ABUT<90 PROJ == 0
 y4 = INT [y2] >= 0.18 <= 0.212+0.0005 ABUT<90 PROJ == 0
 y5 = SVT_N_concave_corner WITH EDGE (SVT_N_concave_corner COIN EDGE (y3 OR EDGE y4))
 y6 = SVT_N_h_edges TOUCH EDGE y5
 err2 = EXT SVT_N_h_edges y6 < 0.238 ABUT<90 OPPOSITE REGION
 err3 = (LENGTH ((SVT_N_v_edges TOUCH EDGE y5) TOUCH EDGE SVT_N_convex_eq_0_edges) < 0.238) EXPAND EDGE INSIDE BY 0.002
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_N and ALL_AA (vertical edge abut AA edge is allowed) >= 0.045um
A: 
SVT_N_S_6 {
@ Space between SVT_N and ALL_AA (vertical edge abut AA edge is allowed) >= 0.045um
 CHECK_RAW = EXT SVT_N ALL_AA < 0.045 ABUT<90 SINGULAR
 WAIVE_CRN = SVT_N COIN OUTSIDE EDGE ALL_AA_v_edges
 err1 = DFM COPY (DFM PROPERTY CHECK_RAW WAIVE_CRN ABUT ALSO OVERLAP MULTI SPLIT [-= count(WAIVE_CRN)] == 0) REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_N and ALL_AA in GATE poly direction >= 0.048um
A: 
SVT_N_S_6a {
@ Space between SVT_N and ALL_AA in GATE poly direction >= 0.048um
 err1 = EXT SVT_N ALL_AA_h_edges < 0.048 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_N and (ALL_GT NOT P2) (ALL_GT width < 0.07um), except small ALL_GT jogs <= 0.004um. >= 0.024um
A: 
SVT_N_S_7 {
@ Space between SVT_N and (ALL_GT NOT P2) (ALL_GT width < 0.07um), except small ALL_GT jogs <= 0.004um. >= 0.024um
 err1 = EXT SVT_N ALL_GT_NOT_P2_not_jog_lteq_004 < 0.024 ABUT<90 REGION MEASURE ALL  //;minimum
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_N and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) >= 0.034um
A: 
SVT_N_S_7a {
@ Space between SVT_N and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) >= 0.034um
 err1 = EXT SVT_N (ALL_GT_eqgt_070 NOT P2) < 0.034 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_N and (ALL_GT NOT P2) (ALL_GT width > 0.09um) >= 0.058um
A: 
SVT_N_S_7b {
@ Space between SVT_N and (ALL_GT NOT P2) (ALL_GT width > 0.09um) >= 0.058um
 err1 = EXT SVT_N ALL_GT_NOT_P2_gt_090 < 0.058 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_N and (ALL_GT NOT P2) (ALL_GT width < 0.07um) in S/D direction >= 0.035um
A: 
SVT_N_S_8 {
@ Space between SVT_N and (ALL_GT NOT P2) (ALL_GT width < 0.07um) in S/D direction >= 0.035um
 err1 = EXT ALL_GT_NOT_P2 SVT_N_v_edges < 0.035 ABUT<90 OPPOSITE REGION  //;minimum
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_N and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) in S/D direction >= 0.058um
A: 
SVT_N_S_8a {
@ Space between SVT_N and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) in S/D direction >= 0.058um
 err1 = EXT SVT_N_v_edges ALL_GT_NOT_P2_eqgt_070 < 0.058 ABUT<90 OPPOSITE REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_N and GATE (when channel length = 0.016/0.018/0.02um) in S/D direction (GATE CUT SVT_N is not allowed), except GT_P96 region >= 0.082/0.081/0.08um
A: 
SVT_N_S_9a {
@ Space between SVT_N and GATE (when channel length = 0.016/0.018/0.02um) in S/D direction (GATE CUT SVT_N is not allowed), except GT_P96 region >= 0.082/0.081/0.08um
 err1 = DFM COPY (DFM SPACE GATE_LE_16 SVT_N < 0.082 BY EXT HORIZONTAL MEASURE ALL) REGION
 err2 = DFM COPY (DFM SPACE GATE_LE_18 SVT_N < 0.081 BY EXT HORIZONTAL MEASURE ALL) REGION
 err3 = DFM COPY (DFM SPACE GATE_LE_20 SVT_N < 0.080 BY EXT HORIZONTAL MEASURE ALL) REGION
 err4 = GATE CUT SVT_N

 err1 NOT INSIDE GT_P96
 err2 NOT INSIDE GT_P96
 err3 NOT INSIDE GT_P96
 err4 NOT INSIDE GT_P96
}

Q: Space between SVT_N and GATE (when channel length = 0.016/0.018/0.02/0.022/0.024um, INSIDE GT_P96) in S/D direction (GATE CUT SVT_N is not allowed) >= 0.088/0.087/0.086/0.085/0.084um
A: 
SVT_N_S_9b {
@ Space between SVT_N and GATE (when channel length = 0.016/0.018/0.02/0.022/0.024um, INSIDE GT_P96) in S/D direction (GATE CUT SVT_N is not allowed) >= 0.088/0.087/0.086/0.085/0.084um
 err1 = DFM COPY (DFM SPACE GATE_LE_16_in_GT_P96 SVT_N < 0.088 BY EXT HORIZONTAL MEASURE ALL) REGION
 err2 = DFM COPY (DFM SPACE GATE_LE_18_in_GT_P96 SVT_N < 0.087 BY EXT HORIZONTAL MEASURE ALL) REGION
 err3 = DFM COPY (DFM SPACE GATE_LE_20_in_GT_P96 SVT_N < 0.086 BY EXT HORIZONTAL MEASURE ALL) REGION
 err4 = DFM COPY (DFM SPACE GATE_LE_22_in_GT_P96 SVT_N < 0.085 BY EXT HORIZONTAL MEASURE ALL) REGION
 err5 = DFM COPY (DFM SPACE GATE_LE_24_in_GT_P96 SVT_N < 0.084 BY EXT HORIZONTAL MEASURE ALL) REGION
 err6 = GATE CUT SVT_N

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
 err6 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_N vertical edge (edge length <= 0.238um between two concave corners with both sides length >= 0.09um) and ((GT AND GTMK1) OR GATE) in S/D direction >= 0.079um
A: 
SVT_N_S_10 {
@ Space between SVT_N vertical edge (edge length <= 0.238um between two concave corners with both sides length >= 0.09um) and ((GT AND GTMK1) OR GATE) in S/D direction >= 0.079um
 check_RAW = CONVEX EDGE SVT_N ANGLE1 == 270 LENGTH1 >= 0.09 ANGLE2 == 270 LENGTH2 >= 0.09 WITH LENGTH <= 0.238
 check_TMP = ANGLE check_RAW == 90
 err1 = EXT (OR GATE_raw GT_and_GTMK1) check_TMP < 0.079 ABUT<90 OPPOSITE REGION  //;including edge GATE
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_N and (ALL_GT NOT P2) in GATE poly direction with adjacent horizontal space to (ALL_GT NOT P2) <= 0.04um (SVT_N vertical edge length = 0.073~0.15um, between two consecutive 90-270 degree coners) >= 0.054um
A: 
SVT_N_S_11 {
@ Space between SVT_N and (ALL_GT NOT P2) in GATE poly direction with adjacent horizontal space to (ALL_GT NOT P2) <= 0.04um (SVT_N vertical edge length = 0.073~0.15um, between two consecutive 90-270 degree coners) >= 0.054um
 y1 = EXT [ALL_GT_NOT_P2] SVT_N_convex_90_270_eqgt_073_lteq_150_v_edges <= 0.040 ABUT<90 OPPOSITE
 y2 = EXT [SVT_N_h_edges] SVT_N_convex_90_270_eqgt_073_lteq_150_v_edges < 0.005 ABUT==90 INTERSECTING ONLY

 z1 = SVT_N_h_edges TOUCH EDGE y2
 z2 = EXT ALL_GT_NOT_P2 z1 < 0.054 ABUT<90 OPPOSITE REGION
 z3 = EXPAND EDGE y1 INSIDE BY 0.005 EXTEND BY 0.005
 err1 = z2 INTERACT z3
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, LFN_N, LFN_P, ULVT_N and ULVT_P inside GT in GATE poly direction when PRL = 0um, and at least one vertical edge CUT (GTMK1 OR AR)) = 0um
    DRC flags if more than one Vt horizontal edge inside (((GT NOT P2) INTERACT (GTMK1 OR AR)) NOT (AA OR GTMK1)))
A: 
SVT_N_S_12 {
@ Space between SVT_N, SVT_P, LVT_N, LVT_P, HVT_N, HVT_P, LFN_N, LFN_P, ULVT_N and ULVT_P inside GT in GATE poly direction when PRL = 0um, and at least one vertical edge CUT (GTMK1 OR AR)) = 0um
@ DRC flags if more than one Vt horizontal edge inside (((GT NOT P2) INTERACT (GTMK1 OR AR)) NOT (AA OR GTMK1)))
 AE1 = GT_0 INTERACT gtmk1_or_ar
 AE2_SVT_N = EXPAND EDGE (SVT_N_v_edges TOUCH EDGE SVT_N_inside_AA_side_mark_v_edges) INSIDE BY 0.001 OUTSIDE BY 0.001
 AE2_SVT_P = EXPAND EDGE (SVT_P_v_edges TOUCH EDGE SVT_P_inside_AA_side_mark_v_edges) INSIDE BY 0.001 OUTSIDE BY 0.001
 AE2_LVT_N = EXPAND EDGE (LVT_N_v_edges TOUCH EDGE LVT_N_inside_AA_side_mark_v_edges) INSIDE BY 0.001 OUTSIDE BY 0.001
 AE2_LVT_P = EXPAND EDGE (LVT_P_v_edges TOUCH EDGE LVT_P_inside_AA_side_mark_v_edges) INSIDE BY 0.001 OUTSIDE BY 0.001
 AE2_HVT_N = EXPAND EDGE (HVT_N_v_edges TOUCH EDGE HVT_N_inside_AA_side_mark_v_edges) INSIDE BY 0.001 OUTSIDE BY 0.001
 AE2_HVT_P = EXPAND EDGE (HVT_P_v_edges TOUCH EDGE HVT_P_inside_AA_side_mark_v_edges) INSIDE BY 0.001 OUTSIDE BY 0.001
 AE2_LFN_N = EXPAND EDGE (LFN_N_v_edges TOUCH EDGE LFN_N_inside_AA_side_mark_v_edges) INSIDE BY 0.001 OUTSIDE BY 0.001
 AE2_LFN_P = EXPAND EDGE (LFN_P_v_edges TOUCH EDGE LFN_P_inside_AA_side_mark_v_edges) INSIDE BY 0.001 OUTSIDE BY 0.001
 AE2_ULVT_N = EXPAND EDGE (ULVT_N_v_edges TOUCH EDGE ULVT_N_inside_AA_side_mark_v_edges) INSIDE BY 0.001 OUTSIDE BY 0.001
 AE2_ULVT_P = EXPAND EDGE (ULVT_P_v_edges TOUCH EDGE ULVT_P_inside_AA_side_mark_v_edges) INSIDE BY 0.001 OUTSIDE BY 0.001
 AE2 = OR AE2_SVT_N AE2_SVT_P AE2_LVT_N AE2_LVT_P AE2_HVT_N AE2_HVT_P AE2_LFN_N AE2_LFN_P AE2_ULVT_N AE2_ULVT_P
 AE3 = (AE1 INTERACT AE2) NOT (OR AA gtmk1_or_ar)

 W11 = ANGLE (SVT_N INSIDE EDGE AE3) == 0
 W12 = ANGLE (SVT_P INSIDE EDGE AE3) == 0
 W13 = ANGLE (LVT_N INSIDE EDGE AE3) == 0
 W14 = ANGLE (LVT_P INSIDE EDGE AE3) == 0
 W15 = ANGLE (HVT_N INSIDE EDGE AE3) == 0
 W16 = ANGLE (HVT_P INSIDE EDGE AE3) == 0
 W17 = ANGLE (LFN_N INSIDE EDGE AE3) == 0
 W18 = ANGLE (LFN_P INSIDE EDGE AE3) == 0
 W19 = ANGLE (ULVT_N INSIDE EDGE AE3) == 0
 W20 = ANGLE (ULVT_P INSIDE EDGE AE3) == 0

 y11 = EXPAND EDGE W11 INSIDE BY 0.001
 y12 = EXPAND EDGE W12 INSIDE BY 0.001
 y13 = EXPAND EDGE W13 INSIDE BY 0.001
 y14 = EXPAND EDGE W14 INSIDE BY 0.001
 y15 = EXPAND EDGE W15 INSIDE BY 0.001
 y16 = EXPAND EDGE W16 INSIDE BY 0.001
 y17 = EXPAND EDGE W17 INSIDE BY 0.001
 y18 = EXPAND EDGE W18 INSIDE BY 0.001
 y19 = EXPAND EDGE W19 INSIDE BY 0.001
 y20 = EXPAND EDGE W20 INSIDE BY 0.001

 w_all = OR y11 y12 y13 y14 y15 y16 y17 y18 y19 y20
 err1 = w_all INTERACT (AE3 ENCLOSE w_all >= 2)
 err2 = NOT RECTANGLE w_all
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

//SVT_P

Q: Space between SVT_P, single-point-interaction is allowed >= 0.192um
    DRC waive:
    1) SVT_P one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
    3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
SVT_P_S_1 {
@ Space between SVT_P, single-point-interaction is allowed >= 0.192um
@ DRC waive:
@ 1) SVT_P one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
@ 3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = EXT [SVT_P] < 0.192 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = EXT [SVT_P] < 0.192 CORNER
 y3 = EXT [SVT_P_v_edges] >= 0.09 < 0.107 PROJ == 0
 y4 = EXT [SVT_P_v_edges] >= 0.18 < 0.213 PROJ == 0
 y5 = EXT [SVT_P_h_edges] >= 0.09 < 0.107 PROJ == 0
 y6 = EXT [SVT_P_h_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = (y3 OR EDGE y4) OR EDGE (y5 OR EDGE y6)
 w_all = SVT_P_rvs_90_90_jog_180_135_144 OR EDGE SVT_P_90_90_jog_180_135_144

 z1 = w_all COIN EDGE SVT_P_h_edges
 z2 = SVT_P_rvs COIN EDGE SVT_P_v_edges
 z3 = INT [z2] z1 < 0.005 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE z3
 err2 = (y2 COIN EDGE SVT_P_convex_corner) NOT COIN EDGE y_all
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between SVT_P in S/D direction, single-point-interaction is allowed >= 0.27um
    DRC waive:
     1) SVT_P one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
     2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
    3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
SVT_P_S_2 {
@ Space between SVT_P in S/D direction, single-point-interaction is allowed >= 0.27um
@ DRC waive:
@ 1) SVT_P one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 w_all = SVT_P_90_90_jog_180_192_225_240_135_144 OR EDGE SVT_P_rvs_90_90_jog_180_192_225_240_135_144
 y1 = ANGLE (EXT [SVT_P] < 0.27 ABUT<90 OPPOSITE EXTENDED 0.001) == 90
 y2 = EXT [SVT_P_v_edges] >= 0.09 < 0.107 PROJ == 0
 y3 = EXT [SVT_P_v_edges] >= 0.18 < 0.213 PROJ == 0
 y4 = y2 OR EDGE y3

 z1 = ANGLE SVT_P_rvs == 0
 z2 = w_all COIN EDGE z1
 z3 = ANGLE SVT_P_rvs == 90
 z4 = INT [z3] z2 < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y4) NOT TOUCH EDGE z4
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q:  Space between SVT_P in S/D direction, when just one SVT_P vertical edge CUT (GTMK1 OR AR) and abut LVT_P or ULVT_P >= 0.315um
     DRC waive:
     1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
     2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
SVT_P_S_3a {
@ Space between SVT_P in S/D direction, when just one SVT_P vertical edge CUT (GTMK1 OR AR) and abut LVT_P or ULVT_P >= 0.315um
@ DRC waive:
@ 1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 check_edges = (SVT_P_inside_AA_side_mark_v_edges TOUCH EDGE LVT_P) OR EDGE (SVT_P_inside_AA_side_mark_v_edges TOUCH EDGE ULVT_P)
 waive_corner = EXT SVT_P_270_270_jog_180_192_225_240_135_144_h_edges check_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = check_edges NOT TOUCH EDGE waive_corner
 err1 = EXT check_corner SVT_P_v_edges < 0.315 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_P in S/D direction, when both SVT_P’s vertical edges CUT (GTMK1 OR AR) and abut LVT_P or ULVT_P >= 0.36um
    DRC waive:
     1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
     2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
SVT_P_S_3b {
@ Space between SVT_P in S/D direction, when both SVT_P’s vertical edges CUT (GTMK1 OR AR) and abut LVT_P or ULVT_P >= 0.36um
@ DRC waive:
@ 1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 check_edges = (SVT_P_inside_AA_side_mark_v_edges TOUCH EDGE LVT_P) OR EDGE (SVT_P_inside_AA_side_mark_v_edges TOUCH EDGE ULVT_P)
 waive_corner = EXT SVT_P_270_270_jog_180_192_225_240_135_144_h_edges check_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = check_edges NOT TOUCH EDGE waive_corner
 err1 = EXT check_corner < 0.36 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_P when PRL >= 0.29um. >= 0.248um
A: 
SVT_P_S_4 {
@ Space between SVT_P when PRL >= 0.29um. >= 0.248um
 Layer_area = EXT SVT_P < 0.248 OPPOSITE REGION
 err1 = Layer_area ENCLOSE RECTANGLE 0.001 0.29 ORTHOGONAL ONLY
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: SVT_P space in GATE poly direction when SVT_P point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction >= 0.238um
A: 
SVT_P_S_5 {
@ SVT_P space in GATE poly direction when SVT_P point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction >= 0.238um
 err1 = EXT SVT_P_h_edges_singular_point SVT_P_h_edges < 0.238 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK

 y1 = SVT_P_convex_eqlt_1_edges COIN EDGE SVT_P_h_edges
 y2 = SVT_P COIN EDGE (EXPAND EDGE (y1 COIN EDGE SVT_P_concave_corner) INSIDE BY 0.001 OUTSIDE BY 0.001)
 y3 = INT [y2] >= 0.09 <= 0.106+0.0005 ABUT<90 PROJ == 0
 y4 = INT [y2] >= 0.18 <= 0.212+0.0005 ABUT<90 PROJ == 0
 y5 = SVT_P_concave_corner WITH EDGE (SVT_P_concave_corner COIN EDGE (y3 OR EDGE y4))
 y6 = SVT_P_h_edges TOUCH EDGE y5
 err2 = EXT SVT_P_h_edges y6 < 0.238 ABUT<90 OPPOSITE REGION
 err3 = (LENGTH ((SVT_P_v_edges TOUCH EDGE y5) TOUCH EDGE SVT_P_convex_eq_0_edges) < 0.238) EXPAND EDGE INSIDE BY 0.002
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_P and ALL_AA (vertical edge abut AA edge is allowed) >= 0.045um
A: 
SVT_P_S_6 {
@ Space between SVT_P and ALL_AA (vertical edge abut AA edge is allowed) >= 0.045um
 CHECK_RAW = EXT SVT_P ALL_AA < 0.045 ABUT<90 SINGULAR
 WAIVE_CRN = SVT_P COIN OUTSIDE EDGE ALL_AA_v_edges
 err1 = DFM COPY (DFM PROPERTY CHECK_RAW WAIVE_CRN ABUT ALSO OVERLAP MULTI SPLIT [-= count(WAIVE_CRN)] == 0) REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_P and ALL_AA in GATE poly direction >= 0.048um
A: 
SVT_P_S_6a {
@ Space between SVT_P and ALL_AA in GATE poly direction >= 0.048um
 err1 = EXT SVT_P ALL_AA_h_edges < 0.048 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_P and (ALL_GT NOT P2) (ALL_GT width < 0.07um), except small ALL_GT jog <= 0.004um. >= 0.024um
A: 
SVT_P_S_7 {
@ Space between SVT_P and (ALL_GT NOT P2) (ALL_GT width < 0.07um), except small ALL_GT jog <= 0.004um. >= 0.024um
 err1 = EXT SVT_P ALL_GT_NOT_P2_not_jog_lteq_004 < 0.024 ABUT<90 REGION MEASURE ALL  //;minimum
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_P and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) >= 0.034um
A: 
SVT_P_S_7a {
@ Space between SVT_P and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) >= 0.034um
 err1 = EXT SVT_P (ALL_GT_eqgt_070 NOT P2) < 0.034 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_P and (ALL_GT NOT P2) (ALL_GT width > 0.09um) >= 0.058um
A: 
SVT_P_S_7b {
@ Space between SVT_P and (ALL_GT NOT P2) (ALL_GT width > 0.09um) >= 0.058um
 err1 = EXT SVT_P ALL_GT_NOT_P2_gt_090 < 0.058 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_P and (ALL_GT NOT P2) (ALL_GT width < 0.07um) in S/D direction >= 0.035um
A: 
SVT_P_S_8 {
@ Space between SVT_P and (ALL_GT NOT P2) (ALL_GT width < 0.07um) in S/D direction >= 0.035um
 err1 = EXT ALL_GT_NOT_P2 SVT_P_v_edges < 0.035 ABUT<90 OPPOSITE REGION  //;minimum
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_P and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) in S/D direction >= 0.058um
A: 
SVT_P_S_8a {
@ Space between SVT_P and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) in S/D direction >= 0.058um
 err1 = EXT SVT_P_v_edges ALL_GT_NOT_P2_eqgt_070 < 0.058 ABUT<90 OPPOSITE REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_P and GATE (when channel length = 0.016/0.018/0.02um) respectively in S/D direction, (GATE CUT SVT_P is not allowed), except GT_P96 region >= 0.082/0.081/0.08um
A: 
SVT_P_S_9a {
@ Space between SVT_P and GATE (when channel length = 0.016/0.018/0.02um) respectively in S/D direction, (GATE CUT SVT_P is not allowed), except GT_P96 region >= 0.082/0.081/0.08um
 err1 = DFM COPY (DFM SPACE GATE_LE_16 SVT_P < 0.082 BY EXT HORIZONTAL MEASURE ALL) REGION
 err2 = DFM COPY (DFM SPACE GATE_LE_18 SVT_P < 0.081 BY EXT HORIZONTAL MEASURE ALL) REGION
 err3 = DFM COPY (DFM SPACE GATE_LE_20 SVT_P < 0.080 BY EXT HORIZONTAL MEASURE ALL) REGION
 err4 = GATE CUT SVT_P

 err1 NOT INSIDE GT_P96
 err2 NOT INSIDE GT_P96
 err3 NOT INSIDE GT_P96
 err4 NOT INSIDE GT_P96
}

Q: Space between SVT_P and GATE (when channel length = 0.016/0.018/0.02/0.022/0.024um, INSIDE GT_P96) in S/D direction (GATE CUT SVT_P is not allowed) >= 0.088/0.087/0.086/0.085/0.084um
A: 
SVT_P_S_9b {
@ Space between SVT_P and GATE (when channel length = 0.016/0.018/0.02/0.022/0.024um, INSIDE GT_P96) in S/D direction (GATE CUT SVT_P is not allowed) >= 0.088/0.087/0.086/0.085/0.084um
 err1 = DFM COPY (DFM SPACE GATE_LE_16_in_GT_P96 SVT_P < 0.088 BY EXT HORIZONTAL MEASURE ALL) REGION
 err2 = DFM COPY (DFM SPACE GATE_LE_18_in_GT_P96 SVT_P < 0.087 BY EXT HORIZONTAL MEASURE ALL) REGION
 err3 = DFM COPY (DFM SPACE GATE_LE_20_in_GT_P96 SVT_P < 0.086 BY EXT HORIZONTAL MEASURE ALL) REGION
 err4 = DFM COPY (DFM SPACE GATE_LE_22_in_GT_P96 SVT_P < 0.085 BY EXT HORIZONTAL MEASURE ALL) REGION
 err5 = DFM COPY (DFM SPACE GATE_LE_24_in_GT_P96 SVT_P < 0.084 BY EXT HORIZONTAL MEASURE ALL) REGION
 err6 = GATE CUT SVT_P

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
 err6 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_P vertical edge (edge length <= 0.238um between two concave corners with both sides length >= 0.09um) and ((GT AND GTMK1) OR GATE) in S/D direction >= 0.079um
A: 
SVT_P_S_10 {
@ Space between SVT_P vertical edge (edge length <= 0.238um between two concave corners with both sides length >= 0.09um) and ((GT AND GTMK1) OR GATE) in S/D direction >= 0.079um
 check_RAW = CONVEX EDGE SVT_P ANGLE1 == 270 LENGTH1 >= 0.09 ANGLE2 == 270 LENGTH2 >= 0.09 WITH LENGTH <= 0.238
 check_TMP = ANGLE check_RAW == 90
 err1 = EXT (OR GATE_raw GT_and_GTMK1) check_TMP < 0.079 ABUT<90 OPPOSITE REGION  //;including edge GATE
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SVT_P and (ALL_GT NOT P2) in GATE poly direction with adjacent horizontal space <= 0.04um (SVT_P vertical edge length = 0.073~0.15um, between two consecutive 90-270 degree coners) >= 0.054um
A: 
SVT_P_S_11 {
@ Space between SVT_P and (ALL_GT NOT P2) in GATE poly direction with adjacent horizontal space <= 0.04um (SVT_P vertical edge length = 0.073~0.15um, between two consecutive 90-270 degree coners) >= 0.054um
 y1 = EXT [ALL_GT_NOT_P2] SVT_P_convex_90_270_eqgt_073_lteq_150_v_edges <= 0.040 ABUT<90 OPPOSITE
 y2 = EXT [SVT_P_h_edges] SVT_P_convex_90_270_eqgt_073_lteq_150_v_edges < 0.005 ABUT==90 INTERSECTING ONLY

 z1 = SVT_P_h_edges TOUCH EDGE y2
 z2 = EXT ALL_GT_NOT_P2 z1 < 0.054 ABUT<90 OPPOSITE REGION
 z3 = EXPAND EDGE y1 INSIDE BY 0.005 EXTEND BY 0.005
 err1 = z2 INTERACT z3
 err1 NOT INSIDE SealR_NOT_BULK
}

//HVT_N

Q: Space between HVT_N, single-point-interaction is allowed >= 0.192um
     DRC waive:
     1) HVT_N one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
     2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
     3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
HVT_N_S_1 {
@ Space between HVT_N, single-point-interaction is allowed >= 0.192um
@ DRC waive:
@ 1) HVT_N one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
@ 3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = EXT [HVT_N] < 0.192 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = EXT [HVT_N] < 0.192 CORNER
 y3 = EXT [HVT_N_v_edges] >= 0.09 < 0.107 PROJ == 0
 y4 = EXT [HVT_N_v_edges] >= 0.18 < 0.213 PROJ == 0
 y5 = EXT [HVT_N_h_edges] >= 0.09 < 0.107 PROJ == 0
 y6 = EXT [HVT_N_h_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = (y3 OR EDGE y4) OR EDGE (y5 OR EDGE y6)
 w_all = HVT_N_rvs_90_90_jog_180_135_144 OR EDGE HVT_N_90_90_jog_180_135_144

 z1 = w_all COIN EDGE HVT_N_h_edges
 z2 = HVT_N_rvs COIN EDGE HVT_N_v_edges
 z3 = INT [z2] z1 < 0.005 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE z3
 err2 = (y2 COIN EDGE HVT_N_convex_corner) NOT COIN EDGE y_all
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between HVT_N in S/D direction, single-point-interaction is allowed >= 0.27um
    DRC waive:
    1) HVT_N one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
    3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
HVT_N_S_2 {
@ Space between HVT_N in S/D direction, single-point-interaction is allowed >= 0.27um
@ DRC waive:
@ 1) HVT_N one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 w_all = HVT_N_90_90_jog_180_192_225_240_135_144 OR EDGE HVT_N_rvs_90_90_jog_180_192_225_240_135_144
 y1 = ANGLE (EXT [HVT_N] < 0.27 ABUT<90 OPPOSITE EXTENDED 0.001) == 90
 y2 = EXT [HVT_N_v_edges] >= 0.09 < 0.107 PROJ == 0
 y3 = EXT [HVT_N_v_edges] >= 0.18 < 0.213 PROJ == 0
 y4 = y2 OR EDGE y3

 z1 = ANGLE HVT_N_rvs == 0
 z2 = w_all COIN EDGE z1
 z3 = ANGLE HVT_N_rvs == 90
 z4 = INT [z3] z2 < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y4) NOT TOUCH EDGE z4
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between HVT_N in S/D direction, when just one HVT_N’s vertical edge CUT (GTMK1 OR AR) >= 0.315um
     DRC waive:
    1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
    2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
HVT_N_S_3a {
@ Space between HVT_N in S/D direction, when just one HVT_N’s vertical edge CUT (GTMK1 OR AR) >= 0.315um
@ DRC waive:
@ 1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 waive_corner = EXT HVT_N_270_270_jog_180_192_225_240_135_144_h_edges HVT_N_v_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = HVT_N_inside_AA_side_mark_v_edges NOT TOUCH EDGE waive_corner
 err1 = EXT check_corner HVT_N_v_edges < 0.315 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_N in S/D direction, when both HVT_N’s vertical edge CUT (GTMK1 OR AR) >= 0.36um
     DRC waive:
    1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
    2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
HVT_N_S_3b {
@ Space between HVT_N in S/D direction, when both HVT_N’s vertical edge CUT (GTMK1 OR AR) >= 0.36um
@ DRC waive:
@ 1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 waive_corner = EXT HVT_N_270_270_jog_180_192_225_240_135_144_h_edges HVT_N_v_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = HVT_N_inside_AA_side_mark_v_edges NOT TOUCH EDGE waive_corner
 err1 = EXT check_corner < 0.36 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_N when PRL >= 0.29um. >= 0.248um
A: 
HVT_N_S_4 {
@ Space between HVT_N when PRL >= 0.29um. >= 0.248um
 Layer_area = EXT HVT_N < 0.248 OPPOSITE REGION
 err1 = Layer_area ENCLOSE RECTANGLE 0.001 0.29 ORTHOGONAL ONLY
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: HVT_N space in GATE poly direction when HVT_N point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction >= 0.238um
A: 
HVT_N_S_5 {
@ HVT_N space in GATE poly direction when HVT_N point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction >= 0.238um
 err1 = EXT HVT_N_h_edges_singular_point HVT_N_h_edges < 0.238 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK

 y1 = HVT_N_convex_eqlt_1_edges COIN EDGE HVT_N_h_edges
 y2 = HVT_N COIN EDGE (EXPAND EDGE (y1 COIN EDGE HVT_N_concave_corner) INSIDE BY 0.001 OUTSIDE BY 0.001)
 y3 = INT [y2] >= 0.09 <= 0.106+0.0005 ABUT<90 PROJ == 0
 y4 = INT [y2] >= 0.18 <= 0.212+0.0005 ABUT<90 PROJ == 0
 y5 = HVT_N_concave_corner WITH EDGE (HVT_N_concave_corner COIN EDGE (y3 OR EDGE y4))
 y6 = HVT_N_h_edges TOUCH EDGE y5
 err2 = EXT HVT_N_h_edges y6 < 0.238 ABUT<90 OPPOSITE REGION
 err3 = (LENGTH ((HVT_N_v_edges TOUCH EDGE y5) TOUCH EDGE HVT_N_convex_eq_0_edges) < 0.238) EXPAND EDGE INSIDE BY 0.002
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_N and ALL_AA (vertical edge abut AA edge is allowed) >= 0.045um
A: 
HVT_N_S_6 {
@ Space between HVT_N and ALL_AA (vertical edge abut AA edge is allowed) >= 0.045um
 CHECK_RAW = EXT HVT_N ALL_AA < 0.045 ABUT<90 SINGULAR
 WAIVE_CRN = HVT_N COIN OUTSIDE EDGE ALL_AA_v_edges
 err1 = DFM COPY (DFM PROPERTY CHECK_RAW WAIVE_CRN ABUT ALSO OVERLAP MULTI SPLIT [-= count(WAIVE_CRN)] == 0) REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_N and ALL_AA in GATE poly direction >= 0.048um
A: 
HVT_N_S_6a {
@ Space between HVT_N and ALL_AA in GATE poly direction >= 0.048um
 err1 = EXT HVT_N ALL_AA_h_edges < 0.048 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_N and (ALL_GT NOT P2) (ALL_GT width < 0.07um), except small ALL_GT jogs <= 0.004um. >= 0.024um
A: 
HVT_N_S_7 {
@ Space between HVT_N and (ALL_GT NOT P2) (ALL_GT width < 0.07um), except small ALL_GT jogs <= 0.004um. >= 0.024um
 err1 = EXT HVT_N ALL_GT_NOT_P2_not_jog_lteq_004 < 0.024 ABUT<90 REGION MEASURE ALL  //;minimum
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_N and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) >= 0.034um
A: 
HVT_N_S_7a {
@ Space between HVT_N and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) >= 0.034um
 err1 = EXT HVT_N (ALL_GT_eqgt_070 NOT P2) < 0.034 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_N and (ALL_GT NOT P2) (ALL_GT width > 0.09um) >= 0.058um
A: 
HVT_N_S_7b {
@ Space between HVT_N and (ALL_GT NOT P2) (ALL_GT width > 0.09um) >= 0.058um
 err1 = EXT HVT_N ALL_GT_NOT_P2_gt_090 < 0.058 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_N and (ALL_GT NOT P2) (ALL_GT width < 0.07um) in S/D direction >= 0.035um
A: 
HVT_N_S_8 {
@ Space between HVT_N and (ALL_GT NOT P2) (ALL_GT width < 0.07um) in S/D direction >= 0.035um
 err1 = EXT ALL_GT_NOT_P2 HVT_N_v_edges < 0.035 ABUT<90 OPPOSITE REGION  //;minimum
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_N and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) in S/D direction >= 0.058um
A: 
HVT_N_S_8a {
@ Space between HVT_N and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) in S/D direction >= 0.058um
 err1 = EXT HVT_N_v_edges ALL_GT_NOT_P2_eqgt_070 < 0.058 ABUT<90 OPPOSITE REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_N and GATE (when channel length = 0.016/0.018/0.02um) respectively in S/D direction (GATE CUT HVT_N is not allowed), except GT_P96 region >= 0.082/0.081/0.08um
A: 
HVT_N_S_9a {
@ Space between HVT_N and GATE (when channel length = 0.016/0.018/0.02um) respectively in S/D direction (GATE CUT HVT_N is not allowed), except GT_P96 region >= 0.082/0.081/0.08um
 err1 = DFM COPY (DFM SPACE GATE_LE_16 HVT_N < 0.082 BY EXT HORIZONTAL MEASURE ALL) REGION
 err2 = DFM COPY (DFM SPACE GATE_LE_18 HVT_N < 0.081 BY EXT HORIZONTAL MEASURE ALL) REGION
 err3 = DFM COPY (DFM SPACE GATE_LE_20 HVT_N < 0.080 BY EXT HORIZONTAL MEASURE ALL) REGION
 err4 = GATE CUT HVT_N

 err1 NOT INSIDE GT_P96
 err2 NOT INSIDE GT_P96
 err3 NOT INSIDE GT_P96
 err4 NOT INSIDE GT_P96
}

Q: Space between HVT_N and GATE (when channel length = 0.016/0.018/0.02/0.022/0.024um, INSIDE GT_P96) in S/D direction (GATE CUT HVT_N is not allowed) >= 0.088/0.087/0.086/0.085/0.084um
A: 
HVT_N_S_9b {
@ Space between HVT_N and GATE (when channel length = 0.016/0.018/0.02/0.022/0.024um, INSIDE GT_P96) in S/D direction (GATE CUT HVT_N is not allowed) >= 0.088/0.087/0.086/0.085/0.084um
 err1 = DFM COPY (DFM SPACE GATE_LE_16_in_GT_P96 HVT_N < 0.088 BY EXT HORIZONTAL MEASURE ALL) REGION
 err2 = DFM COPY (DFM SPACE GATE_LE_18_in_GT_P96 HVT_N < 0.087 BY EXT HORIZONTAL MEASURE ALL) REGION
 err3 = DFM COPY (DFM SPACE GATE_LE_20_in_GT_P96 HVT_N < 0.086 BY EXT HORIZONTAL MEASURE ALL) REGION
 err4 = DFM COPY (DFM SPACE GATE_LE_22_in_GT_P96 HVT_N < 0.085 BY EXT HORIZONTAL MEASURE ALL) REGION
 err5 = DFM COPY (DFM SPACE GATE_LE_24_in_GT_P96 HVT_N < 0.084 BY EXT HORIZONTAL MEASURE ALL) REGION
 err6 = GATE CUT HVT_N

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
 err6 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_N vertical edge (edge length <= 0.238um between two concave corners with both sides length >= 0.09um) and ((GT AND GTMK1) OR GATE) in S/D direction >= 0.079um
A: 
HVT_N_S_10 {
@ Space between HVT_N vertical edge (edge length <= 0.238um between two concave corners with both sides length >= 0.09um) and ((GT AND GTMK1) OR GATE) in S/D direction >= 0.079um
 check_RAW = CONVEX EDGE HVT_N ANGLE1 == 270 LENGTH1 >= 0.09 ANGLE2 == 270 LENGTH2 >= 0.09 WITH LENGTH <= 0.238
 check_TMP = ANGLE check_RAW == 90
 err1 = EXT (OR GATE_raw GT_and_GTMK1) check_TMP < 0.079 ABUT<90 OPPOSITE REGION  //;including edge GATE
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_N and (ALL_GT NOT P2) in GATE poly direction with adjacent horizontal space <= 0.04um (HVT_N vertical edge length = 0.073~0.15um, between two consecutive 90-270 degree coners) >= 0.054um
A: 
HVT_N_S_11 {
@ Space between HVT_N and (ALL_GT NOT P2) in GATE poly direction with adjacent horizontal space <= 0.04um (HVT_N vertical edge length = 0.073~0.15um, between two consecutive 90-270 degree coners) >= 0.054um
 y1 = EXT [ALL_GT_NOT_P2] HVT_N_convex_90_270_eqgt_073_lteq_150_v_edges <= 0.040 ABUT<90 OPPOSITE
 y2 = EXT [HVT_N_h_edges] HVT_N_convex_90_270_eqgt_073_lteq_150_v_edges < 0.005 ABUT==90 INTERSECTING ONLY

 z1 = HVT_N_h_edges TOUCH EDGE y2
 z2 = EXT ALL_GT_NOT_P2 z1 < 0.054 ABUT<90 OPPOSITE REGION
 z3 = EXPAND EDGE y1 INSIDE BY 0.005 EXTEND BY 0.005
 err1 = z2 INTERACT z3
 err1 NOT INSIDE SealR_NOT_BULK
}

//HVT_P

Q: Space between HVT_P, single-point-interaction is allowed >= 0.192um
    DRC waive:
    1) HVT_P one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
    3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
HVT_P_S_1 {
@ Space between HVT_P, single-point-interaction is allowed >= 0.192um
@ DRC waive:
@ 1) HVT_P one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
@ 3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = EXT [HVT_P] < 0.192 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = EXT [HVT_P] < 0.192 CORNER
 y3 = EXT [HVT_P_v_edges] >= 0.09 < 0.107 PROJ == 0
 y4 = EXT [HVT_P_v_edges] >= 0.18 < 0.213 PROJ == 0
 y5 = EXT [HVT_P_h_edges] >= 0.09 < 0.107 PROJ == 0
 y6 = EXT [HVT_P_h_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = (y3 OR EDGE y4) OR EDGE (y5 OR EDGE y6)
 w_all = HVT_P_rvs_90_90_jog_180_135_144 OR EDGE HVT_P_90_90_jog_180_135_144

 z1 = w_all COIN EDGE HVT_P_h_edges
 z2 = HVT_P_rvs COIN EDGE HVT_P_v_edges
 z3 = INT [z2] z1 < 0.005 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE z3
 err2 = (y2 COIN EDGE HVT_P_convex_corner) NOT COIN EDGE y_all
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between HVT_P in S/D direction, single-point-interaction is allowed >= 0.27um
    DRC waive:
    1) HVT_P one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
    3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
HVT_P_S_2 {
@ Space between HVT_P in S/D direction, single-point-interaction is allowed >= 0.27um
@ DRC waive:
@ 1) HVT_P one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 w_all = HVT_P_90_90_jog_180_192_225_240_135_144 OR EDGE HVT_P_rvs_90_90_jog_180_192_225_240_135_144
 y1 = ANGLE (EXT [HVT_P] < 0.27 ABUT<90 OPPOSITE EXTENDED 0.001) == 90
 y2 = EXT [HVT_P_v_edges] >= 0.09 < 0.107 PROJ == 0
 y3 = EXT [HVT_P_v_edges] >= 0.18 < 0.213 PROJ == 0
 y4 = y2 OR EDGE y3

 z1 = ANGLE HVT_P_rvs == 0
 z2 = w_all COIN EDGE z1
 z3 = ANGLE HVT_P_rvs == 90
 z4 = INT [z3] z2 < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y4) NOT TOUCH EDGE z4
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between HVT_P when just one vertical edge CUT (GTMK1 OR AR) in S/D direction >= 0.315um
    DRC waive:
    1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
    2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
HVT_P_S_3a {
@ Space between HVT_P when just one vertical edge CUT (GTMK1 OR AR) in S/D direction >= 0.315um
@ DRC waive:
@ 1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 waive_corner = EXT HVT_P_270_270_jog_180_192_225_240_135_144_h_edges HVT_P_v_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = HVT_P_inside_AA_side_mark_v_edges NOT TOUCH EDGE waive_corner
 err1 = EXT check_corner HVT_P_v_edges < 0.315 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between HVT_P when both vertical edge CUT (GTMK1 OR AR) in S/D direction >= 0.36um
     DRC waive:
     1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
     2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
HVT_P_S_3b {
@ Space between HVT_P when both vertical edge CUT (GTMK1 OR AR) in S/D direction >= 0.36um
@ DRC waive:
@ 1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 waive_corner = EXT HVT_P_270_270_jog_180_192_225_240_135_144_h_edges HVT_P_v_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = HVT_P_inside_AA_side_mark_v_edges NOT TOUCH EDGE waive_corner
 err1 = EXT check_corner < 0.36 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_P when PRL >= 0.29um. >= 0.248um
A: 
HVT_P_S_4 {
@ Space between HVT_P when PRL >= 0.29um. >= 0.248um
 Layer_area = EXT HVT_P < 0.248 OPPOSITE REGION
 err1 = Layer_area ENCLOSE RECTANGLE 0.001 0.29 ORTHOGONAL ONLY
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_P in GATE poly direction when HVT_P point touch or horizontal width in the range of 0.09~0.106um, 0.180~0.212 while PRL = 0um in GATE poly direction >= 0.238um
A: 
HVT_P_S_5 {
@ Space between HVT_P in GATE poly direction when HVT_P point touch or horizontal width in the range of 0.09~0.106um, 0.180~0.212 while PRL = 0um in GATE poly direction >= 0.238um
 err1 = EXT HVT_P_h_edges_singular_point HVT_P_h_edges < 0.238 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK

 y1 = HVT_P_convex_eqlt_1_edges COIN EDGE HVT_P_h_edges
 y2 = HVT_P COIN EDGE (EXPAND EDGE (y1 COIN EDGE HVT_P_concave_corner) INSIDE BY 0.001 OUTSIDE BY 0.001)
 y3 = INT [y2] >= 0.09 <= 0.106+0.0005 ABUT<90 PROJ == 0
 y4 = INT [y2] >= 0.18 <= 0.212+0.0005 ABUT<90 PROJ == 0
 y5 = HVT_P_concave_corner WITH EDGE (HVT_P_concave_corner COIN EDGE (y3 OR EDGE y4))
 y6 = HVT_P_h_edges TOUCH EDGE y5
 err2 = EXT HVT_P_h_edges y6 < 0.238 ABUT<90 OPPOSITE REGION
 err3 = (LENGTH ((HVT_P_v_edges TOUCH EDGE y5) TOUCH EDGE HVT_P_convex_eq_0_edges) < 0.238) EXPAND EDGE INSIDE BY 0.002
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_P and ALL_AA (vertical edge abut AA edge is allowed) >= 0.045um
A: 
HVT_P_S_6 {
@ Space between HVT_P and ALL_AA (vertical edge abut AA edge is allowed) >= 0.045um
 CHECK_RAW = EXT HVT_P ALL_AA < 0.045 ABUT<90 SINGULAR
 WAIVE_CRN = HVT_P COIN OUTSIDE EDGE ALL_AA_v_edges
 err1 = DFM COPY (DFM PROPERTY CHECK_RAW WAIVE_CRN ABUT ALSO OVERLAP MULTI SPLIT [-= count(WAIVE_CRN)] == 0) REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_P and ALL_AA in GATE poly direction >= 0.048um
A: 
HVT_P_S_6a {
@ Space between HVT_P and ALL_AA in GATE poly direction >= 0.048um
 err1 = EXT HVT_P ALL_AA_h_edges < 0.048 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_P and (ALL_GT NOT P2) (ALL_GT width < 0.07um), except small ALL_GT jogs <= 0.004um. >= 0.024um
A: 
HVT_P_S_7 {
@ Space between HVT_P and (ALL_GT NOT P2) (ALL_GT width < 0.07um), except small ALL_GT jogs <= 0.004um. >= 0.024um
 err1 = EXT HVT_P ALL_GT_NOT_P2_not_jog_lteq_004 < 0.024 ABUT<90 REGION MEASURE ALL  //;minimum
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_P and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) >= 0.034um
A: 
HVT_P_S_7a {
@ Space between HVT_P and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) >= 0.034um
 err1 = EXT HVT_P (ALL_GT_eqgt_070 NOT P2) < 0.034 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_P and (ALL_GT NOT P2) (ALL_GT width > 0.09um) >= 0.058um
A: 
HVT_P_S_7b {
@ Space between HVT_P and (ALL_GT NOT P2) (ALL_GT width > 0.09um) >= 0.058um
 err1 = EXT HVT_P ALL_GT_NOT_P2_gt_090 < 0.058 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_P and (ALL_GT NOT P2) (ALL_GT width < 0.07um) in S/D direction >= 0.035um
A: 
HVT_P_S_8 {
@ Space between HVT_P and (ALL_GT NOT P2) (ALL_GT width < 0.07um) in S/D direction >= 0.035um
 err1 = EXT ALL_GT_NOT_P2 HVT_P_v_edges < 0.035 ABUT<90 OPPOSITE REGION  //;minimum
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_P and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) in S/D direction >= 0.058um
A: 
HVT_P_S_8a {
@ Space between HVT_P and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) in S/D direction >= 0.058um
 err1 = EXT HVT_P_v_edges ALL_GT_NOT_P2_eqgt_070 < 0.058 ABUT<90 OPPOSITE REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_P and GATE (when channel length = 0.016/0.018/0.02um) respectively in S/D direction (GATE CUT HVT_P is not allowed), except GT_P96 region >= 0.082/0.081/0.08um
A: 
HVT_P_S_9a {
@ Space between HVT_P and GATE (when channel length = 0.016/0.018/0.02um) respectively in S/D direction (GATE CUT HVT_P is not allowed), except GT_P96 region >= 0.082/0.081/0.08um
 err1 = DFM COPY (DFM SPACE GATE_LE_16 HVT_P < 0.082 BY EXT HORIZONTAL MEASURE ALL) REGION
 err2 = DFM COPY (DFM SPACE GATE_LE_18 HVT_P < 0.081 BY EXT HORIZONTAL MEASURE ALL) REGION
 err3 = DFM COPY (DFM SPACE GATE_LE_20 HVT_P < 0.080 BY EXT HORIZONTAL MEASURE ALL) REGION
 err4 = GATE CUT HVT_P

 err1 NOT INSIDE GT_P96
 err2 NOT INSIDE GT_P96
 err3 NOT INSIDE GT_P96
 err4 NOT INSIDE GT_P96
}

Q: Space between HVT_P and GATE (when channel length = 0.016/0.018/0.02/0.022/0.024um, INSIDE GT_P96) in S/D direction (GATE CUT HVT_P is not allowed) >= 0.088/0.087/0.086/0.085/0.084um
A: 
HVT_P_S_9b {
@ Space between HVT_P and GATE (when channel length = 0.016/0.018/0.02/0.022/0.024um, INSIDE GT_P96) in S/D direction (GATE CUT HVT_P is not allowed) >= 0.088/0.087/0.086/0.085/0.084um
 err1 = DFM COPY (DFM SPACE GATE_LE_16_in_GT_P96 HVT_P < 0.088 BY EXT HORIZONTAL MEASURE ALL) REGION
 err2 = DFM COPY (DFM SPACE GATE_LE_18_in_GT_P96 HVT_P < 0.087 BY EXT HORIZONTAL MEASURE ALL) REGION
 err3 = DFM COPY (DFM SPACE GATE_LE_20_in_GT_P96 HVT_P < 0.086 BY EXT HORIZONTAL MEASURE ALL) REGION
 err4 = DFM COPY (DFM SPACE GATE_LE_22_in_GT_P96 HVT_P < 0.085 BY EXT HORIZONTAL MEASURE ALL) REGION
 err5 = DFM COPY (DFM SPACE GATE_LE_24_in_GT_P96 HVT_P < 0.084 BY EXT HORIZONTAL MEASURE ALL) REGION
 err6 = GATE CUT HVT_P

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
 err6 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_P vertical edge (edge length <= 0.238um between two concave corners with both sides length >= 0.09um) and ((GT AND GTMK1) OR GATE) in S/D direction >= 0.079um
A: 
HVT_P_S_10 {
@ Space between HVT_P vertical edge (edge length <= 0.238um between two concave corners with both sides length >= 0.09um) and ((GT AND GTMK1) OR GATE) in S/D direction >= 0.079um
 check_RAW = CONVEX EDGE HVT_P ANGLE1 == 270 LENGTH1 >= 0.09 ANGLE2 == 270 LENGTH2 >= 0.09 WITH LENGTH <= 0.238
 check_TMP = ANGLE check_RAW == 90
 err1 = EXT (OR GATE_raw GT_and_GTMK1) check_TMP < 0.079 ABUT<90 OPPOSITE REGION  //;including edge GATE
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between HVT_P and (ALL_GT NOT P2) in GATE poly direction with adjacent horizontal space <= 0.04um (HVT_P vertical edge length = 0.073~0.150um, between two consecutive 90-270 degree coners) >= 0.054um
A: 
HVT_P_S_11 {
@ Space between HVT_P and (ALL_GT NOT P2) in GATE poly direction with adjacent horizontal space <= 0.04um (HVT_P vertical edge length = 0.073~0.150um, between two consecutive 90-270 degree coners) >= 0.054um
 y1 = EXT [ALL_GT_NOT_P2] HVT_P_convex_90_270_eqgt_073_lteq_150_v_edges <= 0.040 ABUT<90 OPPOSITE
 y2 = EXT [HVT_P_h_edges] HVT_P_convex_90_270_eqgt_073_lteq_150_v_edges < 0.005 ABUT==90 INTERSECTING ONLY

 z1 = HVT_P_h_edges TOUCH EDGE y2
 z2 = EXT ALL_GT_NOT_P2 z1 < 0.054 ABUT<90 OPPOSITE REGION
 z3 = EXPAND EDGE y1 INSIDE BY 0.005 EXTEND BY 0.005
 err1 = z2 INTERACT z3
 err1 NOT INSIDE SealR_NOT_BULK
}

//LVT_N

Q: Space between LVT_N, single-point-interaction is allowed >= 0.192um
    DRC waive:
    1) LVT_N one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
    3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LVT_N_S_1 {
@ Space between LVT_N, single-point-interaction is allowed >= 0.192um
@ DRC waive:
@ 1) LVT_N one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
@ 3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = EXT [LVT_N] < 0.192 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = EXT [LVT_N] < 0.192 CORNER
 y3 = EXT [LVT_N_v_edges] >= 0.09 < 0.107 PROJ == 0
 y4 = EXT [LVT_N_v_edges] >= 0.18 < 0.213 PROJ == 0
 y5 = EXT [LVT_N_h_edges] >= 0.09 < 0.107 PROJ == 0
 y6 = EXT [LVT_N_h_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = (y3 OR EDGE y4) OR EDGE (y5 OR EDGE y6)
 w_all = LVT_N_rvs_90_90_jog_180_135_144 OR EDGE LVT_N_90_90_jog_180_135_144

 z1 = w_all COIN EDGE LVT_N_h_edges
 z2 = LVT_N_rvs COIN EDGE LVT_N_v_edges
 z3 = INT [z2] z1 < 0.005 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE z3
 err2 = (y2 COIN EDGE LVT_N_convex_corner) NOT COIN EDGE y_all
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between LVT_N in S/D direction, single-point-interaction is allowed >= 0.27um
    DRC waive:
    1) LVT_N one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
    3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LVT_N_S_2 {
@ Space between LVT_N in S/D direction, single-point-interaction is allowed >= 0.27um
@ DRC waive:
@ 1) LVT_N one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 w_all = LVT_N_90_90_jog_180_192_225_240_135_144 OR EDGE LVT_N_rvs_90_90_jog_180_192_225_240_135_144
 y1 = ANGLE (EXT [LVT_N] < 0.27 ABUT<90 OPPOSITE EXTENDED 0.001) == 90
 y2 = EXT [LVT_N_v_edges] >= 0.09 < 0.107 PROJ == 0
 y3 = EXT [LVT_N_v_edges] >= 0.18 < 0.213 PROJ == 0
 y4 = y2 OR EDGE y3

 z1 = ANGLE LVT_N_rvs == 0
 z2 = w_all COIN EDGE z1
 z3 = ANGLE LVT_N_rvs == 90
 z4 = INT [z3] z2 < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y4) NOT TOUCH EDGE z4
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between LVT_N when just one vertical edge CUT (GTMK1 OR AR), and ABUT ULVT_N in S/D direction >= 0.315um
    DRC waive:
     1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
     2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LVT_N_S_3a {
@ Space between LVT_N when just one vertical edge CUT (GTMK1 OR AR), and ABUT ULVT_N in S/D direction >= 0.315um
@ DRC waive:
@ 1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 check_edges = LVT_N_inside_AA_side_mark_v_edges TOUCH EDGE ULVT_N
 waive_corner = EXT LVT_N_270_270_jog_180_192_225_240_135_144_h_edges check_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = check_edges NOT TOUCH EDGE waive_corner
 err1 = EXT check_corner LVT_N_v_edges < 0.315 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_N when both LVT_N’s vertical edge CUT (GTMK1 OR AR) and ABUT ULVT_N) in S/D direction >= 0.36um
    DRC waive:
    1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
    2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LVT_N_S_3b {
@ Space between LVT_N when both LVT_N’s vertical edge CUT (GTMK1 OR AR) and ABUT ULVT_N) in S/D direction >= 0.36um
@ DRC waive:
@ 1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 check_edges = LVT_N_inside_AA_side_mark_v_edges TOUCH EDGE ULVT_N
 waive_corner = EXT LVT_N_270_270_jog_180_192_225_240_135_144_h_edges check_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = check_edges NOT TOUCH EDGE waive_corner
 err1 = EXT check_corner < 0.36 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_N when PRL >= 0.29um. >= 0.248um
A: 
LVT_N_S_4 {
@ Space between LVT_N when PRL >= 0.29um. >= 0.248um
 Layer_area = EXT LVT_N < 0.248 OPPOSITE REGION
 err1 = Layer_area ENCLOSE RECTANGLE 0.001 0.29 ORTHOGONAL ONLY
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: LVT_N space in GATE poly direction when LVT_N point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction >= 0.238um
A: 
LVT_N_S_5 {
@ LVT_N space in GATE poly direction when LVT_N point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction >= 0.238um
 err1 = EXT LVT_N_h_edges_singular_point LVT_N_h_edges < 0.238 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK

 y1 = LVT_N_convex_eqlt_1_edges COIN EDGE LVT_N_h_edges
 y2 = LVT_N COIN EDGE (EXPAND EDGE (y1 COIN EDGE LVT_N_concave_corner) INSIDE BY 0.001 OUTSIDE BY 0.001)
 y3 = INT [y2] >= 0.09 <= 0.106+0.0005 ABUT<90 PROJ == 0
 y4 = INT [y2] >= 0.18 <= 0.212+0.0005 ABUT<90 PROJ == 0
 y5 = LVT_N_concave_corner WITH EDGE (LVT_N_concave_corner COIN EDGE (y3 OR EDGE y4))
 y6 = LVT_N_h_edges TOUCH EDGE y5
 err2 = EXT LVT_N_h_edges y6 < 0.238 ABUT<90 OPPOSITE REGION
 err3 = (LENGTH ((LVT_N_v_edges TOUCH EDGE y5) TOUCH EDGE LVT_N_convex_eq_0_edges) < 0.238) EXPAND EDGE INSIDE BY 0.002
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_N and ALL_AA (vertical edge abut AA edge is allowed) >= 0.045um
A: 
LVT_N_S_6 {
@ Space between LVT_N and ALL_AA (vertical edge abut AA edge is allowed) >= 0.045um
 CHECK_RAW = EXT LVT_N ALL_AA < 0.045 ABUT<90 SINGULAR
 WAIVE_CRN = LVT_N COIN OUTSIDE EDGE ALL_AA_v_edges
 err1 = DFM COPY (DFM PROPERTY CHECK_RAW WAIVE_CRN ABUT ALSO OVERLAP MULTI SPLIT [-= count(WAIVE_CRN)] == 0) REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_N and ALL_AA in GATE poly direction >= 0.048um
A: 
LVT_N_S_6a {
@ Space between LVT_N and ALL_AA in GATE poly direction >= 0.048um
 err1 = EXT LVT_N ALL_AA_h_edges < 0.048 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_N and (ALL_GT NOT P2) (ALL_GT width < 0.07um), except small ALL_GT jogs <= 0.004um. >= 0.024um
A: 
LVT_N_S_7 {
@ Space between LVT_N and (ALL_GT NOT P2) (ALL_GT width < 0.07um), except small ALL_GT jogs <= 0.004um. >= 0.024um
 err1 = EXT LVT_N ALL_GT_NOT_P2_not_jog_lteq_004 < 0.024 ABUT<90 REGION MEASURE ALL  //;minimum
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_N and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) >= 0.034um
A: 
LVT_N_S_7a {
@ Space between LVT_N and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) >= 0.034um
 err1 = EXT LVT_N (ALL_GT_eqgt_070 NOT P2) < 0.034 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_N and (ALL_GT NOT P2) (ALL_GT width > 0.09um) >= 0.058um
A: 
LVT_N_S_7b {
@ Space between LVT_N and (ALL_GT NOT P2) (ALL_GT width > 0.09um) >= 0.058um
 err1 = EXT LVT_N ALL_GT_NOT_P2_gt_090 < 0.058 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_N and (ALL_GT NOT P2) (ALL_GT width < 0.07um) in S/D direction >= 0.035um
A: 
LVT_N_S_8 {
@ Space between LVT_N and (ALL_GT NOT P2) (ALL_GT width < 0.07um) in S/D direction >= 0.035um
 err1 = EXT ALL_GT_NOT_P2 LVT_N_v_edges < 0.035 ABUT<90 OPPOSITE REGION //;minimum
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_N and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) in S/D direction >= 0.058um
A: 
LVT_N_S_8a {
@ Space between LVT_N and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) in S/D direction >= 0.058um
 err1 = EXT LVT_N_v_edges ALL_GT_NOT_P2_eqgt_070 < 0.058 ABUT<90 OPPOSITE REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_N and GATE (when channel length = 0.016/0.018/0.02um) respectively in S/D direction (GATE CUT LVT_N is not allowed), except GT_P96 region >= 0.082/0.081/0.08um
A: 
LVT_N_S_9a {
@ Space between LVT_N and GATE (when channel length = 0.016/0.018/0.02um) respectively in S/D direction (GATE CUT LVT_N is not allowed), except GT_P96 region >= 0.082/0.081/0.08um
 err1 = DFM COPY (DFM SPACE GATE_LE_16 LVT_N < 0.082 BY EXT HORIZONTAL MEASURE ALL) REGION
 err2 = DFM COPY (DFM SPACE GATE_LE_18 LVT_N < 0.081 BY EXT HORIZONTAL MEASURE ALL) REGION
 err3 = DFM COPY (DFM SPACE GATE_LE_20 LVT_N < 0.080 BY EXT HORIZONTAL MEASURE ALL) REGION
 err4 = GATE CUT LVT_N

 err1 NOT INSIDE GT_P96
 err2 NOT INSIDE GT_P96
 err3 NOT INSIDE GT_P96
 err4 NOT INSIDE GT_P96
}

Q: Space between LVT_N and GATE (when channel length = 0.016/0.018/0.02/0.022/0.024um, INSIDE GT_P96) in S/D direction (GATE CUT LVT_N is not allowed) >= 0.088/0.087/0.086/0.085/0.084um
A: 
LVT_N_S_9b {
@ Space between LVT_N and GATE (when channel length = 0.016/0.018/0.02/0.022/0.024um, INSIDE GT_P96) in S/D direction (GATE CUT LVT_N is not allowed) >= 0.088/0.087/0.086/0.085/0.084um
 err1 = DFM COPY (DFM SPACE GATE_LE_16_in_GT_P96 LVT_N < 0.088 BY EXT HORIZONTAL MEASURE ALL) REGION
 err2 = DFM COPY (DFM SPACE GATE_LE_18_in_GT_P96 LVT_N < 0.087 BY EXT HORIZONTAL MEASURE ALL) REGION
 err3 = DFM COPY (DFM SPACE GATE_LE_20_in_GT_P96 LVT_N < 0.086 BY EXT HORIZONTAL MEASURE ALL) REGION
 err4 = DFM COPY (DFM SPACE GATE_LE_22_in_GT_P96 LVT_N < 0.085 BY EXT HORIZONTAL MEASURE ALL) REGION
 err5 = DFM COPY (DFM SPACE GATE_LE_24_in_GT_P96 LVT_N < 0.084 BY EXT HORIZONTAL MEASURE ALL) REGION
 err6 = GATE CUT LVT_N

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
 err6 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_N vertical edge (edge length <= 0.238um between two concave corners with both sides length >= 0.09um) and ((GT AND GTMK1) OR GATE) in S/D direction >= 0.079um
A: 
LVT_N_S_10 {
@ Space between LVT_N vertical edge (edge length <= 0.238um between two concave corners with both sides length >= 0.09um) and ((GT AND GTMK1) OR GATE) in S/D direction >= 0.079um
 check_RAW = CONVEX EDGE LVT_N ANGLE1 == 270 LENGTH1 >= 0.09 ANGLE2 == 270 LENGTH2 >= 0.09 WITH LENGTH <= 0.238
 check_TMP = ANGLE check_RAW == 90
 err1 = EXT (OR GATE_raw GT_and_GTMK1) check_TMP < 0.079 ABUT<90 OPPOSITE REGION  //;including edge GATE
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between LVT_N and (ALL_GT NOT P2) in GATE poly direction with adjacent horizontal space <= 0.040um (LVT_N vertical edge length = 0.073~0.150um, between two consecutive 90-270 degree coners) >= 0.054um
A: 
LVT_N_S_11 {
@ Space between LVT_N and (ALL_GT NOT P2) in GATE poly direction with adjacent horizontal space <= 0.040um (LVT_N vertical edge length = 0.073~0.150um, between two consecutive 90-270 degree coners) >= 0.054um
 y1 = EXT [ALL_GT_NOT_P2] LVT_N_convex_90_270_eqgt_073_lteq_150_v_edges <= 0.040 ABUT<90 OPPOSITE
 y2 = EXT [LVT_N_h_edges] LVT_N_convex_90_270_eqgt_073_lteq_150_v_edges < 0.005 ABUT==90 INTERSECTING ONLY

 z1 = LVT_N_h_edges TOUCH EDGE y2
 z2 = EXT ALL_GT_NOT_P2 z1 < 0.054 ABUT<90 OPPOSITE REGION
 z3 = EXPAND EDGE y1 INSIDE BY 0.005 EXTEND BY 0.005
 err1 = z2 INTERACT z3
 err1 NOT INSIDE SealR_NOT_BULK
}

//LVT_P

Q: Space between LVT_P, single-point-interaction is allowed >= 0.192um
    DRC waive:
    1) LVT_P one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
    3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LVT_P_S_1 {
@ Space between LVT_P, single-point-interaction is allowed >= 0.192um
@ DRC waive:
@ 1) LVT_P one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
@ 3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = EXT [LVT_P] < 0.192 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = EXT [LVT_P] < 0.192 CORNER
 y3 = EXT [LVT_P_v_edges] >= 0.09 < 0.107 PROJ == 0
 y4 = EXT [LVT_P_v_edges] >= 0.18 < 0.213 PROJ == 0
 y5 = EXT [LVT_P_h_edges] >= 0.09 < 0.107 PROJ == 0
 y6 = EXT [LVT_P_h_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = (y3 OR EDGE y4) OR EDGE (y5 OR EDGE y6)
 w_all = LVT_P_rvs_90_90_jog_180_135_144 OR EDGE LVT_P_90_90_jog_180_135_144

 z1 = w_all COIN EDGE LVT_P_h_edges
 z2 = LVT_P_rvs COIN EDGE LVT_P_v_edges
 z3 = INT [z2] z1 < 0.005 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE z3
 err2 = (y2 COIN EDGE LVT_P_convex_corner) NOT COIN EDGE y_all
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between LVT_P in S/D direction, single-point-interaction is allowed >= 0.27um
    DRC waive:
    1) LVT_P one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
    3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LVT_P_S_2 {
@ Space between LVT_P in S/D direction, single-point-interaction is allowed >= 0.27um
@ DRC waive:
@ 1) LVT_P one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 w_all = LVT_P_90_90_jog_180_192_225_240_135_144 OR EDGE LVT_P_rvs_90_90_jog_180_192_225_240_135_144
 y1 = ANGLE (EXT [LVT_P] < 0.27 ABUT<90 OPPOSITE EXTENDED 0.001) == 90
 y2 = EXT [LVT_P_v_edges] >= 0.09 < 0.107 PROJ == 0
 y3 = EXT [LVT_P_v_edges] >= 0.18 < 0.213 PROJ == 0
 y4 = y2 OR EDGE y3

 z1 = ANGLE LVT_P_rvs == 0
 z2 = w_all COIN EDGE z1
 z3 = ANGLE LVT_P_rvs == 90
 z4 = INT [z3] z2 < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y4) NOT TOUCH EDGE z4
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between LVT_P in S/D direction when just one LVT_P vertical edge CUT (GTMK1 OR AR), ABUT ULVT_P >= 0.315um
    DRC waive:
    1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
    2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LVT_P_S_3a {
@ Space between LVT_P in S/D direction when just one LVT_P vertical edge CUT (GTMK1 OR AR), ABUT ULVT_P >= 0.315um
@ DRC waive:
@ 1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 check_edges = LVT_P_inside_AA_side_mark_v_edges TOUCH EDGE ULVT_P
 waive_corner = EXT LVT_P_270_270_jog_180_192_225_240_135_144_h_edges check_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = check_edges NOT TOUCH EDGE waive_corner
 err1 = EXT check_corner LVT_P_v_edges < 0.315 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_P in S/D direction when both LVT_P vertical edge CUT (GTMK1 OR AR), ABUT ULVT_P >= 0.36um
    DRC waive:
    1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
    2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LVT_P_S_3b {
@ Space between LVT_P in S/D direction when both LVT_P vertical edge CUT (GTMK1 OR AR), ABUT ULVT_P >= 0.36um
@ DRC waive:
@ 1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 check_edges = LVT_P_inside_AA_side_mark_v_edges TOUCH EDGE ULVT_P
 waive_corner = EXT LVT_P_270_270_jog_180_192_225_240_135_144_h_edges check_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = check_edges NOT TOUCH EDGE waive_corner
 err1 = EXT check_corner < 0.36 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_P when PRL >= 0.29um. >= 0.248um
A: 
LVT_P_S_4 {
@ Space between LVT_P when PRL >= 0.29um. >= 0.248um
 Layer_area = EXT LVT_P < 0.248 OPPOSITE REGION
 err1 = Layer_area ENCLOSE RECTANGLE 0.001 0.29 ORTHOGONAL ONLY
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: LVT_P space in GATE poly direction when LVT_P point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction >= 0.238um
A: 
LVT_P_S_5 {
@ LVT_P space in GATE poly direction when LVT_P point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction >= 0.238um
 err1 = EXT LVT_P_h_edges_singular_point LVT_P_h_edges < 0.238 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK

 y1 = LVT_P_convex_eqlt_1_edges COIN EDGE LVT_P_h_edges
 y2 = LVT_P COIN EDGE (EXPAND EDGE (y1 COIN EDGE LVT_P_concave_corner) INSIDE BY 0.001 OUTSIDE BY 0.001)
 y3 = INT [y2] >= 0.09 <= 0.106+0.0005 ABUT<90 PROJ == 0
 y4 = INT [y2] >= 0.18 <= 0.212+0.0005 ABUT<90 PROJ == 0
 y5 = LVT_P_concave_corner WITH EDGE (LVT_P_concave_corner COIN EDGE (y3 OR EDGE y4))
 y6 = LVT_P_h_edges TOUCH EDGE y5
 err2 = EXT LVT_P_h_edges y6 < 0.238 ABUT<90 OPPOSITE REGION
 err3 = (LENGTH ((LVT_P_v_edges TOUCH EDGE y5) TOUCH EDGE LVT_P_convex_eq_0_edges) < 0.238) EXPAND EDGE INSIDE BY 0.002
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_P and ALL_AA (vertical edge abut AA edge is allowed) >= 0.045um
A: 
LVT_P_S_6 {
@ Space between LVT_P and ALL_AA (vertical edge abut AA edge is allowed) >= 0.045um
 CHECK_RAW = EXT LVT_P ALL_AA < 0.045 ABUT<90 SINGULAR
 WAIVE_CRN = LVT_P COIN OUTSIDE EDGE ALL_AA_v_edges
 err1 = DFM COPY (DFM PROPERTY CHECK_RAW WAIVE_CRN ABUT ALSO OVERLAP MULTI SPLIT [-= count(WAIVE_CRN)] == 0) REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_P and ALL_AA in GATE poly direction >= 0.048um
A: 
LVT_P_S_6a {
@ Space between LVT_P and ALL_AA in GATE poly direction >= 0.048um
 err1 = EXT LVT_P ALL_AA_h_edges < 0.048 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_P and (ALL_GT NOT P2) (ALL_GT width < 0.07um), except small ALL_GT jogs <= 0.004um. >= 0.024um
A: 
LVT_P_S_7 {
@ Space between LVT_P and (ALL_GT NOT P2) (ALL_GT width < 0.07um), except small ALL_GT jogs <= 0.004um. >= 0.024um
 err1 = EXT LVT_P ALL_GT_NOT_P2_not_jog_lteq_004 < 0.024 ABUT<90 REGION MEASURE ALL  //;minimum
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_P and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) >= 0.034um
A: 
LVT_P_S_7a {
@ Space between LVT_P and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) >= 0.034um
 err1 = EXT LVT_P (ALL_GT_eqgt_070 NOT P2) < 0.034 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_P and (ALL_GT NOT P2) (ALL_GT width > 0.09um) >= 0.058um
A: 
LVT_P_S_7b {
@ Space between LVT_P and (ALL_GT NOT P2) (ALL_GT width > 0.09um) >= 0.058um
 err1 = EXT LVT_P ALL_GT_NOT_P2_gt_090 < 0.058 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_P and (ALL_GT NOT P2) (ALL_GT width < 0.07um) in S/D direction >= 0.035um
A: 
LVT_P_S_8 {
@ Space between LVT_P and (ALL_GT NOT P2) (ALL_GT width < 0.07um) in S/D direction >= 0.035um
 err1 = EXT ALL_GT_NOT_P2 LVT_P_v_edges < 0.035 ABUT<90 OPPOSITE REGION //;minimum
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_P and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) in S/D direction >= 0.058um
A:
LVT_P_S_8a {
@ Space between LVT_P and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) in S/D direction >= 0.058um
 err1 = EXT LVT_P_v_edges ALL_GT_NOT_P2_eqgt_070 < 0.058 ABUT<90 OPPOSITE REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_P and GATE (when channel length = 0.016/0.018/0.02um) respectively in S/D direction, (GATE CUT LVT_P is not allowed), except GT_P96 region >= 0.082/0.081/0.08um
A: 
LVT_P_S_9a {
@ Space between LVT_P and GATE (when channel length = 0.016/0.018/0.02um) respectively in S/D direction, (GATE CUT LVT_P is not allowed), except GT_P96 region >= 0.082/0.081/0.08um
 err1 = DFM COPY (DFM SPACE GATE_LE_16 LVT_P < 0.082 BY EXT HORIZONTAL MEASURE ALL) REGION
 err2 = DFM COPY (DFM SPACE GATE_LE_18 LVT_P < 0.081 BY EXT HORIZONTAL MEASURE ALL) REGION
 err3 = DFM COPY (DFM SPACE GATE_LE_20 LVT_P < 0.080 BY EXT HORIZONTAL MEASURE ALL) REGION
 err4 = GATE CUT LVT_P

 err1 NOT INSIDE (OR GT_P96 SealR_NOT_BULK)
 err2 NOT INSIDE (OR GT_P96 SealR_NOT_BULK)
 err3 NOT INSIDE (OR GT_P96 SealR_NOT_BULK)
 err4 NOT INSIDE (OR GT_P96 SealR_NOT_BULK)
}

Q: Space between LVT_P and to GATE (when channel length = 0.016/0.018/0.02/0.022/0.024um, INSIDE GT_P96) in S/D direction (GATE CUT LVT_P is not allowed) >= 0.088/0.087/0.086/0.085/0.084um
A: 
LVT_P_S_9b {
@ Space between LVT_P and to GATE (when channel length = 0.016/0.018/0.02/0.022/0.024um, INSIDE GT_P96) in S/D direction (GATE CUT LVT_P is not allowed) >= 0.088/0.087/0.086/0.085/0.084um
 err1 = DFM COPY (DFM SPACE GATE_LE_16_in_GT_P96 LVT_P < 0.088 BY EXT HORIZONTAL MEASURE ALL) REGION
 err2 = DFM COPY (DFM SPACE GATE_LE_18_in_GT_P96 LVT_P < 0.087 BY EXT HORIZONTAL MEASURE ALL) REGION
 err3 = DFM COPY (DFM SPACE GATE_LE_20_in_GT_P96 LVT_P < 0.086 BY EXT HORIZONTAL MEASURE ALL) REGION
 err4 = DFM COPY (DFM SPACE GATE_LE_22_in_GT_P96 LVT_P < 0.085 BY EXT HORIZONTAL MEASURE ALL) REGION
 err5 = DFM COPY (DFM SPACE GATE_LE_24_in_GT_P96 LVT_P < 0.084 BY EXT HORIZONTAL MEASURE ALL) REGION
 err6 = GATE CUT LVT_P

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
 err6 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_P vertical edge (edge length <= 0.238um between two concave corners with both sides length >= 0.09um) and ((GT AND GTMK1) OR GATE) in S/D direction >= 0.079um
A: 
LVT_P_S_10 {
@ Space between LVT_P vertical edge (edge length <= 0.238um between two concave corners with both sides length >= 0.09um) and ((GT AND GTMK1) OR GATE) in S/D direction >= 0.079um
 check_RAW = CONVEX EDGE LVT_P ANGLE1 == 270 LENGTH1 >= 0.09 ANGLE2 == 270 LENGTH2 >= 0.09 WITH LENGTH <= 0.238
 check_TMP = ANGLE check_RAW == 90
 err1 = EXT (OR GATE_raw GT_and_GTMK1) check_TMP < 0.079 ABUT<90 OPPOSITE REGION  //;including edge GATE
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LVT_P and (ALL_GT NOT P2) in GATE poly direction with adjacent horizontal space <= 0.04um (LVT_P vertical edge length = 0.073~0.15um, between two consecutive 90-270 degree coners) >= 0.054um
A: 
LVT_P_S_11 {
@ Space between LVT_P and (ALL_GT NOT P2) in GATE poly direction with adjacent horizontal space <= 0.04um (LVT_P vertical edge length = 0.073~0.15um, between two consecutive 90-270 degree coners) >= 0.054um
 y1 = EXT [ALL_GT_NOT_P2] LVT_P_convex_90_270_eqgt_073_lteq_150_v_edges <= 0.040 ABUT<90 OPPOSITE
 y2 = EXT [LVT_P_h_edges] LVT_P_convex_90_270_eqgt_073_lteq_150_v_edges < 0.005 ABUT==90 INTERSECTING ONLY

 z1 = LVT_P_h_edges TOUCH EDGE y2
 z2 = EXT ALL_GT_NOT_P2 z1 < 0.054 ABUT<90 OPPOSITE REGION
 z3 = EXPAND EDGE y1 INSIDE BY 0.005 EXTEND BY 0.005
 err1 = z2 INTERACT z3
 err1 NOT INSIDE SealR_NOT_BULK
}

//ULVT_N

Q: Space between ULVT_N, single-point-interaction is allowed >= 0.192um
    DRC waive:
    1) ULVT_N one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
    3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
ULVT_N_S_1 {
@ Space between ULVT_N, single-point-interaction is allowed >= 0.192um
@ DRC waive:
@ 1) ULVT_N one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
@ 3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = EXT [ULVT_N] < 0.192 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = EXT [ULVT_N] < 0.192 CORNER
 y3 = EXT [ULVT_N_v_edges] >= 0.09 < 0.107 PROJ == 0
 y4 = EXT [ULVT_N_v_edges] >= 0.18 < 0.213 PROJ == 0
 y5 = EXT [ULVT_N_h_edges] >= 0.09 < 0.107 PROJ == 0
 y6 = EXT [ULVT_N_h_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = (y3 OR EDGE y4) OR EDGE (y5 OR EDGE y6)
 w_all = ULVT_N_rvs_90_90_jog_180_135_144 OR EDGE ULVT_N_90_90_jog_180_135_144

 z1 = w_all COIN EDGE ULVT_N_h_edges
 z2 = ULVT_N_rvs COIN EDGE ULVT_N_v_edges
 z3 = INT [z2] z1 < 0.005 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE z3
 err2 = (y2 COIN EDGE ULVT_N_convex_corner) NOT COIN EDGE y_all
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between ULVT_N in S/D direction, single-point-interaction is allowed >= 0.27um
     DRC waive:
    1) ULVT_N one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
    3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
ULVT_N_S_2 {
@ Space between ULVT_N in S/D direction, single-point-interaction is allowed >= 0.27um
@ DRC waive:
@ 1) ULVT_N one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 w_all = ULVT_N_90_90_jog_180_192_225_240_135_144 OR EDGE ULVT_N_rvs_90_90_jog_180_192_225_240_135_144
 y1 = ANGLE (EXT [ULVT_N] < 0.27 ABUT<90 OPPOSITE EXTENDED 0.001) == 90
 y2 = EXT [ULVT_N_v_edges] >= 0.09 < 0.107 PROJ == 0
 y3 = EXT [ULVT_N_v_edges] >= 0.18 < 0.213 PROJ == 0
 y4 = y2 OR EDGE y3

 z1 = ANGLE ULVT_N_rvs == 0
 z2 = w_all COIN EDGE z1
 z3 = ANGLE ULVT_N_rvs == 90
 z4 = INT [z3] z2 < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y4) NOT TOUCH EDGE z4
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between ULVT_N when PRL >= 0.29um. >= 0.248um
A: 
ULVT_N_S_4 {
@ Space between ULVT_N when PRL >= 0.29um. >= 0.248um
 Layer_area = EXT ULVT_N < 0.248 OPPOSITE REGION
 err1 = Layer_area ENCLOSE RECTANGLE 0.001 0.29 ORTHOGONAL ONLY
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_N in GATE poly direction when ULVT_N point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction >= 0.238um
A: 
ULVT_N_S_5 {
@ Space between ULVT_N in GATE poly direction when ULVT_N point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction >= 0.238um
 err1 = EXT ULVT_N_h_edges_singular_point ULVT_N_h_edges < 0.238 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK

 y1 = ULVT_N_convex_eqlt_1_edges COIN EDGE ULVT_N_h_edges
 y2 = ULVT_N COIN EDGE (EXPAND EDGE (y1 COIN EDGE ULVT_N_concave_corner) INSIDE BY 0.001 OUTSIDE BY 0.001)
 y3 = INT [y2] >= 0.09 <= 0.106+0.0005 ABUT<90 PROJ == 0
 y4 = INT [y2] >= 0.18 <= 0.212+0.0005 ABUT<90 PROJ == 0
 y5 = ULVT_N_concave_corner WITH EDGE (ULVT_N_concave_corner COIN EDGE (y3 OR EDGE y4))
 y6 = ULVT_N_h_edges TOUCH EDGE y5
 err2 = EXT ULVT_N_h_edges y6 < 0.238 ABUT<90 OPPOSITE REGION
 err3 = (LENGTH ((ULVT_N_v_edges TOUCH EDGE y5) TOUCH EDGE ULVT_N_convex_eq_0_edges) < 0.238) EXPAND EDGE INSIDE BY 0.002
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_N and ALL_AA (vertical edge abut AA edge is allowed) >= 0.045um
A: 
ULVT_N_S_6 {
@ Space between ULVT_N and ALL_AA (vertical edge abut AA edge is allowed) >= 0.045um
 CHECK_RAW = EXT ULVT_N ALL_AA < 0.045 ABUT<90 SINGULAR
 WAIVE_CRN = ULVT_N COIN OUTSIDE EDGE ALL_AA_v_edges
 err1 = DFM COPY (DFM PROPERTY CHECK_RAW WAIVE_CRN ABUT ALSO OVERLAP MULTI SPLIT [-= count(WAIVE_CRN)] == 0) REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_N and ALL_AA in GATE poly direction >= 0.048um
A: 
ULVT_N_S_6a {
@ Space between ULVT_N and ALL_AA in GATE poly direction >= 0.048um
 err1 = EXT ULVT_N ALL_AA_h_edges < 0.048 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_N and (ALL_GT NOT P2) (ALL_GT width < 0.07um), except small ALL_GT jog <= 0.004um. >= 0.024um
A: 
ULVT_N_S_7 {
@ Space between ULVT_N and (ALL_GT NOT P2) (ALL_GT width < 0.07um), except small ALL_GT jog <= 0.004um. >= 0.024um
 err1 = EXT ULVT_N ALL_GT_NOT_P2_not_jog_lteq_004 < 0.024 ABUT<90 REGION MEASURE ALL  //;minimum
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_N and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) >= 0.034um
A: 
ULVT_N_S_7a {
@ Space between ULVT_N and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) >= 0.034um
 err1 = EXT ULVT_N (ALL_GT_eqgt_070 NOT P2) < 0.034 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_N and (ALL_GT NOT P2) (ALL_GT width > 0.09um) >= 0.058um
A: 
ULVT_N_S_7b {
@ Space between ULVT_N and (ALL_GT NOT P2) (ALL_GT width > 0.09um) >= 0.058um
 err1 = EXT ULVT_N ALL_GT_NOT_P2_gt_090 < 0.058 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_N and (ALL_GT NOT P2) (ALL_GT width < 0.07um) in S/D direction >= 0.035um
A: 
ULVT_N_S_8 {
@ Space between ULVT_N and (ALL_GT NOT P2) (ALL_GT width < 0.07um) in S/D direction >= 0.035um
 err1 = EXT ALL_GT_NOT_P2 ULVT_N_v_edges < 0.035 ABUT<90 OPPOSITE REGION //;minimum
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_N and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) in S/D direction >= 0.058um
A: 
ULVT_N_S_8a {
@ Space between ULVT_N and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) in S/D direction >= 0.058um
 err1 = EXT ULVT_N_v_edges ALL_GT_NOT_P2_eqgt_070 < 0.058 ABUT<90 OPPOSITE REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_N and GATE (when channel length = 0.016/0.018/0.02um) respectively in S/D direction (GATE CUT ULVT_N is not allowed), except GT_P96 region >= 0.082/0.081/0.08um
A:
ULVT_N_S_9a {
@ Space between ULVT_N and GATE (when channel length = 0.016/0.018/0.02um) respectively in S/D direction (GATE CUT ULVT_N is not allowed), except GT_P96 region >= 0.082/0.081/0.08um
 err1 = DFM COPY (DFM SPACE GATE_LE_16 ULVT_N < 0.082 BY EXT HORIZONTAL MEASURE ALL) REGION
 err2 = DFM COPY (DFM SPACE GATE_LE_18 ULVT_N < 0.081 BY EXT HORIZONTAL MEASURE ALL) REGION
 err3 = DFM COPY (DFM SPACE GATE_LE_20 ULVT_N < 0.080 BY EXT HORIZONTAL MEASURE ALL) REGION
 err4 = GATE CUT ULVT_N

 err1 NOT INSIDE GT_P96
 err2 NOT INSIDE GT_P96
 err3 NOT INSIDE GT_P96
 err4 NOT INSIDE GT_P96
}

Q: Space between ULVT_N and GATE (when channel length = 0.016/0.018/0.02/0.022/0.024um, INSIDE GT_P96) in S/D direction (GATE CUT ULVT_N is not allowed) >= 0.088/0.087/0.086/0.085/0.084um
A: 
ULVT_N_S_9b {
@ Space between ULVT_N and GATE (when channel length = 0.016/0.018/0.02/0.022/0.024um, INSIDE GT_P96) in S/D direction (GATE CUT ULVT_N is not allowed) >= 0.088/0.087/0.086/0.085/0.084um
 err1 = DFM COPY (DFM SPACE GATE_LE_16_in_GT_P96 ULVT_N < 0.088 BY EXT HORIZONTAL MEASURE ALL) REGION
 err2 = DFM COPY (DFM SPACE GATE_LE_18_in_GT_P96 ULVT_N < 0.087 BY EXT HORIZONTAL MEASURE ALL) REGION
 err3 = DFM COPY (DFM SPACE GATE_LE_20_in_GT_P96 ULVT_N < 0.086 BY EXT HORIZONTAL MEASURE ALL) REGION
 err4 = DFM COPY (DFM SPACE GATE_LE_22_in_GT_P96 ULVT_N < 0.085 BY EXT HORIZONTAL MEASURE ALL) REGION
 err5 = DFM COPY (DFM SPACE GATE_LE_24_in_GT_P96 ULVT_N < 0.084 BY EXT HORIZONTAL MEASURE ALL) REGION
 err6 = GATE CUT ULVT_N

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
 err6 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_N vertical edge (edge length <= 0.238um between two concave corners with both sides length >= 0.09um) and ((GT AND GTMK1) OR GATE) in S/D direction >= 0.079um
A: 
ULVT_N_S_10 {
@ Space between ULVT_N vertical edge (edge length <= 0.238um between two concave corners with both sides length >= 0.09um) and ((GT AND GTMK1) OR GATE) in S/D direction >= 0.079um
 check_RAW = CONVEX EDGE ULVT_N ANGLE1 == 270 LENGTH1 >= 0.09 ANGLE2 == 270 LENGTH2 >= 0.09 WITH LENGTH <= 0.238
 check_TMP = ANGLE check_RAW == 90
 err1 = EXT (OR GATE_raw GT_and_GTMK1) check_TMP < 0.079 ABUT<90 OPPOSITE REGION  //;including edge GATE
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_N and (ALL_GT NOT P2) in GATE poly direction with adjacent horizontal space <= 0.040um (ULVT_N vertical edge length = 0.073~0.15um, between two consecutive 90-270 degree coners) >= 0.054um
A: 
ULVT_N_S_11 {
@ Space between ULVT_N and (ALL_GT NOT P2) in GATE poly direction with adjacent horizontal space <= 0.040um (ULVT_N vertical edge length = 0.073~0.15um, between two consecutive 90-270 degree coners) >= 0.054um
 y1 = EXT [ALL_GT_NOT_P2] ULVT_N_convex_90_270_eqgt_073_lteq_150_v_edges <= 0.040 ABUT<90 OPPOSITE
 y2 = EXT [ULVT_N_h_edges] ULVT_N_convex_90_270_eqgt_073_lteq_150_v_edges < 0.005 ABUT==90 INTERSECTING ONLY

 z1 = ULVT_N_h_edges TOUCH EDGE y2
 z2 = EXT ALL_GT_NOT_P2 z1 < 0.054 ABUT<90 OPPOSITE REGION
 z3 = EXPAND EDGE y1 INSIDE BY 0.005 EXTEND BY 0.005
 err1 = z2 INTERACT z3
 err1 NOT INSIDE SealR_NOT_BULK
}

//ULVT_P

Q: Space between ULVT_P, single-point-interaction is allowed >= 0.192um
    DRC waive:
    1) ULVT_P one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
    3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
ULVT_P_S_1 {
@ Space between ULVT_P, single-point-interaction is allowed >= 0.192um
@ DRC waive:
@ 1) ULVT_P one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
@ 3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = EXT [ULVT_P] < 0.192 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = EXT [ULVT_P] < 0.192 CORNER
 y3 = EXT [ULVT_P_v_edges] >= 0.09 < 0.107 PROJ == 0
 y4 = EXT [ULVT_P_v_edges] >= 0.18 < 0.213 PROJ == 0
 y5 = EXT [ULVT_P_h_edges] >= 0.09 < 0.107 PROJ == 0
 y6 = EXT [ULVT_P_h_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = (y3 OR EDGE y4) OR EDGE (y5 OR EDGE y6)
 w_all = ULVT_P_rvs_90_90_jog_180_135_144 OR EDGE ULVT_P_90_90_jog_180_135_144

 z1 = w_all COIN EDGE ULVT_P_h_edges
 z2 = ULVT_P_rvs COIN EDGE ULVT_P_v_edges
 z3 = INT [z2] z1 < 0.005 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE z3
 err2 = (y2 COIN EDGE ULVT_P_convex_corner) NOT COIN EDGE y_all
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between ULVT_P in S/D direction, single-point-interaction is allowed >= 0.27um
     DRC waive:
    1) ULVT_P one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
    3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
ULVT_P_S_2 {
@ Space between ULVT_P in S/D direction, single-point-interaction is allowed >= 0.27um
@ DRC waive:
@ 1) ULVT_P one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 w_all = ULVT_P_90_90_jog_180_192_225_240_135_144 OR EDGE ULVT_P_rvs_90_90_jog_180_192_225_240_135_144
 y1 = ANGLE (EXT [ULVT_P] < 0.27 ABUT<90 OPPOSITE EXTENDED 0.001) == 90
 y2 = EXT [ULVT_P_v_edges] >= 0.09 < 0.107 PROJ == 0
 y3 = EXT [ULVT_P_v_edges] >= 0.18 < 0.213 PROJ == 0
 y4 = y2 OR EDGE y3

 z1 = ANGLE ULVT_P_rvs == 0
 z2 = w_all COIN EDGE z1
 z3 = ANGLE ULVT_P_rvs == 90
 z4 = INT [z3] z2 < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y4) NOT TOUCH EDGE z4
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between ULVT_P when PRL >= 0.29um. >= 0.248um
A: 
ULVT_P_S_4 {
@ Space between ULVT_P when PRL >= 0.29um. >= 0.248um
 Layer_area = EXT ULVT_P < 0.248 OPPOSITE REGION
 err1 = Layer_area ENCLOSE RECTANGLE 0.001 0.29 ORTHOGONAL ONLY
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_P in GATE poly direction when ULVT_P point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction >= 0.238um
A: 
ULVT_P_S_5 {
@ Space between ULVT_P in GATE poly direction when ULVT_P point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction >= 0.238um
 err1 = EXT ULVT_P_h_edges_singular_point ULVT_P_h_edges < 0.238 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK

 y1 = ULVT_P_convex_eqlt_1_edges COIN EDGE ULVT_P_h_edges
 y2 = ULVT_P COIN EDGE (EXPAND EDGE (y1 COIN EDGE ULVT_P_concave_corner) INSIDE BY 0.001 OUTSIDE BY 0.001)
 y3 = INT [y2] >= 0.09 <= 0.106+0.0005 ABUT<90 PROJ == 0
 y4 = INT [y2] >= 0.18 <= 0.212+0.0005 ABUT<90 PROJ == 0
 y5 = ULVT_P_concave_corner WITH EDGE (ULVT_P_concave_corner COIN EDGE (y3 OR EDGE y4))
 y6 = ULVT_P_h_edges TOUCH EDGE y5
 err2 = EXT ULVT_P_h_edges y6 < 0.238 ABUT<90 OPPOSITE REGION
 err3 = (LENGTH ((ULVT_P_v_edges TOUCH EDGE y5) TOUCH EDGE ULVT_P_convex_eq_0_edges) < 0.238) EXPAND EDGE INSIDE BY 0.002
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_P and ALL_AA (vertical edge abut AA edge is allowed) >= 0.045um
A: 
ULVT_P_S_6 {
@ Space between ULVT_P and ALL_AA (vertical edge abut AA edge is allowed) >= 0.045um
 CHECK_RAW = EXT ULVT_P ALL_AA < 0.045 ABUT<90 SINGULAR
 WAIVE_CRN = ULVT_P COIN OUTSIDE EDGE ALL_AA_v_edges
 err1 = DFM COPY (DFM PROPERTY CHECK_RAW WAIVE_CRN ABUT ALSO OVERLAP MULTI SPLIT [-= count(WAIVE_CRN)] == 0) REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_P and ALL_AA in GATE poly direction >= 0.048um
A: 
ULVT_P_S_6a {
@ Space between ULVT_P and ALL_AA in GATE poly direction >= 0.048um
 err1 = EXT ULVT_P ALL_AA_h_edges < 0.048 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_P and (ALL_GT NOT P2) (ALL_GT width < 0.07um), except small ALL_GT jog <= 0.004um. >= 0.024um
A: 
ULVT_P_S_7 {
@ Space between ULVT_P and (ALL_GT NOT P2) (ALL_GT width < 0.07um), except small ALL_GT jog <= 0.004um. >= 0.024um
 err1 = EXT ULVT_P ALL_GT_NOT_P2_not_jog_lteq_004 < 0.024 ABUT<90 REGION MEASURE ALL  //;minimum
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_P and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) >= 0.034um
A: 
ULVT_P_S_7a {
@ Space between ULVT_P and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) >= 0.034um
 err1 = EXT ULVT_P (ALL_GT_eqgt_070 NOT P2) < 0.034 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_P and (ALL_GT NOT P2) (ALL_GT width > 0.09um) >= 0.058um
A: 
ULVT_P_S_7b {
@ Space between ULVT_P and (ALL_GT NOT P2) (ALL_GT width > 0.09um) >= 0.058um
 err1 = EXT ULVT_P ALL_GT_NOT_P2_gt_090 < 0.058 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_P and (ALL_GT NOT P2) (ALL_GT width < 0.07um) in S/D direction >= 0.035um
A: 
ULVT_P_S_8 {
@ Space between ULVT_P and (ALL_GT NOT P2) (ALL_GT width < 0.07um) in S/D direction >= 0.035um
 err1 = EXT ALL_GT_NOT_P2 ULVT_P_v_edges < 0.035 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_P and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) in S/D direction >= 0.058um
A: 
ULVT_P_S_8a {
@ Space between ULVT_P and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) in S/D direction >= 0.058um
 err1 = EXT ULVT_P_v_edges ALL_GT_NOT_P2_eqgt_070 < 0.058 ABUT<90 OPPOSITE REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_P and GATE (when channel length = 0.016/0.018/0.02um) respectively in S/D direction (GATE CUT ULVT_P is not allowed), except GT_P96 region >= 0.082/0.081/0.08um
A: 
ULVT_P_S_9a {
@ Space between ULVT_P and GATE (when channel length = 0.016/0.018/0.02um) respectively in S/D direction (GATE CUT ULVT_P is not allowed), except GT_P96 region >= 0.082/0.081/0.08um
 err1 = DFM COPY (DFM SPACE GATE_LE_16 ULVT_P < 0.082 BY EXT HORIZONTAL MEASURE ALL) REGION
 err2 = DFM COPY (DFM SPACE GATE_LE_18 ULVT_P < 0.081 BY EXT HORIZONTAL MEASURE ALL) REGION
 err3 = DFM COPY (DFM SPACE GATE_LE_20 ULVT_P < 0.080 BY EXT HORIZONTAL MEASURE ALL) REGION
 err4 = GATE CUT ULVT_P

 err1 NOT INSIDE GT_P96
 err2 NOT INSIDE GT_P96
 err3 NOT INSIDE GT_P96
 err4 NOT INSIDE GT_P96
}

Q: Space between ULVT_P and GATE (when channel length = 0.016/0.018/0.02/0.022/0.024um, INSIDE GT_P96) in S/D direction (GATE CUT ULVT_P is not allowed) >= 0.088/0.087/0.086/0.085/0.084um
A: 
ULVT_P_S_9b {
@ Space between ULVT_P and GATE (when channel length = 0.016/0.018/0.02/0.022/0.024um, INSIDE GT_P96) in S/D direction (GATE CUT ULVT_P is not allowed) >= 0.088/0.087/0.086/0.085/0.084um
 err1 = DFM COPY (DFM SPACE GATE_LE_16_in_GT_P96 ULVT_P < 0.088 BY EXT HORIZONTAL MEASURE ALL) REGION
 err2 = DFM COPY (DFM SPACE GATE_LE_18_in_GT_P96 ULVT_P < 0.087 BY EXT HORIZONTAL MEASURE ALL) REGION
 err3 = DFM COPY (DFM SPACE GATE_LE_20_in_GT_P96 ULVT_P < 0.086 BY EXT HORIZONTAL MEASURE ALL) REGION
 err4 = DFM COPY (DFM SPACE GATE_LE_22_in_GT_P96 ULVT_P < 0.085 BY EXT HORIZONTAL MEASURE ALL) REGION
 err5 = DFM COPY (DFM SPACE GATE_LE_24_in_GT_P96 ULVT_P < 0.084 BY EXT HORIZONTAL MEASURE ALL) REGION
 err6 = GATE CUT ULVT_P

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
 err6 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_P vertical edge (edge length <= 0.238um between two concave corners with both sides length >= 0.09um) and ((GT AND GTMK1) OR GATE) in S/D direction >= 0.079um
A: 
ULVT_P_S_10 {
@ Space between ULVT_P vertical edge (edge length <= 0.238um between two concave corners with both sides length >= 0.09um) and ((GT AND GTMK1) OR GATE) in S/D direction >= 0.079um
 check_RAW = CONVEX EDGE ULVT_P ANGLE1 == 270 LENGTH1 >= 0.09 ANGLE2 == 270 LENGTH2 >= 0.09 WITH LENGTH <= 0.238
 check_TMP = ANGLE check_RAW == 90
 err1 = EXT (OR GATE_raw GT_and_GTMK1) check_TMP < 0.079 ABUT<90 OPPOSITE REGION  //;including edge GATE
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ULVT_P and (ALL_GT NOT P2) in GATE poly direction with adjacent horizontal space <= 0.04um (ULVT_P vertical edge length = 0.073~0.15um, between two consecutive 90-270 degree coners) >= 0.054um
A: 
ULVT_P_S_11 {
@ Space between ULVT_P and (ALL_GT NOT P2) in GATE poly direction with adjacent horizontal space <= 0.04um (ULVT_P vertical edge length = 0.073~0.15um, between two consecutive 90-270 degree coners) >= 0.054um
 y1 = EXT [ALL_GT_NOT_P2] ULVT_P_convex_90_270_eqgt_073_lteq_150_v_edges <= 0.040 ABUT<90 OPPOSITE
 y2 = EXT [ULVT_P_h_edges] ULVT_P_convex_90_270_eqgt_073_lteq_150_v_edges < 0.005 ABUT==90 INTERSECTING ONLY

 z1 = ULVT_P_h_edges TOUCH EDGE y2
 z2 = EXT ALL_GT_NOT_P2 z1 < 0.054 ABUT<90 OPPOSITE REGION
 z3 = EXPAND EDGE y1 INSIDE BY 0.005 EXTEND BY 0.005
 err1 = z2 INTERACT z3
 err1 NOT INSIDE SealR_NOT_BULK
}

//LFN_N

Q: Space between LFN_N, single-point-interaction is allowed >= 0.192um
     DRC waive:
    1) LFN_N one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
    3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LFN_N_S_1 {
@ Space between LFN_N, single-point-interaction is allowed >= 0.192um
@ DRC waive:
@ 1) LFN_N one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
@ 3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = EXT [LFN_N] < 0.192 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = EXT [LFN_N] < 0.192 CORNER
 y3 = EXT [LFN_N_v_edges] >= 0.09 < 0.107 PROJ == 0
 y4 = EXT [LFN_N_v_edges] >= 0.18 < 0.213 PROJ == 0
 y5 = EXT [LFN_N_h_edges] >= 0.09 < 0.107 PROJ == 0
 y6 = EXT [LFN_N_h_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = (y3 OR EDGE y4) OR EDGE (y5 OR EDGE y6)
 w_all = LFN_N_rvs_90_90_jog_180_135_144 OR EDGE LFN_N_90_90_jog_180_135_144

 z1 = w_all COIN EDGE LFN_N_h_edges
 z2 = LFN_N_rvs COIN EDGE LFN_N_v_edges
 z3 = INT [z2] z1 < 0.005 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE z3
 err2 = (y2 COIN EDGE LFN_N_convex_corner) NOT COIN EDGE y_all
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between LFN_N in S/D direction, single-point-interaction is allowed >= 0.27um
    DRC waive:
    1) LFN_N one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
    3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LFN_N_S_2 {
@ Space between LFN_N in S/D direction, single-point-interaction is allowed >= 0.27um
@ DRC waive:
@ 1) LFN_N one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 w_all = LFN_N_90_90_jog_180_192_225_240_135_144 OR EDGE LFN_N_rvs_90_90_jog_180_192_225_240_135_144
 y1 = ANGLE (EXT [LFN_N] < 0.27 ABUT<90 OPPOSITE EXTENDED 0.001) == 90
 y2 = EXT [LFN_N_v_edges] >= 0.09 < 0.107 PROJ == 0
 y3 = EXT [LFN_N_v_edges] >= 0.18 < 0.213 PROJ == 0
 y4 = y2 OR EDGE y3

 z1 = ANGLE LFN_N_rvs == 0
 z2 = w_all COIN EDGE z1
 z3 = ANGLE LFN_N_rvs == 90
 z4 = INT [z3] z2 < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y4) NOT TOUCH EDGE z4
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between LFN_N in S/D direction, when just one LFN_N vertical edge CUT (GTMK1 OR AR) and abut LVT_N or ULVT_N >= 0.315um
     DRC waive:
    1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
    2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LFN_N_S_3a {
@ Space between LFN_N in S/D direction, when just one LFN_N vertical edge CUT (GTMK1 OR AR) and abut LVT_N or ULVT_N >= 0.315um
@ DRC waive:
@ 1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 check_edges = (LFN_N_inside_AA_side_mark_v_edges TOUCH EDGE LVT_N) OR EDGE (LFN_N_inside_AA_side_mark_v_edges TOUCH EDGE ULVT_N)
 waive_corner = EXT LFN_N_270_270_jog_180_192_225_240_135_144_h_edges check_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = check_edges NOT TOUCH EDGE waive_corner
 err1 = EXT check_corner LFN_N_v_edges < 0.315 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_N in S/D direction, when both LFN_N vertical edge CUT (GTMK1 OR AR) and abut LVT_N or ULVT_N >= 0.36um
     DRC waive:
     1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
     2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LFN_N_S_3b {
@ Space between LFN_N in S/D direction, when both LFN_N vertical edge CUT (GTMK1 OR AR) and abut LVT_N or ULVT_N >= 0.36um
@ DRC waive:
@ 1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 check_edges = (LFN_N_inside_AA_side_mark_v_edges TOUCH EDGE LVT_N) OR EDGE (LFN_N_inside_AA_side_mark_v_edges TOUCH EDGE ULVT_N)
 waive_corner = EXT LFN_N_270_270_jog_180_192_225_240_135_144_h_edges check_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = check_edges NOT TOUCH EDGE waive_corner
 err1 = EXT check_corner < 0.36 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_N when PRL >= 0.29um. >= 0.248um
A: 
LFN_N_S_4 {
@ Space between LFN_N when PRL >= 0.29um. >= 0.248um
 Layer_area = EXT LFN_N < 0.248 OPPOSITE REGION
 err1 = Layer_area ENCLOSE RECTANGLE 0.001 0.29 ORTHOGONAL ONLY
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_N in GATE poly direction when LFN_N point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction >= 0.238um
A: 
LFN_N_S_5 {
@ Space between LFN_N in GATE poly direction when LFN_N point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction >= 0.238um
 err1 = EXT LFN_N_h_edges_singular_point LFN_N_h_edges < 0.238 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK

 y1 = LFN_N_convex_eqlt_1_edges COIN EDGE LFN_N_h_edges
 y2 = LFN_N COIN EDGE (EXPAND EDGE (y1 COIN EDGE LFN_N_concave_corner) INSIDE BY 0.001 OUTSIDE BY 0.001)
 y3 = INT [y2] >= 0.09 <= 0.106+0.0005 ABUT<90 PROJ == 0
 y4 = INT [y2] >= 0.18 <= 0.212+0.0005 ABUT<90 PROJ == 0
 y5 = LFN_N_concave_corner WITH EDGE (LFN_N_concave_corner COIN EDGE (y3 OR EDGE y4))
 y6 = LFN_N_h_edges TOUCH EDGE y5
 err2 = EXT LFN_N_h_edges y6 < 0.238 ABUT<90 OPPOSITE REGION
 err3 = (LENGTH ((LFN_N_v_edges TOUCH EDGE y5) TOUCH EDGE LFN_N_convex_eq_0_edges) < 0.238) EXPAND EDGE INSIDE BY 0.002
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_N and ALL_AA (vertical edge abut AA edge is allowed) >= 0.045um
A: 
LFN_N_S_6 {
@ Space between LFN_N and ALL_AA (vertical edge abut AA edge is allowed) >= 0.045um
 CHECK_RAW = EXT LFN_N ALL_AA < 0.045 ABUT<90 SINGULAR
 WAIVE_CRN = LFN_N COIN OUTSIDE EDGE ALL_AA_v_edges
 err1 = DFM COPY (DFM PROPERTY CHECK_RAW WAIVE_CRN ABUT ALSO OVERLAP MULTI SPLIT [-= count(WAIVE_CRN)] == 0) REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_N and ALL_AA in GATE poly direction >= 0.048um
A: 
LFN_N_S_6a {
@ Space between LFN_N and ALL_AA in GATE poly direction >= 0.048um
 err1 = EXT LFN_N ALL_AA_h_edges < 0.048 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_N and (ALL_GT NOT P2) (ALL_GT width < 0.07um), except small ALL_GT jogs <= 0.004um. >= 0.024um
A: 
LFN_N_S_7 {
@ Space between LFN_N and (ALL_GT NOT P2) (ALL_GT width < 0.07um), except small ALL_GT jogs <= 0.004um. >= 0.024um
 err1 = EXT LFN_N ALL_GT_NOT_P2_not_jog_lteq_004 < 0.024 ABUT<90 REGION MEASURE ALL  //;minimum
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_N and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) >= 0.034um
A: 
LFN_N_S_7a {
@ Space between LFN_N and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) >= 0.034um
 err1 = EXT LFN_N (ALL_GT_eqgt_070 NOT P2) < 0.034 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_N and (ALL_GT NOT P2) (ALL_GT width > 0.09um) >= 0.058um
A: 
LFN_N_S_7b {
@ Space between LFN_N and (ALL_GT NOT P2) (ALL_GT width > 0.09um) >= 0.058um
 err1 = EXT LFN_N ALL_GT_NOT_P2_gt_090 < 0.058 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_N and (ALL_GT NOT P2) (ALL_GT width < 0.07um) in S/D direction >= 0.035um
A: 
LFN_N_S_8 {
@ Space between LFN_N and (ALL_GT NOT P2) (ALL_GT width < 0.07um) in S/D direction >= 0.035um
 err1 = EXT ALL_GT_NOT_P2 LFN_N_v_edges < 0.035 ABUT<90 OPPOSITE REGION //;minimum
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_N and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) in S/D direction >= 0.058um
A: 
LFN_N_S_8a {
@ Space between LFN_N and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) in S/D direction >= 0.058um
 err1 = EXT LFN_N_v_edges ALL_GT_NOT_P2_eqgt_070 < 0.058 ABUT<90 OPPOSITE REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_N and GATE (when channel length = 0.016/0.018/0.02um) respectively in S/D direction, (GATE CUT LFN_N is not allowed), except GT_P96 region >= 0.082/0.081/0.08um
A: 
LFN_N_S_9a {
@ Space between LFN_N and GATE (when channel length = 0.016/0.018/0.02um) respectively in S/D direction, (GATE CUT LFN_N is not allowed), except GT_P96 region >= 0.082/0.081/0.08um
 err1 = DFM COPY (DFM SPACE GATE_LE_16 LFN_N < 0.082 BY EXT HORIZONTAL MEASURE ALL) REGION
 err2 = DFM COPY (DFM SPACE GATE_LE_18 LFN_N < 0.081 BY EXT HORIZONTAL MEASURE ALL) REGION
 err3 = DFM COPY (DFM SPACE GATE_LE_20 LFN_N < 0.080 BY EXT HORIZONTAL MEASURE ALL) REGION
 err4 = GATE CUT LFN_N

 err1 NOT INSIDE GT_P96
 err2 NOT INSIDE GT_P96
 err3 NOT INSIDE GT_P96
 err4 NOT INSIDE GT_P96
}

Q: Space between LFN_N and GATE (when channel length = 0.016/0.018/0.02/0.022/0.024um, INSIDE GT_P96) in S/D direction (GATE CUT LFN_N is not allowed) >= 0.088/0.087/0.086/0.085/0.084um
A: 
LFN_N_S_9b {
@ Space between LFN_N and GATE (when channel length = 0.016/0.018/0.02/0.022/0.024um, INSIDE GT_P96) in S/D direction (GATE CUT LFN_N is not allowed) >= 0.088/0.087/0.086/0.085/0.084um
 err1 = DFM COPY (DFM SPACE GATE_LE_16_in_GT_P96 LFN_N < 0.088 BY EXT HORIZONTAL MEASURE ALL) REGION
 err2 = DFM COPY (DFM SPACE GATE_LE_18_in_GT_P96 LFN_N < 0.087 BY EXT HORIZONTAL MEASURE ALL) REGION
 err3 = DFM COPY (DFM SPACE GATE_LE_20_in_GT_P96 LFN_N < 0.086 BY EXT HORIZONTAL MEASURE ALL) REGION
 err4 = DFM COPY (DFM SPACE GATE_LE_22_in_GT_P96 LFN_N < 0.085 BY EXT HORIZONTAL MEASURE ALL) REGION
 err5 = DFM COPY (DFM SPACE GATE_LE_24_in_GT_P96 LFN_N < 0.084 BY EXT HORIZONTAL MEASURE ALL) REGION
 err6 = GATE CUT LFN_N

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
 err6 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_N vertical edge (edge length <= 0.238um between two concave corners with both sides length >= 0.09um) and ((GT AND GTMK1) OR GATE) in S/D direction >= 0.079um
A: 
LFN_N_S_10 {
@ Space between LFN_N vertical edge (edge length <= 0.238um between two concave corners with both sides length >= 0.09um) and ((GT AND GTMK1) OR GATE) in S/D direction >= 0.079um
 check_RAW = CONVEX EDGE LFN_N ANGLE1 == 270 LENGTH1 >= 0.09 ANGLE2 == 270 LENGTH2 >= 0.09 WITH LENGTH <= 0.238
 check_TMP = ANGLE check_RAW == 90
 err1 = EXT (OR GATE_raw GT_and_GTMK1) check_TMP < 0.079 ABUT<90 OPPOSITE REGION  //;including edge GATE
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_N and (ALL_GT NOT P2) in GATE poly direction with adjacent horizontal space to (ALL_GT NOT P2) <= 0.04um (LFN_N vertical edge length = 0.073~0.150um,
    between two consecutive 90-270 degree coners) >= 0.054um
A: 
LFN_N_S_11 {
@ Space between LFN_N and (ALL_GT NOT P2) in GATE poly direction with adjacent horizontal space to (ALL_GT NOT P2) <= 0.04um (LFN_N vertical edge length = 0.073~0.150um,
@ between two consecutive 90-270 degree coners) >= 0.054um
 y1 = EXT [ALL_GT_NOT_P2] LFN_N_convex_90_270_eqgt_073_lteq_150_v_edges <= 0.040 ABUT<90 OPPOSITE
 y2 = EXT [LFN_N_h_edges] LFN_N_convex_90_270_eqgt_073_lteq_150_v_edges < 0.005 ABUT==90 INTERSECTING ONLY

 z1 = LFN_N_h_edges TOUCH EDGE y2
 z2 = EXT ALL_GT_NOT_P2 z1 < 0.054 ABUT<90 OPPOSITE REGION
 z3 = EXPAND EDGE y1 INSIDE BY 0.005 EXTEND BY 0.005
 err1 = z2 INTERACT z3
 err1 NOT INSIDE SealR_NOT_BULK
}

//LFN_P

Q: Space between LFN_P, single-point-interaction is allowed >= 0.192um
    DRC waive:
    1) LFN_P one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
    3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LFN_P_S_1 {
@ Space between LFN_P, single-point-interaction is allowed >= 0.192um
@ DRC waive:
@ 1) LFN_P one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.18um in S/D direction
@ 3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 y1 = EXT [LFN_P] < 0.192 ABUT<90 OPPOSITE EXTENDED 0.001
 y2 = EXT [LFN_P] < 0.192 CORNER
 y3 = EXT [LFN_P_v_edges] >= 0.09 < 0.107 PROJ == 0
 y4 = EXT [LFN_P_v_edges] >= 0.18 < 0.213 PROJ == 0
 y5 = EXT [LFN_P_h_edges] >= 0.09 < 0.107 PROJ == 0
 y6 = EXT [LFN_P_h_edges] >= 0.18 < 0.213 PROJ == 0
 y_all = (y3 OR EDGE y4) OR EDGE (y5 OR EDGE y6)
 w_all = LFN_P_rvs_90_90_jog_180_135_144 OR EDGE LFN_P_90_90_jog_180_135_144

 z1 = w_all COIN EDGE LFN_P_h_edges
 z2 = LFN_P_rvs COIN EDGE LFN_P_v_edges
 z3 = INT [z2] z1 < 0.005 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y_all) NOT TOUCH EDGE z3
 err2 = (y2 COIN EDGE LFN_P_convex_corner) NOT COIN EDGE y_all
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between LFN_P in S/D direction, single-point-interaction is allowed >= 0.27um
    DRC waive:
    1) LFN_P one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
    2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
    3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LFN_P_S_2 {
@ Space between LFN_P in S/D direction, single-point-interaction is allowed >= 0.27um
@ DRC waive:
@ 1) LFN_P one-track space within the range of 0.09~0.106um, 0.18~0.212um when PRL = 0um
@ 2) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 3) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 w_all = LFN_P_90_90_jog_180_192_225_240_135_144 OR EDGE LFN_P_rvs_90_90_jog_180_192_225_240_135_144
 y1 = ANGLE (EXT [LFN_P] < 0.27 ABUT<90 OPPOSITE EXTENDED 0.001) == 90
 y2 = EXT [LFN_P_v_edges] >= 0.09 < 0.107 PROJ == 0
 y3 = EXT [LFN_P_v_edges] >= 0.18 < 0.213 PROJ == 0
 y4 = y2 OR EDGE y3

 z1 = ANGLE LFN_P_rvs == 0
 z2 = w_all COIN EDGE z1
 z3 = ANGLE LFN_P_rvs == 90
 z4 = INT [z3] z2 < 0.001 ABUT==90 INTERSECTING ONLY
 err1 = (y1 NOT COIN EDGE y4) NOT TOUCH EDGE z4
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q:  Space between LFN_P in S/D direction, when just one LFN_P vertical edge CUT (GTMK1 OR AR) and abut LVT_P or ULVT_P >= 0.315um
     DRC waive:
     1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
     2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LFN_P_S_3a {
@ Space between LFN_P in S/D direction, when just one LFN_P vertical edge CUT (GTMK1 OR AR) and abut LVT_P or ULVT_P >= 0.315um
@ DRC waive:
@ 1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 check_edges = (LFN_P_inside_AA_side_mark_v_edges TOUCH EDGE LVT_P) OR EDGE (LFN_P_inside_AA_side_mark_v_edges TOUCH EDGE ULVT_P)
 waive_corner = EXT LFN_P_270_270_jog_180_192_225_240_135_144_h_edges check_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = check_edges NOT TOUCH EDGE waive_corner
 err1 = EXT check_corner LFN_P_v_edges < 0.315 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_P in S/D direction, when both LFN_P’s vertical edges CUT (GTMK1 OR AR) and abut LVT_P or ULVT_P >= 0.36um
     DRC waive:
    1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
    2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
A: 
LFN_P_S_3b {
@ Space between LFN_P in S/D direction, when both LFN_P’s vertical edges CUT (GTMK1 OR AR) and abut LVT_P or ULVT_P >= 0.36um
@ DRC waive:
@ 1) Jog space adjacent to edge (length <= 0.048um, between two consecutive 90-270 degree corners) = 0.180/0.192/0.225/0.24um in S/D direction
@ 2) Jog space adjacent to edge (length = 0.002um, between two consecutive 90-270 degree corners) = 0.135/0.144um in S/D direction
 check_edges = (LFN_P_inside_AA_side_mark_v_edges TOUCH EDGE LVT_P) OR EDGE (LFN_P_inside_AA_side_mark_v_edges TOUCH EDGE ULVT_P)
 waive_corner = EXT LFN_P_270_270_jog_180_192_225_240_135_144_h_edges check_edges <= 0.001 ABUT==90 INTERSECTING ONLY REGION
 check_corner = check_edges NOT TOUCH EDGE waive_corner
 err1 = EXT check_corner < 0.36 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_P when PRL >= 0.29um. >= 0.248um
A: 
LFN_P_S_4 {
@ Space between LFN_P when PRL >= 0.29um. >= 0.248um
 Layer_area = EXT LFN_P < 0.248 OPPOSITE REGION
 err1 = Layer_area ENCLOSE RECTANGLE 0.001 0.29 ORTHOGONAL ONLY
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_P in GATE poly direction when LFN_P point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction >= 0.238um
A: 
LFN_P_S_5 {
@ Space between LFN_P in GATE poly direction when LFN_P point touch or horizontal width in the range of 0.09~0.106um, 0.18~0.212um while PRL = 0um in GATE poly direction >= 0.238um
 err1 = EXT LFN_P_h_edges_singular_point LFN_P_h_edges < 0.238 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK

 y1 = LFN_P_convex_eqlt_1_edges COIN EDGE LFN_P_h_edges
 y2 = LFN_P COIN EDGE (EXPAND EDGE (y1 COIN EDGE LFN_P_concave_corner) INSIDE BY 0.001 OUTSIDE BY 0.001)
 y3 = INT [y2] >= 0.09 <= 0.106+0.0005 ABUT<90 PROJ == 0
 y4 = INT [y2] >= 0.18 <= 0.212+0.0005 ABUT<90 PROJ == 0
 y5 = LFN_P_concave_corner WITH EDGE (LFN_P_concave_corner COIN EDGE (y3 OR EDGE y4))
 y6 = LFN_P_h_edges TOUCH EDGE y5
 err2 = EXT LFN_P_h_edges y6 < 0.238 ABUT<90 OPPOSITE REGION
 err3 = (LENGTH ((LFN_P_v_edges TOUCH EDGE y5) TOUCH EDGE LFN_P_convex_eq_0_edges) < 0.238) EXPAND EDGE INSIDE BY 0.002
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_P and ALL_AA (vertical edge abut AA edge is allowed) >= 0.045um
A: 
LFN_P_S_6 {
@ Space between LFN_P and ALL_AA (vertical edge abut AA edge is allowed) >= 0.045um
 CHECK_RAW = EXT LFN_P ALL_AA < 0.045 ABUT<90 SINGULAR
 WAIVE_CRN = LFN_P COIN OUTSIDE EDGE ALL_AA_v_edges
 err1 = DFM COPY (DFM PROPERTY CHECK_RAW WAIVE_CRN ABUT ALSO OVERLAP MULTI SPLIT [-= count(WAIVE_CRN)] == 0) REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_P and ALL_AA in GATE poly direction >= 0.048um
A:
LFN_P_S_6a {
@ Space between LFN_P and ALL_AA in GATE poly direction >= 0.048um
 err1 = EXT LFN_P ALL_AA_h_edges < 0.048 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_P and (ALL_GT NOT P2) (ALL_GT width < 0.07um), except small ALL_GT jog <= 0.004um. >= 0.024um
A: 
LFN_P_S_7 {
@ Space between LFN_P and (ALL_GT NOT P2) (ALL_GT width < 0.07um), except small ALL_GT jog <= 0.004um. >= 0.024um
 err1 = EXT LFN_P ALL_GT_NOT_P2_not_jog_lteq_004 < 0.024 ABUT<90 REGION MEASURE ALL  //;minimum
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_P and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) >= 0.034um
A: 
LFN_P_S_7a {
@ Space between LFN_P and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) >= 0.034um
 err1 = EXT LFN_P (ALL_GT_eqgt_070 NOT P2) < 0.034 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_P and (ALL_GT NOT P2) (ALL_GT width > 0.09um) >= 0.058um
A: 
LFN_P_S_7b {
@ Space between LFN_P and (ALL_GT NOT P2) (ALL_GT width > 0.09um) >= 0.058um
 err1 = EXT LFN_P ALL_GT_NOT_P2_gt_090 < 0.058 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_P and (ALL_GT NOT P2) (ALL_GT width < 0.07um) in S/D direction >= 0.035um
A: 
LFN_P_S_8 {
@ Space between LFN_P and (ALL_GT NOT P2) (ALL_GT width < 0.07um) in S/D direction >= 0.035um
 err1 = EXT ALL_GT_NOT_P2 LFN_P_v_edges < 0.035 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_P and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) in S/D direction >= 0.058um
A: 
LFN_P_S_8a {
@ Space between LFN_P and (ALL_GT NOT P2) (ALL_GT width >= 0.07um) in S/D direction >= 0.058um
 err1 = EXT LFN_P_v_edges ALL_GT_NOT_P2_eqgt_070 < 0.058 ABUT<90 OPPOSITE REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_P and GATE (when channel length = 0.016/0.018/0.02um) respectively in S/D direction (GATE CUT LFN_P is not allowed), except GT_P96 region >= 0.082/0.081/0.08um
A: 
LFN_P_S_9a {
@ Space between LFN_P and GATE (when channel length = 0.016/0.018/0.02um) respectively in S/D direction (GATE CUT LFN_P is not allowed), except GT_P96 region >= 0.082/0.081/0.08um
 err1 = DFM COPY (DFM SPACE GATE_LE_16 LFN_P < 0.082 BY EXT HORIZONTAL MEASURE ALL) REGION
 err2 = DFM COPY (DFM SPACE GATE_LE_18 LFN_P < 0.081 BY EXT HORIZONTAL MEASURE ALL) REGION
 err3 = DFM COPY (DFM SPACE GATE_LE_20 LFN_P < 0.080 BY EXT HORIZONTAL MEASURE ALL) REGION
 err4 = GATE CUT LFN_P

 err1 NOT INSIDE GT_P96
 err2 NOT INSIDE GT_P96
 err3 NOT INSIDE GT_P96
 err4 NOT INSIDE GT_P96
}

Q: Space between LFN_P and GATE (when channel length = 0.016/0.018/0.02/0.022/0.024um, INSIDE GT_P96) in S/D direction (GATE CUT LFN_P is not allowed) >= 0.088/0.087/0.086/0.085/0.084um
A: 
LFN_P_S_9b {
@ Space between LFN_P and GATE (when channel length = 0.016/0.018/0.02/0.022/0.024um, INSIDE GT_P96) in S/D direction (GATE CUT LFN_P is not allowed) >= 0.088/0.087/0.086/0.085/0.084um
 err1 = DFM COPY (DFM SPACE GATE_LE_16_in_GT_P96 LFN_P < 0.088 BY EXT HORIZONTAL MEASURE ALL) REGION
 err2 = DFM COPY (DFM SPACE GATE_LE_18_in_GT_P96 LFN_P < 0.087 BY EXT HORIZONTAL MEASURE ALL) REGION
 err3 = DFM COPY (DFM SPACE GATE_LE_20_in_GT_P96 LFN_P < 0.086 BY EXT HORIZONTAL MEASURE ALL) REGION
 err4 = DFM COPY (DFM SPACE GATE_LE_22_in_GT_P96 LFN_P < 0.085 BY EXT HORIZONTAL MEASURE ALL) REGION
 err5 = DFM COPY (DFM SPACE GATE_LE_24_in_GT_P96 LFN_P < 0.084 BY EXT HORIZONTAL MEASURE ALL) REGION
 err6 = GATE CUT LFN_P

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
 err6 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_P vertical edge (edge length <= 0.238um between two concave corners with both sides length >= 0.09um) and ((GT AND GTMK1) OR GATE) in S/D direction >= 0.079um
A: 
LFN_P_S_10 {
@ Space between LFN_P vertical edge (edge length <= 0.238um between two concave corners with both sides length >= 0.09um) and ((GT AND GTMK1) OR GATE) in S/D direction >= 0.079um
 check_RAW = CONVEX EDGE LFN_P ANGLE1 == 270 LENGTH1 >= 0.09 ANGLE2 == 270 LENGTH2 >= 0.09 WITH LENGTH <= 0.238
 check_TMP = ANGLE check_RAW == 90
 err1 = EXT (OR GATE_raw GT_and_GTMK1) check_TMP < 0.079 ABUT<90 OPPOSITE REGION  //;including edge GATE
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between LFN_P and (ALL_GT NOT P2) in GATE poly direction with adjacent horizontal space <= 0.04um (LFN_P vertical edge length = 0.073~0.15um, between two consecutive 90-270 degree coners) >= 0.054um
A: 
LFN_P_S_11 {
@ Space between LFN_P and (ALL_GT NOT P2) in GATE poly direction with adjacent horizontal space <= 0.04um (LFN_P vertical edge length = 0.073~0.15um, between two consecutive 90-270 degree coners) >= 0.054um
 y1 = EXT [ALL_GT_NOT_P2] LFN_P_convex_90_270_eqgt_073_lteq_150_v_edges <= 0.040 ABUT<90 OPPOSITE
 y2 = EXT [LFN_P_h_edges] LFN_P_convex_90_270_eqgt_073_lteq_150_v_edges < 0.005 ABUT==90 INTERSECTING ONLY

 z1 = LFN_P_h_edges TOUCH EDGE y2
 z2 = EXT ALL_GT_NOT_P2 z1 < 0.054 ABUT<90 OPPOSITE REGION
 z3 = EXPAND EDGE y1 INSIDE BY 0.005 EXTEND BY 0.005
 err1 = z2 INTERACT z3
 err1 NOT INSIDE SealR_NOT_BULK
}

//DG

Q: Space between two DGs >= 0.286um
A: 
DG_S_1 {
@ Space between two DGs >= 0.286um
 err1 = EXT DG < 0.286 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DG and GATE along the S/D direction >= 0.313um
A: 
DG_S_2a {
@ Space between DG and GATE along the S/D direction >= 0.313um
 err1 = EXT DG_v_edges GATE < 0.313 ABUT<90 OPPOSITE REGION  //;based on DG.S.1
 err2 = DG_v_edges COIN OUTSIDE EDGE GATE
 err3 = DG INTERACT GATE SINGULAR ONLY

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DG and AA (AA cut DG is not allowed), except pick-up AA >= 0.098um
A: 
DG_S_2b {
@ Space between DG and AA (AA cut DG is not allowed), except pick-up AA >= 0.098um
 err1 = EXT DG AA_NOT_TAP < 0.098 ABUT<90 SINGULAR REGION
 err2 = AA CUT DG
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DG and AA (AA vertical edge extend 1/2 GT width) in S/D direction (AA cut DG is not allowed), except pick-up AA >= 0.116um
A: 
DG_S_2c {
@ Space between DG and AA (AA vertical edge extend 1/2 GT width) in S/D direction (AA cut DG is not allowed), except pick-up AA >= 0.116um
 chk_AA = AA_NOT_TAP OR (edge_gate_AA_uGT NOT INTERACT TAP_RAW)
 err1 = EXT DG_v_edges chk_AA < 0.116 ABUT<90 OPPOSITE REGION
 err2 = chk_AA CUT DG
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DG and DUM_AA (DUM_AA cut DG is not allowed) >= 0.053um
A: 
DG_S_2d {
@ Space between DG and DUM_AA (DUM_AA cut DG is not allowed) >= 0.053um
 err1 = EXT DG DUM_AA < 0.053 ABUT<90 SINGULAR REGION
 err2 = DUM_AA CUT DG
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DG and DUM_AA (AA vertical edge extend 1/2 GT width) in S/D direction (DUM_AA cut DG is not allowed) >= 0.07um
A: 
DG_S_2e {
@ Space between DG and DUM_AA (AA vertical edge extend 1/2 GT width) in S/D direction (DUM_AA cut DG is not allowed) >= 0.07um
 chk_AA = DUM_AA OR edge_gate_dumAA
 err1 = EXT DG_v_edges chk_AA < 0.07 ABUT<90 OPPOSITE REGION
 err2 = DUM_AA CUT DG
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DG and NW (space = 0 is allowed) >= 0.238um
A: 
DG_S_3 {
@ Space between DG and NW (space = 0 is allowed) >= 0.238um
 err1 = EXT DG NW < 0.238 ABUT>0<90 SINGULAR REGION  //;MEASURE ALL, based on DG.S.1, DG.EN.2
 err1 NOT INSIDE SealR_NOT_BULK
}

//GT

Q: GT space, except LOGO and OCOVL region >= 0.07um
A: 
GT_S_1 {
@ GT space, except LOGO and OCOVL region >= 0.07um
 err1 = EXT GT < 0.07 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE OCOVL_LOGO
}

Q: Space between AOP_GT centerline (both AOP_GT width <= 0.02um) in S/D direction, except centerline space > 0.1um case and GT_P96 region = 0.09um
A: 
GT_S_2 {
@ Space between AOP_GT centerline (both AOP_GT width <= 0.02um) in S/D direction, except centerline space > 0.1um case and GT_P96 region = 0.09um
 chk_centerline = INT AOP_GT <= 0.020 OPPOSITE REGION CENTERLINE 0.002
 err1 = DFM COPY (DFM SPACE chk_centerline < 0.088 BY EXT HORIZONTAL) REGION
 err2 = DFM COPY (DFM SPACE chk_centerline > 0.088 <= 0.098 BY EXT HORIZONTAL) REGION
 err1 NOT INSIDE GT_P96
 err2 NOT INSIDE GT_P96
}

Q: Space between AOP_GT centerline (both AOP_GT width <= 0.024um, INSIDE GT_P96) in S/D direction except centerline space > 0.1um. = 0.096um
A: 
GT_S_3a {
@ Space between AOP_GT centerline (both AOP_GT width <= 0.024um, INSIDE GT_P96) in S/D direction except centerline space > 0.1um. = 0.096um
 chk_centerline = INT (AOP_GT NOT OUTSIDE GT_P96) <= 0.024 OPPOSITE REGION CENTERLINE 0.002
 err1 = (DFM COPY (DFM SPACE chk_centerline < 0.094 BY EXT HORIZONTAL) REGION) AND GT_P96
 err2 = (DFM COPY (DFM SPACE chk_centerline > 0.094 <= 0.098 BY EXT HORIZONTAL) REGION) AND GT_P96
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_GT centerline (both AOP_GT width = 0.032um) in S/D direction >= 0.106um
A: 
GT_S_3b {
@ Space between AOP_GT centerline (both AOP_GT width = 0.032um) in S/D direction >= 0.106um
 chk_centerline = INT AOP_GT == 0.032 OPPOSITE REGION CENTERLINE 0.002
 err1 = DFM COPY (DFM SPACE chk_centerline < 0.106 - 0.002 BY EXT HORIZONTAL) REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between two AOP_GT when either AOP_GT width >= 0.07um, except LOGO and OCOVL region >= 0.117um
A: 
GT_S_4 {
@ Space between two AOP_GT when either AOP_GT width >= 0.07um, except LOGO and OCOVL region >= 0.117um
 err1 = EXT AOP_GT AOP_GT_eqgt_070 < 0.117 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE OCOVL_LOGO
}

Q: Space between (AOP_GT NOT OUTSIDE DG) and AOP_GT >= 0.117um
A: 
GT_S_5 {
@ Space between (AOP_GT NOT OUTSIDE DG) and AOP_GT >= 0.117um
 err1 = EXT (AOP_GT NOT OUTSIDE DG) AOP_GT < 0.117 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

ALL_AA_SD_all = (ALL_AA NOT AOP_GT) INTERACT AOP_GT > 1
ALL_AA_SD_all_lt_96_pitch = LENGTH (ANGLE ALL_AA_SD_all == 0) <= 0.096 //;To reduce runtime, here drc exclude GT pitch <= 96 area

Q: Space between AOP_GT (INTERACT the same ALL_AA) in S/D direction, except ESDIO1 and ESDIO2 regions <= 0.120um
A: 
GT_S_6 {
@ Space between AOP_GT (INTERACT the same ALL_AA) in S/D direction, except ESDIO1 and ESDIO2 regions <= 0.120um
 chk_AOP_GT_inAA_EDGE_all = (AOP_GT INSIDE EDGE ALL_AA) COIN EDGE (ALL_AA_SD_all NOT INSIDE ESDIO_all)
 chk_AOP_GT_inAA_EDGE_one_aa = (ALL_AA_SD_all NOT WITH EDGE ALL_AA_SD_all_lt_96_pitch) COIN EDGE chk_AOP_GT_inAA_EDGE_all
 err1 = INT (chk_AOP_GT_inAA_EDGE_one_aa) <= 0.120 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 err1 NOT INSIDE EDGE ESDIO_all
}

Q: Space between the short side of AOP_GT (width <= 0.032um) and AOP_GT when PRL > -0.07um. >= 0.108um
A: 
GT_S_7 {
@ Space between the short side of AOP_GT (width <= 0.032um) and AOP_GT when PRL > -0.07um. >= 0.108um
 chk_AOP_GT_W_sides = LENGTH AOP_GT_eqlt_036 <= 0.032
 chk_AOP_GT_L_sides = AOP_GT COIN EDGE chk_AOP_GT_W_sides
 err1 = EXT chk_AOP_GT_L_sides AOP_GT < 0.108 ABUT<90 REGION OPPOSITE EXTENDED 0.070
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between the long side of ALL_GT (width <= 0.024um) and AOP_GT when PRL > -0.108um. >= 0.07um
A: 
GT_S_8 {
@ Space between the long side of ALL_GT (width <= 0.024um) and AOP_GT when PRL > -0.108um. >= 0.07um
 chk_AOP_GT_W_sides = LENGTH ALL_GT_eqlt_024 <= 0.024
 chk_AOP_GT_L_sides = ALL_GT_eqlt_024 NOT COIN EDGE chk_AOP_GT_W_sides
 err1 = EXT chk_AOP_GT_L_sides AOP_GT < 0.07 ABUT<90 REGION OPPOSITE EXTENDED 0.108
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between the long side of ALL_GT (width = 0.032um) and AOP_GT when PRL > -0.108um. >= 0.072um
A: 
GT_S_8a {
@ Space between the long side of ALL_GT (width = 0.032um) and AOP_GT when PRL > -0.108um. >= 0.072um
 chk_AOP_GT_W_sides = LENGTH ALL_GT_032 == 0.032
 chk_AOP_GT_L_sides = ALL_GT_032 NOT COIN EDGE chk_AOP_GT_W_sides
 err1 = EXT chk_AOP_GT_L_sides AOP_GT < 0.072 ABUT<90 REGION OPPOSITE EXTENDED 0.108
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_GT (width >= 0.07um) and AOP_GT when PRL > -0.117um, except LOGO and OCOVL region >= 0.117um
A: 
GT_S_9 {
@ Space between AOP_GT (width >= 0.07um) and AOP_GT when PRL > -0.117um, except LOGO and OCOVL region >= 0.117um
 err1 = EXT AOP_GT_eqgt_070 AOP_GT < 0.117 ABUT<90 REGION OPPOSITE EXTENDED 0.117
 err1 NOT INSIDE OCOVL_LOGO
}

Q: Space between AOP_GT and AOP_AA >= 0.046um
A: 
GT_S_10 {
@ Space between AOP_GT and AOP_AA >= 0.046um
 err1 = EXT AOP_GT AOP_AA < 0.046 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}




Q: Space between (ALL_GT NOT ALL_P2), except (NODMF su 1um), (MARKS su 1um), RESP1, LOGO, OCOVL regions <= 1.25um
    This rule is a local density related rule
    DRC flags (((Chip NOT (ALL_GT NOT ALL_P2)) sd 0.625um) su 0.625um) region greater than 1.25*1.25um
A: 
GT_S_13 {
@ Space between (ALL_GT NOT ALL_P2), except (NODMF su 1um), (MARKS su 1um), RESP1, LOGO, OCOVL regions <= 1.25um
@ This rule is a local density related rule
@ DRC flags (((Chip NOT (ALL_GT NOT ALL_P2)) sd 0.625um) su 0.625um) region greater than 1.25*1.25um
 waive_AREA = OR MARKS_SIZE_1 NODMF_SIZE_1 RESP1 LOGO OCOVL
 check_AREA = (DRC:1 NOT ALL_GT_NOT_P2_ALL) NOT waive_AREA
 err1 = SIZE check_AREA BY 1.25/2 UNDEROVER
 err1 NOT INSIDE SealR_NOT_BULK
}


Q: Space between (ALL_GT NOT ALL_P2) INSIDE RESP1 region <= 2.1um
    This rule is a local density related rule
    DRC flags ((((Chip AND RESP1) NOT (ALL_GT NOT ALL_P2)) sd 1.05um) su 1.05um) region greater than 2.1*2.1um
A: 
GT_S_14 {
@ Space between (ALL_GT NOT ALL_P2) INSIDE RESP1 region <= 2.1um
@ This rule is a local density related rule
@ DRC flags ((((Chip AND RESP1) NOT (ALL_GT NOT ALL_P2)) sd 1.05um) su 1.05um) region greater than 2.1*2.1um
 err1 = SIZE ((DRC:1 AND RESP1) NOT ALL_GT_NOT_P2_ALL) BY 2.1/2 UNDEROVER
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ((GATE SIZING 0.02um) AND GT) (channel length = 0.016um) and neighboring AOP_GT for core NMOS/PMOS, except ESDIO1, ESDIO2 and GT_P96 regions = 0.072~0.074um
A: 
GT_S_15b {
@ Space between ((GATE SIZING 0.02um) AND GT) (channel length = 0.016um) and neighboring AOP_GT for core NMOS/PMOS, except ESDIO1, ESDIO2 and GT_P96 regions = 0.072~0.074um
 y1 = GATE_LE_16 NOT INSIDE ESD_DG_P96
 y2 = (SIZE y1 BY 0.020) AND GT
 y3 = (INT [y2] == 0.016 OPPOSITE) COIN EDGE GT
 y4 = (y2 WITH EDGE y3) COIN EDGE channel_width_GT_edge

 out_1 = EXT (y4) AOP_GT == 0.072 OPPOSITE
 out_2 = EXT (out_1) AOP_GT == 0.073 OPPOSITE
 err1 = EXT (out_2) AOP_GT == 0.074 OPPOSITE
 err1 NOT INSIDE EDGE ESD_DG_P96
}

Q: Space between ((GATE SIZING 0.02um) AND GT) (channel length = 0.018um) and neighboring AOP_GT for core NMOS/PMOS, except ESDIO1, ESDIO2 and GT_P96 regions = 0.071~0.073um
A: 
GT_S_15c {
@ Space between ((GATE SIZING 0.02um) AND GT) (channel length = 0.018um) and neighboring AOP_GT for core NMOS/PMOS, except ESDIO1, ESDIO2 and GT_P96 regions = 0.071~0.073um
 y1 = GATE_LE_18 NOT INSIDE ESD_DG_P96
 y2 = (SIZE y1 BY 0.020) AND GT
 y3 = (INT [y2] == 0.018 OPPOSITE) COIN EDGE GT
 y4 = (y2 WITH EDGE y3) COIN EDGE channel_width_GT_edge

 out_1 = EXT (y4) AOP_GT == 0.071 OPPOSITE
 out_2 = EXT (out_1) AOP_GT == 0.072 OPPOSITE
 err1 = EXT (out_2) AOP_GT == 0.073 OPPOSITE
 err1 NOT INSIDE EDGE ESD_DG_P96
}

Q: Space between ((GATE SIZING 0.02um) AND GT) (channel length = 0.02um) and neighboring AOP_GT for core NMOS/PMOS, except ESDIO1, ESDIO2 and GT_P96 regions = 0.070~0.072um
A: 
GT_S_15d {
@ Space between ((GATE SIZING 0.02um) AND GT) (channel length = 0.02um) and neighboring AOP_GT for core NMOS/PMOS, except ESDIO1, ESDIO2 and GT_P96 regions = 0.070~0.072um
 y1 = GATE_LE_20 NOT INSIDE ESD_DG_P96
 y2 = (SIZE y1 BY 0.020) AND GT
 y3 = (INT [y2] == 0.020 OPPOSITE) COIN EDGE GT
 y4 = (y2 WITH EDGE y3) COIN EDGE channel_width_GT_edge

 out_1 = EXT (y4) AOP_GT == 0.070 OPPOSITE
 out_2 = EXT (out_1) AOP_GT == 0.071 OPPOSITE
 err1 = EXT (out_2) AOP_GT == 0.072 OPPOSITE
 err1 NOT INSIDE EDGE ESD_DG_P96
}

Q: Space between ((GATE SIZING 0.02um) AND GT) (channel length = 0.032um) and neighboring AOP_GT for core NMOS/PMOS, except ESDIO1, ESDIO2 regions = 0.074um
A: 
GT_S_15e {
@ Space between ((GATE SIZING 0.02um) AND GT) (channel length = 0.032um) and neighboring AOP_GT for core NMOS/PMOS, except ESDIO1, ESDIO2 regions = 0.074um
 y1 = GATE_LE_32 NOT INSIDE ESD_DG
 y2 = (SIZE y1 BY 0.020) AND GT
 y3 = (INT [y2] == 0.032 OPPOSITE) COIN EDGE GT
 y4 = (y2 WITH EDGE y3) COIN EDGE channel_width_GT_edge

 err1 = EXT (y4) AOP_GT == 0.074 OPPOSITE
 err1 NOT INSIDE EDGE ESD_DG
}

Q: Space between ((GATE SIZING 0.042um) AND GT) (channel length >= 0.07um) and neighboring AOP_GT for core NMOS/PMOS, except ESDIO1, ESDIO2 regions = 0.118, 0.119um
A: 
GT_S_15f {
@ Space between ((GATE SIZING 0.042um) AND GT) (channel length >= 0.07um) and neighboring AOP_GT for core NMOS/PMOS, except ESDIO1, ESDIO2 regions = 0.118, 0.119um
 y1 = GATE_LE_GT_70 NOT INSIDE ESD_DG
 y2 = (SIZE y1 BY 0.042) AND GT
 y3 = ANGLE y2 == 90
 y4 = (INT (y3) < 0.070 OPPOSITE EXCLUDE SHIELDED) COIN EDGE GT
 y5 = (y2 WITH EDGE y4) COIN EDGE channel_width_GT_edge

 err1 = EXT (y5) AOP_GT >= 0.118 <= 0.119 OPPOSITE
 err1 NOT INSIDE EDGE ESD_DG
}

Q: Space between ((GATE SIZING 0.042um) AND GT) and neighboring AOP_GT for I/O device, except ESDIO1, ESDIO2, LDBK regions = 0.118, 0.119um
A: 
GT_S_15g {
@ Space between ((GATE SIZING 0.042um) AND GT) and neighboring AOP_GT for I/O device, except ESDIO1, ESDIO2, LDBK regions = 0.118, 0.119um
 y1 = ((SIZE GATE_IO BY 0.042) AND GT) NOT INSIDE ESD_LDBK
 y2 = y1 COIN EDGE channel_width_GT_edge
 err1 = EXT (y2) AOP_GT >= 0.118 <= 0.119 OPPOSITE
 err1 NOT INSIDE EDGE ESD_LDBK
}

Q: Space between ((GATE SIZING 0.02um) AND GT) (channel length = 0.016um) and neighboring AOP_GT for core NMOS/PMOS in GT_P96 region = 0.078~0.08um
A: 
GT_S_15i {
@ Space between ((GATE SIZING 0.02um) AND GT) (channel length = 0.016um) and neighboring AOP_GT for core NMOS/PMOS in GT_P96 region = 0.078~0.08um
 y1 = GATE_LE_16 NOT DG
 y2 = ((SIZE y1 BY 0.020) AND GT) INTERACT GT_P96
 y3 = (INT [y2] == 0.016 OPPOSITE) COIN EDGE GT
 y4 = (y2 WITH EDGE y3) COIN EDGE channel_width_GT_edge

 out_1 = EXT (y4) AOP_GT == 0.078 OPPOSITE
 out_2 = EXT (out_1) AOP_GT == 0.079 OPPOSITE
 out_3 = EXT (out_2) AOP_GT == 0.080 OPPOSITE
 err1 = out_3 INSIDE EDGE GT_P96
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between ((GATE SIZING 0.02um) AND GT) (channel length = 0.018um) and neighboring AOP_GT for core NMOS/PMOS in GT_P96 region = 0.077~0.079um
A: 
GT_S_15j {
@ Space between ((GATE SIZING 0.02um) AND GT) (channel length = 0.018um) and neighboring AOP_GT for core NMOS/PMOS in GT_P96 region = 0.077~0.079um
 y1 = GATE_LE_18 NOT DG
 y2 = ((SIZE y1 BY 0.020) AND GT) INTERACT GT_P96
 y3 = (INT [y2] == 0.018 OPPOSITE) COIN EDGE GT
 y4 = (y2 WITH EDGE y3) COIN EDGE channel_width_GT_edge

 out_1 = EXT (y4) AOP_GT == 0.077 OPPOSITE
 out_2 = EXT (out_1) AOP_GT == 0.078 OPPOSITE
 out_3 = EXT (out_2) AOP_GT == 0.079 OPPOSITE
 err1 = out_3 INSIDE EDGE GT_P96
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between ((GATE SIZING 0.02um) AND GT) (channel length = 0.02um) and neighboring AOP_GT for core NMOS/PMOS in GT_P96 region = 0.076~0.078um
A: 
GT_S_15k {
@ Space between ((GATE SIZING 0.02um) AND GT) (channel length = 0.02um) and neighboring AOP_GT for core NMOS/PMOS in GT_P96 region = 0.076~0.078um
 y1 = GATE_LE_20 NOT DG
 y2 = ((SIZE y1 BY 0.020) AND GT) INTERACT GT_P96
 y3 = (INT [y2] == 0.020 OPPOSITE) COIN EDGE GT
 y4 = (y2 WITH EDGE y3) COIN EDGE channel_width_GT_edge

 out_1 = EXT (y4) AOP_GT == 0.076 OPPOSITE
 out_2 = EXT (out_1) AOP_GT == 0.077 OPPOSITE
 out_3 = EXT (out_2) AOP_GT == 0.078 OPPOSITE
 err1 = out_3 INSIDE EDGE GT_P96
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between ((GATE SIZING 0.02um) AND GT) (channel length = 0.022/0.024um) and neighboring AOP_GT for core NMOS/PMOS in GT_P96 region. = 0.072~0.075um
A: 
GT_S_15l_1 {
@ Space between ((GATE SIZING 0.02um) AND GT) (channel length = 0.022/0.024um) and neighboring AOP_GT for core NMOS/PMOS in GT_P96 region. = 0.072~0.075um
 y1 = GATE_LE_22 NOT DG
 y2 = ((SIZE y1 BY 0.020) AND GT) INTERACT GT_P96
 y3 = (INT [y2] == 0.022 OPPOSITE) COIN EDGE GT
 y4 = (y2 WITH EDGE y3) COIN EDGE channel_width_GT_edge

 out_1 = EXT (y4) AOP_GT == 0.072 OPPOSITE
 out_2 = EXT (out_1) AOP_GT >= 0.072 <= 0.075 OPPOSITE
 err1 = out_2 INSIDE EDGE GT_P96
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between ((GATE SIZING 0.02um) AND GT) (channel length = 0.022/0.024um) and neighboring AOP_GT for core NMOS/PMOS in GT_P96 region. = 0.072~0.075um
A: 
GT_S_15l_2 {
@ Space between ((GATE SIZING 0.02um) AND GT) (channel length = 0.022/0.024um) and neighboring AOP_GT for core NMOS/PMOS in GT_P96 region. = 0.072~0.075um
 y1 = GATE_LE_24 NOT DG
 y2 = ((SIZE y1 BY 0.020) AND GT) INTERACT GT_P96
 y3 = (INT [y2] == 0.024 OPPOSITE) COIN EDGE GT
 y4 = (y2 WITH EDGE y3) COIN EDGE channel_width_GT_edge

 out_1 = EXT (y4) AOP_GT == 0.072 OPPOSITE
 out_2 = EXT (out_1) AOP_GT >= 0.072 <= 0.075 OPPOSITE
 err1 = out_2 INSIDE EDGE GT_P96
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between GATE (channel length <= 0.032um) and neighboring second AOP_GT in S/D direction for core MOS device <= 0.18um
    The second AOP_GT is required to be placed second neighboring the GATE, except INST, ESDIO1 and ESDIO2 regions
A: 
GT_S_16a {
@ Space between GATE (channel length <= 0.032um) and neighboring second AOP_GT in S/D direction for core MOS device <= 0.18um
@ The second AOP_GT is required to be placed second neighboring the GATE, except INST, ESDIO1 and ESDIO2 regions
 WAIVE_AREA = OR INST ESDIO_ALL
 neighboring_TRGATE = TRGATE NOT INSIDE (OR DG INST ESDIO_ALL)  //; based GT.W.x
 neighboring_TRGATE_v_edges = neighboring_TRGATE COIN EDGE AOP_GT_v_edges
 neighboring_TRGATE_v_edges_eqlt_032 = INT [neighboring_TRGATE_v_edges] <= 0.032 OPPOSITE EXCLUDE SHIELDED
 neighboring_TRGATE_v_edges_eqlt_032_real = neighboring_TRGATE_v_edges COIN EDGE GT_eqlt_032
 neighboring_TRGATE_good = DFM SPACE [neighboring_TRGATE_v_edges_eqlt_032_real] AOP_GT <= 0.18 BY EXT COUNT == 2 BY LAYER AOP_GT
 err1 = neighboring_TRGATE_v_edges_eqlt_032_real NOT COIN EDGE neighboring_TRGATE_good
 err1 NOT INSIDE EDGE WAIVE_AREA
}

Q: Space between GATE (channel length >= 0.07um) and neighboring second AOP_GT in S/D direction for core MOS device <= 0.481um
    The second AOP_GT is required to be placed second neighboring the GATE, except ESDIO1 and ESDIO2 region
A: 
GT_S_16b {
@ Space between GATE (channel length >= 0.07um) and neighboring second AOP_GT in S/D direction for core MOS device <= 0.481um
@ The second AOP_GT is required to be placed second neighboring the GATE, except ESDIO1 and ESDIO2 region
 neighboring_TRGATE = (TRGATE INTERACT GT_eqgt_070) NOT INSIDE DG
 neighboring_TRGATE_v_edges = neighboring_TRGATE COIN EDGE AOP_GT_v_edges
 neighboring_TRGATE_v_edges_eqgt_070 = INT (neighboring_TRGATE_v_edges) < 0.070 OPPOSITE EXCLUDE SHIELDED
 neighboring_TRGATE_v_edges_eqgt_070_real = neighboring_TRGATE_v_edges_eqgt_070 COIN EDGE GT_eqgt_070
 neighboring_TRGATE_good = DFM SPACE [neighboring_TRGATE_v_edges_eqgt_070_real] AOP_GT <= MAXIMUM_2nd_DummySpace BY EXT COUNT == 2 BY LAYER AOP_GT
 err1 = neighboring_TRGATE_v_edges_eqgt_070_real NOT COIN EDGE neighboring_TRGATE_good
 err1 NOT INSIDE EDGE ESDIO_ALL
}

AOP_GT_space_gt_080 = AOP_GT COIN EDGE (EXT (AOP_GT_v_edges) <= 0.08 OPPOSITE)
AOP_GT_space_eqgt_081 = AOP_GT COIN EDGE (EXT (AOP_GT_v_edges) < 0.081 OPPOSITE)
AOP_GT_space_lteq_080 = AOP_GT COIN EDGE (EXT [AOP_GT_v_edges] <= 0.08 OPPOSITE)
AOP_GT_space_gt_081 = AOP_GT COIN EDGE (EXT (AOP_GT_v_edges) <= 0.081 OPPOSITE)
AOP_GT_space_lt_081 = AOP_GT COIN EDGE (EXT [AOP_GT_v_edges] < 0.081 OPPOSITE)
AOP_GT_space_gt_082 = AOP_GT COIN EDGE (EXT (AOP_GT_v_edges) <= 0.082 OPPOSITE)
AOP_GT_space_lt_082 = AOP_GT COIN EDGE (EXT [AOP_GT_v_edges] < 0.082 OPPOSITE)

AOP_GT_space_not_eqgt_073_eqlt_076_edges = EXT (AOP_GT_v_edges) >= 0.073 <= 0.076 OPPOSITE
AOP_GT_space_not_eqgt_072_eqlt_075_edges = EXT (AOP_GT_v_edges) >= 0.072 <= 0.075 OPPOSITE
AOP_GT_space_not_eqgt_072_eqlt_074_edges = EXT (AOP_GT_v_edges) >= 0.072 <= 0.074 OPPOSITE
AOP_GT_space_not_eqgt_071_eqlt_074_edges = EXT (AOP_GT_v_edges) >= 0.071 <= 0.074 OPPOSITE
AOP_GT_space_not_eqgt_071_eqlt_073_edges = EXT (AOP_GT_v_edges) >= 0.071 <= 0.073 OPPOSITE
AOP_GT_space_not_eqgt_070_eqlt_073_edges = EXT (AOP_GT_v_edges) >= 0.070 <= 0.073 OPPOSITE
AOP_GT_space_not_eqgt_070_eqlt_072_edges = EXT (AOP_GT_v_edges) >= 0.070 <= 0.072 OPPOSITE

AOP_GT_space_not_eqgt_079_eqlt_082_edges = EXT (AOP_GT_v_edges) >= 0.079 <= 0.082 OPPOSITE
AOP_GT_space_not_eqgt_078_eqlt_080_edges = EXT (AOP_GT_v_edges) >= 0.078 <= 0.080 OPPOSITE
AOP_GT_space_not_eqgt_078_eqlt_081_edges = EXT (AOP_GT_v_edges) >= 0.078 <= 0.081 OPPOSITE
AOP_GT_space_not_eqgt_077_eqlt_079_edges = EXT (AOP_GT_v_edges) >= 0.077 <= 0.079 OPPOSITE

AOP_GT_space_not_eq_070_edges = EXT (AOP_GT_v_edges) == 0.070 OPPOSITE
AOP_GT_space_not_eq_072_edges = EXT (AOP_GT_v_edges) == 0.072 OPPOSITE
AOP_GT_space_not_eq_074_edges = EXT (AOP_GT_v_edges) == 0.074 OPPOSITE
ALL_GT_space_not_eq_118_edges = EXT (ALL_GT_v_edges) == 0.118 OPPOSITE
ALL_GT_space_not_eq_118_119_edges = EXT (ALL_GT_v_edges) >= 0.118 <= 0.119 OPPOSITE

Q: Space between AOP_GT (width = 0.016um and one side poly space >= 0.081um) and AOP_GT, except GT_P96 region = 0.072~0.074um
A: 
GT_S_17b {
@ Space between AOP_GT (width = 0.016um and one side poly space >= 0.081um) and AOP_GT, except GT_P96 region = 0.072~0.074um
 y1 = AOP_GT_016_v_edges COIN EDGE AOP_GT_space_eqgt_081
 y2 = AOP_GT COIN EDGE AOP_GT_space_not_eqgt_072_eqlt_074_edges
 y3 = y2 NOT COIN EDGE AOP_GT_space_eqgt_081
 err1 = INT [y1] == 0.016 OPPOSITE
 err2 = INT y1 [y3] == 0.016 OPPOSITE
 err1 NOT INSIDE EDGE GT_P96
 err2 NOT INSIDE EDGE GT_P96
}

Q: Space between AOP_GT (width = 0.018um and one side poly space >= 0.081um) and AOP_GT, except GT_P96 region = 0.071~0.073um
A: 
GT_S_17c {
@ Space between AOP_GT (width = 0.018um and one side poly space >= 0.081um) and AOP_GT, except GT_P96 region = 0.071~0.073um
 y1 = AOP_GT_018_v_edges COIN EDGE AOP_GT_space_eqgt_081
 y2 = AOP_GT COIN EDGE AOP_GT_space_not_eqgt_071_eqlt_073_edges
 y3 = y2 NOT COIN EDGE AOP_GT_space_eqgt_081
 err1 = INT [y1] == 0.018 OPPOSITE
 err2 = INT y1 [y3] == 0.018 OPPOSITE
 err1 NOT INSIDE EDGE GT_P96
 err2 NOT INSIDE EDGE GT_P96
}

Q: Space between AOP_GT (width = 0.02um and one side poly space >= 0.081um) and AOP_GT, except GT_P96 region = 0.070~0.072um
A: 
GT_S_17d {
@ Space between AOP_GT (width = 0.02um and one side poly space >= 0.081um) and AOP_GT, except GT_P96 region = 0.070~0.072um
 y1 = AOP_GT_020_v_edges COIN EDGE AOP_GT_space_eqgt_081
 y2 = AOP_GT COIN EDGE AOP_GT_space_not_eqgt_070_eqlt_072_edges
 y3 = y2 NOT COIN EDGE AOP_GT_space_eqgt_081
 err1 = INT [y1] == 0.020 OPPOSITE
 err2 = INT y1 [y3] == 0.020 OPPOSITE
 err1 NOT INSIDE EDGE GT_P96
 err2 NOT INSIDE EDGE GT_P96
}

Q: Space between AOP_GT (width = 0.032um and one side poly space >= 0.081um) and AOP_GT, except INST region = 0.074um
A: 
GT_S_17e {
@ Space between AOP_GT (width = 0.032um and one side poly space >= 0.081um) and AOP_GT, except INST region = 0.074um
 y1 = AOP_GT_032_v_edges COIN EDGE AOP_GT_space_eqgt_081
 y2 = AOP_GT COIN EDGE AOP_GT_space_not_eq_074_edges
 y3 = y2 NOT COIN EDGE AOP_GT_space_eqgt_081
 err1 = INT [y1] == 0.032 OPPOSITE
 err2 = INT y1 [y3] == 0.032 OPPOSITE
 err1 NOT INSIDE EDGE INST
 err2 NOT INSIDE EDGE INST
}


AOP_GT_space_eqlt_343 = EXT [AOP_GT_v_edges] <= 0.343 OPPOSITE EXCLUDE SHIELDED

ALL_GT_space_gt_119 = ALL_GT COIN EDGE (EXT (ALL_GT_v_edges) <= 0.119 OPPOSITE)
ALL_GT_space_gt_118 = ALL_GT COIN EDGE (EXT (ALL_GT_v_edges) <= 0.118 OPPOSITE)
ALL_GT_width_eqgt_072_eqlt_162_edges = INT [ALL_GT_v_edges] >= 0.072 <= 0.162 OPPOSITE EXCLUDE SHIELDED
ALL_GT_space_eqgt_118 = ALL_GT COIN EDGE (EXT (ALL_GT_v_edges) < 0.118 OPPOSITE)
ALL_GT_width_eqgt_070_eqlt_160_edges = INT [ALL_GT_v_edges] >= 0.070 <= 0.160 OPPOSITE EXCLUDE SHIELDED

Q: Space between ALL_GT (0.07um <= width <= 0.16um and one side poly space >= 0.118um) and ALL_GT, except ESDIO1, ESDIO2 and OCOVL regions = 0.118, 0.119um
A: 
GT_S_17f {
@ Space between ALL_GT (0.07um <= width <= 0.16um and one side poly space >= 0.118um) and ALL_GT, except ESDIO1, ESDIO2 and OCOVL regions = 0.118, 0.119um
 waive_area = OR ESDIO_all OCOVL
 y1 = ALL_GT_width_eqgt_070_eqlt_160_edges COIN EDGE ALL_GT_space_eqgt_118
 y2 = ALL_GT_width_eqgt_070_eqlt_160_edges NOT COIN EDGE y1
 y3 = ALL_GT_width_eqgt_070_eqlt_160_edges COIN EDGE ALL_GT_space_gt_119
 err1 = INT y1 y2 >= 0.070 <= 0.160 OPPOSITE REGION
 err2 = INT y3 >= 0.070 <= 0.160 OPPOSITE REGION
 err1 NOT INSIDE waive_area
 err2 NOT INSIDE waive_area
}

Q: Space between AOP_GT (width = 0.016um and one side poly space >= 0.081um) and AOP_GT, inside GT_P96 region = 0.078~0.080um
A: 
GT_S_17h {
@ Space between AOP_GT (width = 0.016um and one side poly space >= 0.081um) and AOP_GT, inside GT_P96 region = 0.078~0.080um
 y1 = (AOP_GT_016_v_edges COIN EDGE AOP_GT_space_eqgt_081) COIN EDGE AOP_GT_in_GT_P96
 y2 = (AOP_GT_016_v_edges COIN EDGE AOP_GT_space_eqgt_081) COIN EDGE AOP_GT_in_GT_P96
 y3 = AOP_GT COIN EDGE AOP_GT_space_not_eqgt_078_eqlt_080_edges
 y4 = y3 NOT COIN EDGE AOP_GT_space_eqgt_081
 err1 = (INT [y2] == 0.016 OPPOSITE) INSIDE EDGE GT_P96
 err2 = (INT y1 [y4] == 0.016 OPPOSITE) INSIDE EDGE GT_P96
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between AOP_GT (width = 0.018um and one side poly space >= 0.081um) and AOP_GT, inside GT_P96 region = 0.077~0.079um
A: 
GT_S_17i {
@ Space between AOP_GT (width = 0.018um and one side poly space >= 0.081um) and AOP_GT, inside GT_P96 region = 0.077~0.079um
 y1 = (AOP_GT_018_v_edges COIN EDGE AOP_GT_space_eqgt_081) COIN EDGE AOP_GT_in_GT_P96
 y2 = AOP_GT COIN EDGE AOP_GT_space_not_eqgt_077_eqlt_079_edges
 y3 = y2 NOT COIN EDGE AOP_GT_space_eqgt_081
 err1 = (INT [y1] == 0.018 OPPOSITE) INSIDE EDGE GT_P96
 err2 = (INT y1 [y3] == 0.018 OPPOSITE) INSIDE EDGE GT_P96
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between AOP_GT (width = 0.02um and one side poly space >= 0.081um) and AOP_GT, inside GT_P96 region = 0.074, 0.076~0.078um
A: 
GT_S_17j {
@ Space between AOP_GT (width = 0.02um and one side poly space >= 0.081um) and AOP_GT, inside GT_P96 region = 0.074, 0.076~0.078um
 y1 = AOP_GT_in_GT_P96 COIN EDGE AOP_GT_020_v_edges
 y2 = INT (y1 COIN EDGE AOP_GT_space_eqgt_081) == 0.020 OPPOSITE REGION //; two sides space > 0.08
 y3 = INT AOP_GT_space_eqgt_081 y1 == 0.020 OPPOSITE REGION
 err1 = y2 AND GT_P96
 err1 NOT INSIDE SealR_NOT_BULK

 out1 = ((y3 NOT y2) COIN EDGE y1) NOT COIN EDGE AOP_GT_space_eqgt_081
 out2 = EXT (out1) AOP_GT == 0.074 OPPOSITE
 out3 = EXT (out2) AOP_GT >= 0.076 <= 0.078 OPPOSITE
 err2 = out3 INSIDE EDGE GT_P96
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between AOP_GT (width = 0.022/0.024um and one side poly space >= 0.081um) and AOP_GT, inside GT_P96 region = 0.072~0.075um
A: 
GT_S_17k_1 {
@ Space between AOP_GT (width = 0.022/0.024um and one side poly space >= 0.081um) and AOP_GT, inside GT_P96 region = 0.072~0.075um
 y1 = AOP_GT_in_GT_P96 COIN EDGE AOP_GT_022_v_edges
 y2 = INT (y1 COIN EDGE AOP_GT_space_eqgt_081) == 0.022 OPPOSITE REGION //; two sides space > 0.08
 y3 = INT AOP_GT_space_eqgt_081 y1 == 0.022 OPPOSITE REGION
 err1 = y2 AND GT_P96
 err1 NOT INSIDE SealR_NOT_BULK

 out1 = ((y3 NOT y2) COIN EDGE y1) NOT COIN EDGE AOP_GT_space_eqgt_081
 out2 = EXT (out1) AOP_GT == 0.072 OPPOSITE
 out3 = EXT (out2) AOP_GT >= 0.072 <= 0.075 OPPOSITE
 err2 = out3 INSIDE EDGE GT_P96
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between AOP_GT (width = 0.022/0.024um and one side poly space >= 0.081um) and AOP_GT, inside GT_P96 region = 0.072~0.075um
A:
GT_S_17k_2 {
@ Space between AOP_GT (width = 0.022/0.024um and one side poly space >= 0.081um) and AOP_GT, inside GT_P96 region = 0.072~0.075um
 y1 = AOP_GT_in_GT_P96 COIN EDGE AOP_GT_024_v_edges
 y2 = INT (y1 COIN EDGE AOP_GT_space_eqgt_081) == 0.024 OPPOSITE REGION //; two sides space > 0.08
 y3 = INT AOP_GT_space_eqgt_081 y1 == 0.024 OPPOSITE REGION
 err1 = y2 AND GT_P96
 err1 NOT INSIDE SealR_NOT_BULK

 out1 = ((y3 NOT y2) COIN EDGE y1) NOT COIN EDGE AOP_GT_space_eqgt_081
 out2 = EXT (out1) AOP_GT == 0.072 OPPOSITE
 out3 = EXT (out2) AOP_GT >= 0.072 <= 0.075 OPPOSITE
 err2 = out3 INSIDE EDGE GT_P96
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

AOP_GT_GR_Long_Side = AOP_GT_eqlt_032 COIN EDGE AOP_GT_v_edges
AOP_GT_GR_Area = EXT AOP_GT_GR_Long_Side <= 0.074 OPPOSITE REGION
AOP_GT_GR_Alls = AOP_GT_eqlt_032 OR AOP_GT_GR_Area
AOP_GT_GR_Real = AOP_GT_GR_Alls ENCLOSE AOP_GT_eqlt_032 >= 7
AOP_GT_GR_s207_s342_Area = EXT AOP_GT_v_edges AOP_GT_GR_Real >= 0.207 <= 0.342 OPPOSITE REGION EXCLUDE SHIELDED
AOP_GT_GR_s207_s343_Area = EXT AOP_GT_v_edges AOP_GT_GR_Real >= 0.207 <= 0.343 OPPOSITE REGION EXCLUDE SHIELDED

Forbidden_aop_GT_space_070_071 = EXT AOP_GT_v_edges >= 0.070 <= 0.071 OPPOSITE REGION
Forbidden_aop_GT_space_070_072 = EXT AOP_GT_v_edges >= 0.070 <= 0.072 OPPOSITE REGION
Forbidden_aop_GT_space_070_073 = EXT AOP_GT_v_edges >= 0.070 <= 0.073 OPPOSITE REGION
Forbidden_aop_GT_space_070_076 = EXT AOP_GT_v_edges >= 0.070 <= 0.076 OPPOSITE REGION
Forbidden_aop_GT_space_070_077 = EXT AOP_GT_v_edges >= 0.070 <= 0.077 OPPOSITE REGION
Forbidden_aop_GT_space_070_078 = EXT AOP_GT_v_edges >= 0.070 <= 0.078 OPPOSITE REGION
Forbidden_aop_GT_space_071_073 = EXT AOP_GT_v_edges >= 0.071 <= 0.073 OPPOSITE REGION
Forbidden_aop_GT_space_073_075 = EXT AOP_GT_v_edges >= 0.073 <= 0.075 OPPOSITE REGION
Forbidden_aop_GT_space_073_079 = EXT AOP_GT_v_edges >= 0.073 <= 0.079 OPPOSITE REGION
Forbidden_aop_GT_space_074_079 = EXT AOP_GT_v_edges >= 0.074 <= 0.079 OPPOSITE REGION
Forbidden_aop_GT_space_075_079 = EXT AOP_GT_v_edges >= 0.075 <= 0.079 OPPOSITE REGION
Forbidden_aop_GT_space_076_079 = EXT AOP_GT_v_edges >= 0.076 <= 0.079 OPPOSITE REGION
Forbidden_aop_GT_space_077_079 = EXT AOP_GT_v_edges >= 0.077 <= 0.079 OPPOSITE REGION
Forbidden_aop_GT_space_093_206 = EXT AOP_GT_v_edges >= 0.093 <= 0.206 OPPOSITE REGION EXCLUDE SHIELDED
Forbidden_aop_GT_space_100_206 = EXT AOP_GT_v_edges >= 0.100 <= 0.206 OPPOSITE REGION EXCLUDE SHIELDED
Forbidden_aop_GT_space_093_343 = EXT AOP_GT_v_edges >= 0.093 <= 0.343 OPPOSITE REGION EXCLUDE SHIELDED
Forbidden_aop_GT_space_100_342 = EXT AOP_GT_v_edges >= 0.100 <= 0.342 OPPOSITE REGION EXCLUDE SHIELDED
Forbidden_aop_GT_space_207_343 = EXT AOP_GT_v_edges >= 0.207 <= 0.343 OPPOSITE REGION EXCLUDE SHIELDED
Forbidden_aop_GT_space_207_342 = EXT AOP_GT_v_edges >= 0.207 <= 0.342 OPPOSITE REGION EXCLUDE SHIELDED

Forbidden_aop_GT_space_eq_070 = EXT AOP_GT_v_edges == 0.070 OPPOSITE REGION
Forbidden_aop_GT_space_eq_071 = EXT AOP_GT_v_edges == 0.071 OPPOSITE REGION
Forbidden_aop_GT_space_eq_072 = EXT AOP_GT_v_edges == 0.072 OPPOSITE REGION
Forbidden_aop_GT_space_eq_073 = EXT AOP_GT_v_edges == 0.073 OPPOSITE REGION
Forbidden_aop_GT_space_eq_075 = EXT AOP_GT_v_edges == 0.075 OPPOSITE REGION
Forbidden_aop_GT_space_eq_079 = EXT AOP_GT_v_edges == 0.079 OPPOSITE REGION
Forbidden_aop_GT_space_eq_081 = EXT AOP_GT_v_edges == 0.081 OPPOSITE REGION

Q: Forbidden space between AOP_GT (width = 0.016um) and AOP_GT = 0.070~0.071, 0.075~0.079, 0.1~0.342um
    DRC don't check:
    1) AOP_GT (INSIDE P2) with PRL <= 0.012um
    2) Space to one AOP_GT group = 0.207~0.342um
    AOP_GT group definition: number of (AOP_GT width <= 0.032um and space <= 0.074um) >= 7
   3) GT_P96 region
A: 
GT_S_18b {
@ Forbidden space between AOP_GT (width = 0.016um) and AOP_GT = 0.070~0.071, 0.075~0.079, 0.1~0.342um
@ DRC don't check:
@ 1) AOP_GT (INSIDE P2) with PRL <= 0.012um
@ 2) Space to one AOP_GT group = 0.207~0.342um
@ AOP_GT group definition: number of (AOP_GT width <= 0.032um and space <= 0.074um) >= 7
@ 3) GT_P96 region
 Forbidden_range_A = COPY Forbidden_aop_GT_space_070_071
 Forbidden_range_B = COPY Forbidden_aop_GT_space_075_079
 Forbidden_range_C = COPY Forbidden_aop_GT_space_100_206
 Forbidden_range_D = COPY Forbidden_aop_GT_space_207_342
 Forbidden_range_A_InP2 = (Forbidden_range_A ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 Forbidden_range_B_InP2 = (Forbidden_range_B ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 Forbidden_range_C_InP2 = (Forbidden_range_C ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 Forbidden_range_D_InP2 = (Forbidden_range_D ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 err1 = AOP_GT_016_v_edges COIN EDGE (OR Forbidden_range_A_InP2 Forbidden_range_B_InP2 Forbidden_range_C_InP2 (Forbidden_range_D_InP2 NOT AOP_GT_GR_s207_s342_Area))
 err2 = AOP_GT_016_v_edges COIN EDGE ((Forbidden_range_A NOT INSIDE P2) OR ((Forbidden_range_B NOT INSIDE P2) OR (Forbidden_range_C NOT INSIDE P2)))
 err3 = AOP_GT_016_v_edges COIN EDGE ((Forbidden_range_D NOT INSIDE P2) NOT AOP_GT_GR_s207_s342_Area)
 err1 NOT INSIDE EDGE GT_P96
 err2 NOT INSIDE EDGE GT_P96
 err3 NOT INSIDE EDGE GT_P96
}

Q: Forbidden space between AOP_GT (width = 0.018um) and AOP_GT = 0.07, 0.074~0.079, 0.1~0.342um
    DRC don't check:
    1) AOP_GT (INSIDE P2) with PRL <= 0.012um
    2) Space to one AOP_GT group = 0.207~0.342um
     AOP_GT group definition: number of (AOP_GT width <= 0.032um and space <= 0.074um) >= 7
    3) GT_P96 region
A: 
GT_S_18c {
@ Forbidden space between AOP_GT (width = 0.018um) and AOP_GT = 0.07, 0.074~0.079, 0.1~0.342um
@ DRC don't check:
@ 1) AOP_GT (INSIDE P2) with PRL <= 0.012um
@ 2) Space to one AOP_GT group = 0.207~0.342um
@ AOP_GT group definition: number of (AOP_GT width <= 0.032um and space <= 0.074um) >= 7
@ 3) GT_P96 region
 Forbidden_range_A = COPY Forbidden_aop_GT_space_eq_070
 Forbidden_range_B = COPY Forbidden_aop_GT_space_074_079
 Forbidden_range_C = COPY Forbidden_aop_GT_space_100_206
 Forbidden_range_D = COPY Forbidden_aop_GT_space_207_342
 Forbidden_range_A_InP2 = (Forbidden_range_A ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 Forbidden_range_B_InP2 = (Forbidden_range_B ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 Forbidden_range_C_InP2 = (Forbidden_range_C ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 Forbidden_range_D_InP2 = (Forbidden_range_D ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 err1 = AOP_GT_018_v_edges COIN EDGE (OR Forbidden_range_A_InP2 Forbidden_range_B_InP2 Forbidden_range_C_InP2 (Forbidden_range_D_InP2 NOT AOP_GT_GR_s207_s342_Area))
 err2 = AOP_GT_018_v_edges COIN EDGE ((Forbidden_range_A NOT INSIDE P2) OR ((Forbidden_range_B NOT INSIDE P2) OR (Forbidden_range_C NOT INSIDE P2)))
 err3 = AOP_GT_018_v_edges COIN EDGE ((Forbidden_range_D NOT INSIDE P2) NOT AOP_GT_GR_s207_s342_Area)
 err1 NOT INSIDE EDGE GT_P96
 err2 NOT INSIDE EDGE GT_P96
 err3 NOT INSIDE EDGE GT_P96
}

Q: Forbidden space between AOP_GT (width = 0.02um) and AOP_GT = 0.073~0.079, 0.1~0.342um
    DRC don't check:
    1) AOP_GT (INSIDE P2) with PRL <= 0.012um
    2) Space to one AOP_GT group = 0.207~0.342um
     AOP_GT group definition: number of (AOP_GT width <= 0.032um and space <= 0.074um) >= 7
     3) GT_P96 and INST regions
A: 
GT_S_18d {
@ Forbidden space between AOP_GT (width = 0.02um) and AOP_GT = 0.073~0.079, 0.1~0.342um
@ DRC don't check:
@ 1) AOP_GT (INSIDE P2) with PRL <= 0.012um
@ 2) Space to one AOP_GT group = 0.207~0.342um
@ AOP_GT group definition: number of (AOP_GT width <= 0.032um and space <= 0.074um) >= 7
@ 3) GT_P96 and INST regions
 WAIVE_AREA = OR GT_P96 INST
 Forbidden_range_A = COPY Forbidden_aop_GT_space_073_079
 Forbidden_range_B = COPY Forbidden_aop_GT_space_100_206
 Forbidden_range_C = COPY Forbidden_aop_GT_space_207_342
 Forbidden_range_A_InP2 = (Forbidden_range_A ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 Forbidden_range_B_InP2 = (Forbidden_range_B ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 Forbidden_range_C_InP2 = (Forbidden_range_C ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 err1 = AOP_GT_020_v_edges COIN EDGE (OR Forbidden_range_A_InP2 Forbidden_range_B_InP2 (Forbidden_range_C_InP2 NOT AOP_GT_GR_s207_s342_Area))
 err2 = AOP_GT_020_v_edges COIN EDGE ((Forbidden_range_A NOT INSIDE P2) OR (Forbidden_range_B NOT INSIDE P2))
 err3 = AOP_GT_020_v_edges COIN EDGE ((Forbidden_range_C NOT INSIDE P2) NOT AOP_GT_GR_s207_s342_Area)
 err1 NOT INSIDE EDGE WAIVE_AREA
 err2 NOT INSIDE EDGE WAIVE_AREA
 err3 NOT INSIDE EDGE WAIVE_AREA
}

Q: Forbidden space between AOP_GT (width = 0.016um, INSIDE GT_P96) and AOP_GT = 0.07~0.077, 0.1~0.342um
     DRC don't check:
    1) AOP_GT (INSIDE P2) with PRL <= 0.012um
A: 
GT_S_18f {
@ Forbidden space between AOP_GT (width = 0.016um, INSIDE GT_P96) and AOP_GT = 0.07~0.077, 0.1~0.342um
@ DRC don't check:
@ 1) AOP_GT (INSIDE P2) with PRL <= 0.012um
 Forbidden_range_A = COPY Forbidden_aop_GT_space_070_077
 Forbidden_range_B = COPY Forbidden_aop_GT_space_100_342
 Forbidden_range_A_InP2 = (Forbidden_range_A ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 Forbidden_range_B_InP2 = (Forbidden_range_B ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 err1_TMP = AOP_GT_016_v_edges COIN EDGE (OR Forbidden_range_A_InP2 Forbidden_range_B_InP2)
 err2_TMP = AOP_GT_016_v_edges COIN EDGE ((Forbidden_range_A NOT INSIDE P2) OR (Forbidden_range_B NOT INSIDE P2))
 err1 = err1_TMP INSIDE EDGE GT_P96
 err2 = err2_TMP INSIDE EDGE GT_P96
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Forbidden space between AOP_GT (width = 0.018um, INSIDE GT_P96) and AOP_GT = 0.07~0.076, 0.1~0.342um
     DRC don't check:
    1) AOP_GT (INSIDE P2) with PRL <= 0.012um
A: 
GT_S_18g {
@ Forbidden space between AOP_GT (width = 0.018um, INSIDE GT_P96) and AOP_GT = 0.07~0.076, 0.1~0.342um
@ DRC don't check:
@ 1) AOP_GT (INSIDE P2) with PRL <= 0.012um
 Forbidden_range_A = COPY Forbidden_aop_GT_space_070_076
 Forbidden_range_B = COPY Forbidden_aop_GT_space_100_342
 Forbidden_range_A_InP2 = (Forbidden_range_A ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 Forbidden_range_B_InP2 = (Forbidden_range_B ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 err1_TMP = AOP_GT_018_v_edges COIN EDGE (OR Forbidden_range_A_InP2 Forbidden_range_B_InP2)
 err2_TMP = AOP_GT_018_v_edges COIN EDGE ((Forbidden_range_A NOT INSIDE P2) OR (Forbidden_range_B NOT INSIDE P2))
 err1 = err1_TMP INSIDE EDGE GT_P96
 err2 = err2_TMP INSIDE EDGE GT_P96
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Forbidden space between AOP_GT (width = 0.02um, INSIDE GT_P96) and AOP_GT (except 0.032um AOP_GT) = 0.071~0.073, 0.079, 0.1~0.342um
    DRC don't check:
    1) AOP_GT (INSIDE P2) with PRL <= 0.012um
A: 
GT_S_18h {
@ Forbidden space between AOP_GT (width = 0.02um, INSIDE GT_P96) and AOP_GT (except 0.032um AOP_GT) = 0.071~0.073, 0.079, 0.1~0.342um
@ DRC don't check:
@ 1) AOP_GT (INSIDE P2) with PRL <= 0.012um
 Forbidden_aop_GT_space_071_073_GT_032 = EXT AOP_GT_v_edges AOP_GT_032_v_edges >= 0.071 <= 0.073 OPPOSITE REGION
 Forbidden_aop_GT_space_eq_079_GT_032 = EXT AOP_GT_v_edges AOP_GT_032_v_edges == 0.079 OPPOSITE REGION
 Forbidden_aop_GT_space_100_342_GT_032 = EXT (EXT [AOP_GT_v_edges] >= 0.100 <= 0.342 OPPOSITE EXCLUDE SHIELDED) AOP_GT_032_v_edges >= 0.100 <= 0.342 OPPOSITE REGION EXCLUDE SHIELDED
 Forbidden_range_A = Forbidden_aop_GT_space_071_073 NOT Forbidden_aop_GT_space_071_073_GT_032
 Forbidden_range_B = Forbidden_aop_GT_space_eq_079 NOT Forbidden_aop_GT_space_eq_079_GT_032
 Forbidden_range_C = Forbidden_aop_GT_space_100_342 NOT Forbidden_aop_GT_space_100_342_GT_032
 Forbidden_range_A_InP2 = (Forbidden_range_A ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 Forbidden_range_B_InP2 = (Forbidden_range_B ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 Forbidden_range_C_InP2 = (Forbidden_range_C ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 err1_TMP = AOP_GT_020_v_edges COIN EDGE (OR Forbidden_range_A_InP2 Forbidden_range_B_InP2 Forbidden_range_C_InP2)
 err2_TMP = AOP_GT_020_v_edges COIN EDGE ((Forbidden_range_A NOT INSIDE P2) OR ((Forbidden_range_B NOT INSIDE P2) OR (Forbidden_range_C NOT INSIDE P2)))
 err1 = err1_TMP INSIDE EDGE GT_P96
 err2 = err2_TMP INSIDE EDGE GT_P96
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Forbidden space between AOP_GT (width = 0.024um, INSIDE GT_P96) and AOP_GT = 0.07~0.071, 0.075~0.079, 0.1~0.342um
    DRC don't check:
    1) AOP_GT (INSIDE P2) with PRL <= 0.012um
A: 
GT_S_18i {
@ Forbidden space between AOP_GT (width = 0.024um, INSIDE GT_P96) and AOP_GT = 0.07~0.071, 0.075~0.079, 0.1~0.342um
@ DRC don't check:
@ 1) AOP_GT (INSIDE P2) with PRL <= 0.012um
 Forbidden_range_A = COPY Forbidden_aop_GT_space_070_071
 Forbidden_range_B = COPY Forbidden_aop_GT_space_075_079
 Forbidden_range_C = COPY Forbidden_aop_GT_space_100_342
 Forbidden_range_A_InP2 = (Forbidden_range_A ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 Forbidden_range_B_InP2 = (Forbidden_range_B ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 Forbidden_range_C_InP2 = (Forbidden_range_C ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 err1_TMP = AOP_GT_024_v_edges COIN EDGE (OR Forbidden_range_A_InP2 Forbidden_range_B_InP2 Forbidden_range_C_InP2)
 err2_TMP = AOP_GT_024_v_edges COIN EDGE ((Forbidden_range_A NOT INSIDE P2) OR ((Forbidden_range_B NOT INSIDE P2) OR (Forbidden_range_C NOT INSIDE P2)))
 err1 = err1_TMP INSIDE EDGE GT_P96
 err2 = err2_TMP INSIDE EDGE GT_P96
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Forbidden space between AOP_GT (width = 0.022um, INSIDE GT_P96) and AOP_GT = 0.07~0.072, 0.076~0.079, 0.1~0.342um
    DRC don’t check:
    1) AOP_GT (INSIDE P2) with PRL <= 0.012um
A: 
GT_S_18j {
@ Forbidden space between AOP_GT (width = 0.022um, INSIDE GT_P96) and AOP_GT = 0.07~0.072, 0.076~0.079, 0.1~0.342um
@ DRC don’t check:
@ 1) AOP_GT (INSIDE P2) with PRL <= 0.012um
 Forbidden_range_A = COPY Forbidden_aop_GT_space_070_072
 Forbidden_range_B = COPY Forbidden_aop_GT_space_076_079
 Forbidden_range_C = COPY Forbidden_aop_GT_space_100_342
 Forbidden_range_A_InP2 = (Forbidden_range_A ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 Forbidden_range_B_InP2 = (Forbidden_range_B ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 Forbidden_range_C_InP2 = (Forbidden_range_C ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 err1_TMP = AOP_GT_022_v_edges COIN EDGE (OR Forbidden_range_A_InP2 Forbidden_range_B_InP2 Forbidden_range_C_InP2)
 err2_TMP = AOP_GT_022_v_edges COIN EDGE (((Forbidden_range_A NOT INSIDE P2) OR (Forbidden_range_B NOT INSIDE P2)) OR (Forbidden_range_C NOT INSIDE P2))
 err1 = err1_TMP INSIDE EDGE GT_P96
 err2 = err2_TMP INSIDE EDGE GT_P96
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Forbidden space between AOP_GT (width = 0.02um, INSIDE GT_P96) and AOP_GT (width = 0.032) = 0.073~0.075, 0.081, 0.1~0.342um
    DRC don’t check:
    1) AOP_GT (INSIDE P2) with PRL <= 0.012um
A: 
GT_S_18k {
@ Forbidden space between AOP_GT (width = 0.02um, INSIDE GT_P96) and AOP_GT (width = 0.032) = 0.073~0.075, 0.081, 0.1~0.342um
@ DRC don’t check:
@ 1) AOP_GT (INSIDE P2) with PRL <= 0.012um
 Forbidden_range_A = COPY Forbidden_aop_GT_space_073_075
 Forbidden_range_B = COPY Forbidden_aop_GT_space_eq_081
 Forbidden_range_C = COPY Forbidden_aop_GT_space_100_342
 Forbidden_range_A_InP2 = (Forbidden_range_A ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 Forbidden_range_B_InP2 = (Forbidden_range_B ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 Forbidden_range_C_InP2 = (Forbidden_range_C ENCLOSE RECTANGLE 0.070 0.012+GLOBAL_TOLERANCE ORTHOGONAL ONLY) INSIDE P2
 err1_TMP = ((OR Forbidden_range_A_InP2 Forbidden_range_B_InP2 Forbidden_range_C_InP2) WITH EDGE AOP_GT_020_v_edges) WITH EDGE AOP_GT_032_v_edges
 err2_TMP = ((((Forbidden_range_A NOT INSIDE P2) OR (Forbidden_range_B NOT INSIDE P2)) OR (Forbidden_range_C NOT INSIDE P2)) WITH EDGE AOP_GT_020_v_edges) WITH EDGE AOP_GT_032_v_edges
 err1 = err1_TMP NOT OUTSIDE GT_P96
 err2 = err2_TMP NOT OUTSIDE GT_P96
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_GT jog (width <= 0.004um) and GATE in GATE poly direction when PRL > -0.096um. >= 0.048um
A: 
GT_S_19 {
@ Space between AOP_GT jog (width <= 0.004um) and GATE in GATE poly direction when PRL > -0.096um. >= 0.048um
 err1 = EXT AOP_GT_jog_lteq_004 GATE < 0.048 OPPOSITE EXTENDED 0.096 MEASURE ALL REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

#IFDEF DFM_RULES_PRIORITY_1 YES
NODMF_SIZE_045 = SIZE NODMF BY 0.45
MARKS_SIZE_045 = SIZE MARKS BY 0.45

Q: Empty space between (ALL_GT NOT P2), except DIR, RESNW, OCCD, OCOVL, LOGO, and ((Chip corner stress relief and MARKS) su 0.45um) regions
    DRC flags (((chip NOT (ALL_GT NOT P2)) sd 0.45um) su 0.45um) <= 0.9um
A: 
GT_S_20a_DFM1 {
@ Empty space between (ALL_GT NOT P2), except DIR, RESNW, OCCD, OCOVL, LOGO, and ((Chip corner stress relief and MARKS) su 0.45um) regions
@ DRC flags (((chip NOT (ALL_GT NOT P2)) sd 0.45um) su 0.45um) <= 0.9um
 waive_AREA = OR MARKS_SIZE_045 NODMF_SIZE_045 RESNW DIR OCCD OCOVL LOGO
 check_AREA = (DRC:1 NOT ALL_GT_NOT_P2) NOT waive_AREA
 err1 = SIZE check_AREA BY 0.45 UNDEROVER
 err1 NOT INSIDE SealR_NOT_BULK
}
#ENDIF

//GT_P96

Q: Space between two GT_P96 >= 0.63um
A: 
GT_P96_S_1 {
@ Space between two GT_P96 >= 0.63um
 err1 = EXT GT_P96 < 0.63 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between GT_P96 and GATE >= 0.24um
A: 
GT_P96_S_2 {
@ Space between GT_P96 and GATE >= 0.24um
 err1 = EXT GT_P96 GATE < 0.24 ABUT<90 SINGULAR REGION  //;based on GT_P96_S_1
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between GT_P96 and GATE in S/D direction >= 0.395um
A: 
GT_P96_S_3 {
@ Space between GT_P96 and GATE in S/D direction >= 0.395um
 err1 = EXT GT_P96_v_edges GATE < 0.395 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between GT_P96 and AOP_GT in S/D direction, except DMCMK1 >= 0.035um
A: 
GT_P96_S_4 {
@ Space between GT_P96 and AOP_GT in S/D direction, except DMCMK1 >= 0.035um
 err1 = EXT GT_P96_v_edges AOP_GT < 0.035 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE DMCMK1
}

//GTDMP

Q: Space between (GT OR GTDMP) (GTDMP overlap or abut GT is not allowed), except OCOVL region >= 0.07um
A: 
GTDMP_S_1 {
@ Space between (GT OR GTDMP) (GTDMP overlap or abut GT is not allowed), except OCOVL region >= 0.07um
 err1 = EXT DMP_GT < 0.07 ABUT<90 SINGULAR REGION
 err2 = GTDMP NOT OUTSIDE EDGE GT
 err1 NOT INSIDE OCOVL
 err2 NOT INSIDE EDGE OCOVL
}

Q: Space between GTDMP (width <= 0.032um) and AOP_GT (width >= 0.07um) >= 0.117um
A: 
GTDMP_S_2 {
@ Space between GTDMP (width <= 0.032um) and AOP_GT (width >= 0.07um) >= 0.117um
 err1 = EXT GTDMP_eqlt_032 AOP_GT_eqgt_070 < 0.117 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between GTDMP (width >= 0.07um) and AOP_GT >= 0.117um
A: 
GTDMP_S_3 {
@ Space between GTDMP (width >= 0.07um) and AOP_GT >= 0.117um
 err1 = EXT GTDMP_eqgt_070 AOP_GT < 0.117 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}


Q: Space between GTDMP (width <= 0.032um) and AOP_GT in GATE poly direction >= 0.108um
A: 
GTDMP_S_5 {
@ Space between GTDMP (width <= 0.032um) and AOP_GT in GATE poly direction >= 0.108um
 chk_GTDMP = GTDMP WITH EDGE (CONVEX EDGE GTDMP == 2 WITH LENGTH <= 0.032)
 err1 = EXT chk_GTDMP AOP_GT_h_edges < 0.108 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between GTDMP (width >= 0.07um) and AOP_GT in GATE poly direction >= 0.117um
A: 
GTDMP_S_6 {
@ Space between GTDMP (width >= 0.07um) and AOP_GT in GATE poly direction >= 0.117um
 err1 = EXT GTDMP_eqgt_070 AOP_GT_h_edges < 0.117 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between GTDMP and AOP_AA >= 0.046um
A: 
GTDMP_S_7 {
@ Space between GTDMP and AOP_AA >= 0.046um
 err1 = EXT AOP_AA GTDMP < 0.046 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//P2

Q: Space between two P2s, except INST region >= 0.09um
A: 
P2_S_1a {
@ Space between two P2s, except INST region >= 0.09um
 err1 = EXT P2 < 0.09 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE INST
}

Q: Space between two P2s when one or both P2 width >= 0.108um. >= 0.178um
A: 
P2_S_1b {
@ Space between two P2s when one or both P2 width >= 0.108um. >= 0.178um
 err1 = EXT P2 P2_eqgt_108 < 0.178 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between P2 (width = 0.048um) in GATE poly direction, except INST region >= 0.148um
A: 
P2_S_1c {
@ Space between P2 (width = 0.048um) in GATE poly direction, except INST region >= 0.148um
 err1 = EXT P2_W_048_edges < 0.148 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE INST
}

Q: At least one side space between P2 in GATE poly direction when PRL > 0.312um, except OCOVLP2A region >= 0.178um
A: 
P2_S_1d {
@ At least one side space between P2 in GATE poly direction when PRL > 0.312um, except OCOVLP2A region >= 0.178um
 sps_lt180_sides = EXT [P2_h_edges] P2 < 0.178 ABUT<90 OPPOSITE
 sps_lt180_sides_PRL = LENGTH sps_lt180_sides > 0.312
 err1_TMP = INT sps_lt180_sides_PRL <= 0.130 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED  //;based on P2.W.1
 err1 = err1_TMP ENCLOSE RECTANGLE 0.312+GLOBAL_TOLERANCE 0.005 ORTHOGONAL ONLY
 err1 NOT INSIDE OCOVLP2A
}

Q: At least one side space between P2(width >= 0.108um) in GATE poly direction when PRL > 0.312um. >= 0.218um
A: 
P2_S_1e {
@ At least one side space between P2(width >= 0.108um) in GATE poly direction when PRL > 0.312um. >= 0.218um
 sps_lt225_sides = EXT [P2_W_eqgt_108_edges] < 0.218 ABUT<90 OPPOSITE
 sps_lt225_sides_PRL = LENGTH sps_lt225_sides > 0.312
 err1_TMP = INT sps_lt225_sides_PRL <= 0.130 ABUT<90 OPPOSITE REGION  //;based on P2.W.1
 err1 = err1_TMP ENCLOSE RECTANGLE 0.312+GLOBAL_TOLERANCE 0.005 ORTHOGONAL ONLY
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between P2 and AOP_GT, except INST region >= 0.035um
A: 
P2_S_2 {
@ Space between P2 and AOP_GT, except INST region >= 0.035um
 err1 = EXT P2 AOP_GT < 0.035 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE INST
}

P2_jog_100 = ANGLE (CONVEX EDGE P2 ANGLE1 == 90 ANGLE2 == 270 WITH LENGTH < 0.100) == 90
P2_jog_sps_040_AOP_GT_edges = EXT P2_jog_100 [AOP_GT] <= 0.040 ABUT<90 OPPOSITE
P2_jog_sps_045_AOP_GT_edges = EXT P2_jog_100 [AOP_GT] <= 0.045 ABUT<90 OPPOSITE

Q: Space between P2 and M0G in GATE poly direction (overlap is not allowed) >= 0.035um
    1) DRC checks the M0G on nearest AOP_GT with distance from P2 jog <= 0.100um
    2) Space between P2 jog's vertical edge and GT is <= 0.04um
A: 
P2_S_3 {
@ Space between P2 and M0G in GATE poly direction (overlap is not allowed) >= 0.035um
@ 1) DRC checks the M0G on nearest AOP_GT with distance from P2 jog <= 0.100um
@ 2) Space between P2 jog's vertical edge and GT is <= 0.04um
 m0g_CHK = M0G INTERACT (AOP_GT WITH EDGE P2_jog_sps_040_AOP_GT_edges)
 GTs_CHK = AOP_GT_NOT_P2 INTERACT m0g_CHK
 err_CRN = INT GTs_CHK < 0.005 ABUT==90 INTERSECTING ONLY REGION
 err_CHK = P2_h_edges TOUCH EDGE (err_CRN WITH EDGE P2_jog_sps_040_AOP_GT_edges)

 err1 = EXT m0g_CHK err_CHK < 0.035 ABUT<90 OPPOSITE REGION INSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK

// err2 = m0g_CHK AND P2  // M0G is allowed in P2 based on P2.EX.6
// err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between P2 and AOP_AA in P2 width direction (overlap is not allowed), except P2 to pick-up space = 0.014um and INST region >= 0.016um
A: 
P2_S_4a {
@ Space between P2 and AOP_AA in P2 width direction (overlap is not allowed), except P2 to pick-up space = 0.014um and INST region >= 0.016um
 err1_waive = EXT P2_h_edges TAP_RAW == 0.014 OPPOSITE REGION
 err1 = (EXT P2_h_edges AOP_AA < 0.016 ABUT<90 OPPOSITE REGION) NOT err1_waive
 err2 = AND AOP_AA P2

 err1 NOT INSIDE INST
 err2 NOT INSIDE INST
}
Q: Recommended P2 space to GATE in GATE poly direction when AA width <= 0.576um, poly <= 0.02um, PRL > -0.215um. >= 0.12um
A: 
P2_S_7_DFM1 {
@ Recommended P2 space to GATE in GATE poly direction when AA width <= 0.576um, poly <= 0.02um, PRL > -0.215um. >= 0.12um
 chk_aa = (AA INTERACT GT_eqlt_020) WITH WIDTH <= 0.576
 chk_po = (GT_eqlt_020 AND chk_aa) AND GATE
 err1 = EXT P2_h_edges chk_po < 0.12 ABUT<90 OPPOSITE EXTENDED 0.215 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Recommended P2 space to GATE in GATE poly direction when AA width <= 0.576um, poly <= 0.024um, PRL > -0.23um inside GT_P96 region >= 0.12um
A: 
P2_S_8_DFM1 {
@ Recommended P2 space to GATE in GATE poly direction when AA width <= 0.576um, poly <= 0.024um, PRL > -0.23um inside GT_P96 region >= 0.12um
 chk_aa = (AA INTERACT GT_eqlt_024) WITH WIDTH <= 0.576
 chk_po = (GT_eqlt_024 AND chk_aa) AND GATE
 err1 = (EXT P2_h_edges chk_po < 0.12 ABUT<90 OPPOSITE EXTENDED 0.23 REGION) NOT OUTSIDE GT_P96
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: For NMOS, Channel length <= 24nm, SA/SB = (192nm-GT/2) or (180-GT/2):
    If both left and right first adjacent GT is cut, Fin number = 2, suggest P2 to AA space >= 40nm, Fin number = 3&4, suggest P2 to AA space >= 25nm
A: 
P2_S_9_DFM1 {
@ For NMOS, Channel length <= 24nm, SA/SB = (192nm-GT/2) or (180-GT/2):
@ If both left and right first adjacent GT is cut, Fin number = 2, suggest P2 to AA space >= 40nm, Fin number = 3&4, suggest P2 to AA space >= 25nm
 sa_sb_192_180 = ((NACT ENCLOSE NGATE) INTERACT GATE_raw == (1+1)*2 +1) ENCLOSE TRGATE_LE_LT_24
 adjacent_gate = TRGATE INTERACT (SD INTERACT TRGATE == 1)
 adjacent_gate_o = ((GT INTERACT adjacent_gate) NOT edge_gate_AA_act) INTERACT P2
 adjacent_gate_r = sa_sb_192_180 INTERACT (adjacent_gate INTERACT adjacent_gate_o) == 2
 adjacent_gate_p = P2 INTERACT (adjacent_gate_o INTERACT adjacent_gate_r)
 err1 = EXT (adjacent_gate_r INTERACT FIN == 2) (adjacent_gate_p COIN EDGE P2_h_edges) < 0.040 ABUT<90 OPPOSITE REGION
 err2 = EXT (adjacent_gate_r INTERACT FIN >= 3 <= 4) (adjacent_gate_p COIN EDGE P2_h_edges) < 0.025 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: For PMOS, Channel length <= 24nm:
    If both left and right first adjacent GT is cut, Fin number = 2, suggest P2 to AA space >= 68nm, Fin number = 3&4, suggest P2 to AA space >= 50nm
    if only one side adjacent GT is cut, suggest P2 to AA space >= 25nm
A: 
P2_S_10_DFM1 {
@ For PMOS, Channel length <= 24nm:
@ If both left and right first adjacent GT is cut, Fin number = 2, suggest P2 to AA space >= 68nm, Fin number = 3&4, suggest P2 to AA space >= 50nm
@ if only one side adjacent GT is cut, suggest P2 to AA space >= 25nm
 sa_sb_192_180 = ((PACT ENCLOSE PGATE) INTERACT GATE_raw == (1+1)*2 +1) ENCLOSE TRGATE_LE_LT_24
 adjacent_gate = TRGATE INTERACT (SD INTERACT TRGATE == 1)
 adjacent_gate_o = ((GT INTERACT adjacent_gate) NOT edge_gate_AA_act) INTERACT P2
 adjacent_gate_r2 = sa_sb_192_180 INTERACT (adjacent_gate INTERACT adjacent_gate_o) == 2
 adjacent_gate_r1 = sa_sb_192_180 INTERACT (adjacent_gate INTERACT adjacent_gate_o) == 1
 adjacent_gate_p2 = P2 INTERACT (adjacent_gate_o INTERACT adjacent_gate_r2)
 adjacent_gate_p1 = P2 INTERACT (adjacent_gate_o INTERACT adjacent_gate_r1)
 err1 = EXT (adjacent_gate_r2 INTERACT FIN == 2) (adjacent_gate_p2 COIN EDGE P2_h_edges) < 0.068 ABUT<90 OPPOSITE REGION
 err2 = EXT (adjacent_gate_r2 INTERACT FIN >= 3 <= 4) (adjacent_gate_p2 COIN EDGE P2_h_edges) < 0.050 ABUT<90 OPPOSITE REGION
 err3 = EXT (adjacent_gate_r1 INTERACT FIN >= 2 <= 4) (adjacent_gate_p1 COIN EDGE P2_h_edges) < 0.025 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}


//SN
Q: SN space, except INST region >= 0.192um
A: 
SN_S_1 {
@ SN space, except INST region >= 0.192um
 err1 = EXT SN < 0.192 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE INST
}

VARIABLE SN_S_2_val 0.248
VARIABLE SN_S_2_PRL 0.255-GLOBAL_TOLERANCE

Q: Space between SN in S/D direction when PRL >= 0.255um. >= 0.248um
A: 
SN_S_2 {
@ Space between SN in S/D direction when PRL >= 0.255um. >= 0.248um
 nw_err_RAW = ANGLE (EXT [SN] < SN_S_2_val ABUT<90 OPPOSITE) > 88 <= 90
 nw_jog_ALL = (CONVEX EDGE SN == 1) NOT COIN EDGE nw_err_RAW
 nw_jog_EXP_a = EXPAND EDGE nw_jog_ALL INSIDE BY 0.0005
 nw_jog_EXP_b = EXPAND EDGE nw_jog_ALL OUTSIDE BY 0.0005
 nw_jog_TMP = (nw_jog_ALL COIN EDGE (nw_jog_EXP_a WITH EDGE nw_err_RAW)) COIN EDGE (nw_jog_EXP_b WITH EDGE nw_err_RAW)
 nw_jog_EXP = ((VERTEX (EXPAND EDGE nw_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE nw_err_RAW OUTSIDE BY 0.001)) NOT SN
 nw_err_PRL = DFM PROPERTY nw_jog_EXP nw_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(nw_err_RAW)] > SN_S_2_PRL
 err1 = EXT (nw_err_RAW TOUCH EDGE nw_err_PRL) SN < SN_S_2_val ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

VARIABLE SN_S_3_val 0.224
VARIABLE SN_S_3_PRL 0.352

Q: SN space on STI if PRL >= 0.352um. >= 0.224um
     except:
     1) SN space to ALL_AA < 0.082um in GATE poly direction
     2) SN space to ALL_AA < 0.109um in S/D direction
     3) GT_P96 and INST regions
A: 
SN_S_3 {
@ SN space on STI if PRL >= 0.352um. >= 0.224um
@ except:
@ 1) SN space to ALL_AA < 0.082um in GATE poly direction
@ 2) SN space to ALL_AA < 0.109um in S/D direction
@ 3) GT_P96 and INST regions
 ERRS_all_RAW = EXT SN < SN_S_3_val ABUT<90 OPPOSITE REGION
 ERRS_all_TMP = ERRS_all_RAW ENCLOSE RECTANGLE 0.001 SN_S_3_PRL ORTHOGONAL ONLY
 waive_v_AREA = EXT ALL_AA_h_edges (SN INTERACT ERRS_all_TMP) < 0.082 ABUT<90 OPPOSITE REGION
 waive_h_AREA = EXT ALL_AA_v_edges (SN INTERACT ERRS_all_TMP) < 0.109 ABUT<90 OPPOSITE REGION

 err1_RAW = (ERRS_all_TMP NOT ALL_AA) NOT (OR waive_v_AREA waive_h_AREA)
 err1_TMP = err1_RAW ENCLOSE RECTANGLE 0.001 SN_S_3_PRL ORTHOGONAL ONLY
 err1 = err1_TMP NOT INSIDE GT_P96
 err1 NOT INSIDE INST
}

VARIABLE SN_S_4_val 0.224
VARIABLE SN_S_4_PRL 0.386

Q: SN space on STI if PRL >= 0.386um INSIDE GT_P96 region >= 0.224um
    except:
    1) SN space to ALL_AA < 0.082um in GATE poly direction
    2) SN space to ALL_AA < 0.112um in S/D direction
A: 
SN_S_4 {
@ SN space on STI if PRL >= 0.386um INSIDE GT_P96 region >= 0.224um
@ except:
@ 1) SN space to ALL_AA < 0.082um in GATE poly direction
@ 2) SN space to ALL_AA < 0.112um in S/D direction
 ERRS_all_RAW = EXT SN < SN_S_4_val ABUT<90 OPPOSITE REGION
 ERRS_all_TMP = ERRS_all_RAW ENCLOSE RECTANGLE 0.001 SN_S_4_PRL ORTHOGONAL ONLY
 waive_v_AREA = EXT ALL_AA_h_edges (SN INTERACT ERRS_all_TMP) < 0.082 ABUT<90 OPPOSITE REGION
 waive_h_AREA = EXT ALL_AA_v_edges (SN INTERACT ERRS_all_TMP) < 0.112 ABUT<90 OPPOSITE REGION

 err1_RAW = (ERRS_all_TMP NOT ALL_AA) NOT (OR waive_v_AREA waive_h_AREA)
 err1_TMP = err1_RAW ENCLOSE RECTANGLE 0.001 SN_S_4_PRL ORTHOGONAL ONLY
 err1 = err1_TMP NOT OUTSIDE GT_P96
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between SN and P+AA, except INST and DIOMK2 region >= 0.048um
A: 
SN_S_5 {
@ Space between SN and P+AA, except INST and DIOMK2 region >= 0.048um
 err1 = EXT SN PACT < 0.048 ABUT<90 SINGULAR REGION  //;GATED diode can be butted based on SN.R.1
 err1 NOT INSIDE INST_DIOMK2
}

Q: Space between SN and P+AA (AA vertical edge extend 1/2 GT width) in S/D direction, except INST and DIOMK2 region >= 0.065um
A: 
SN_S_5a {
@ Space between SN and P+AA (AA vertical edge extend 1/2 GT width) in S/D direction, except INST and DIOMK2 region >= 0.065um
 err1 = EXT SN_v_edges edge_gate_AA_pact < 0.065 ABUT<90 OPPOSITE REGION  //;GATED diode can be butted based on SN.R.1
 err1 NOT INSIDE INST_DIOMK2
}

Q: Space between SN and P+ pick-up AA, except INST and DIOMK2 region >= 0.048um
A: 
SN_S_6 {
@ Space between SN and P+ pick-up AA, except INST and DIOMK2 region >= 0.048um
 err1 = EXT SN PTAP_RAW < 0.048 ABUT<90 SINGULAR REGION  //;GATED diode can be butted based on SN.R.1
 err1 NOT INSIDE INST_DIOMK2
}

Q: Space between SN and P+ pick-up AA (AA vertical edge extend 1/2 GT width) in horizontal direction, except INST and DIOMK2 region >= 0.065um
A: 
SN_S_6a {
@ Space between SN and P+ pick-up AA (AA vertical edge extend 1/2 GT width) in horizontal direction, except INST and DIOMK2 region >= 0.065um
 err1 = EXT SN_v_edges edge_gate_AA_ptap < 0.065 ABUT<90 OPPOSITE REGION  //;GATED diode can be butted based on SN.R.1
 err1 NOT INSIDE INST_DIOMK2
}

Q: Space between SN and DOP_AA (DOP_AA CUT SN is not allowed) >= 0.048um
A: 
SN_S_7 {
@ Space between SN and DOP_AA (DOP_AA CUT SN is not allowed) >= 0.048um
 err1 = EXT DOP_AA SN < 0.048 ABUT<90 SINGULAR REGION
 err2 = SN INSIDE EDGE (DOP_AA CUT SN)

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between SN and DOP_AA (AA vertical edge extend 1/2 GT width) in hotizontal direction (DOP_AA CUT SN is not allowed) >= 0.065um
A: 
SN_S_7a {
@ Space between SN and DOP_AA (AA vertical edge extend 1/2 GT width) in hotizontal direction (DOP_AA CUT SN is not allowed) >= 0.065um
 err1 = EXT SN_v_edges edge_gate_dopAA_all < 0.065 ABUT<90 OPPOSITE REGION
 err2 = SN INSIDE EDGE (edge_gate_dopAA_all CUT SN)

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

VARIABLE SN_S_8_val_hor 0.087
VARIABLE SN_S_8_val_ver 0.061

Q: Space between SN and P+AA in GATE poly direction when space in S/D direction < 0.087um at each SN corner, except INST and DIOMK2 region >= 0.061um
A: 
SN_S_8 {
@ Space between SN and P+AA in GATE poly direction when space in S/D direction < 0.087um at each SN corner, except INST and DIOMK2 region >= 0.061um
 y1 = (EXT [PACT_outside_SN_v_edges] SN < SN_S_8_val_hor ABUT<90 OPPOSITE EXTENDED SN_S_8_val_ver) OR EDGE (EXT [PACT_outside_SN_h_edges] SN < SN_S_8_val_ver ABUT<90 OPPOSITE EXTENDED SN_S_8_val_hor)
 y2 = (EXT PACT_outside_SN_v_edges [SN] < SN_S_8_val_hor ABUT<90 OPPOSITE EXTENDED SN_S_8_val_ver) OR EDGE (EXT PACT_outside_SN_h_edges [SN] < SN_S_8_val_ver ABUT<90 OPPOSITE EXTENDED SN_S_8_val_hor)
 y3 = EXT pact_convex_corner sn_concave_corner < SN_S_8_val_hor ABUT<90 OPPOSITE EXTENDED SN_S_8_val_hor
 y4 = EXT pact_concave_corner sn_convex_corner < SN_S_8_val_hor ABUT<90 OPPOSITE EXTENDED SN_S_8_val_hor
 err1_a = INT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_b = EXT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_a = INT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_b = EXT y1 < 0.001 ABUT==90 INTERSECTING ONLY

 err1_c = DFM PROPERTY y3 err1_a err1_b ABUT ALSO OVERLAP MULTI [-= (count(err1_a) > 0 && count(err1_b) > 0) ? 1 : 0] > 0
 err2_c = DFM PROPERTY y4 err2_a err2_b ABUT ALSO OVERLAP MULTI [-= (count(err2_a) > 0 && count(err2_b) > 0) ? 1 : 0] > 0
 err1 = DFM COPY err1_c REGION
 err2 = DFM COPY err2_c REGION
 err1 NOT INSIDE INST_DIOMK2
 err2 NOT INSIDE INST_DIOMK2
}

VARIABLE SN_S_8a_val_hor 0.079
VARIABLE SN_S_8a_val_ver 0.061

Q: Space between SN and P+AA (AA vertical edge extend 1/2 GT width) in S/D direction when space in GATE poly direction < 0.061um at each SN corner >= 0.079um
    Except INST and DIOMK2 region
A: 
SN_S_8a {
@ Space between SN and P+AA (AA vertical edge extend 1/2 GT width) in S/D direction when space in GATE poly direction < 0.061um at each SN corner >= 0.079um
@ Except INST and DIOMK2 region
 y1 = (EXT [PACT_outside_SN_v_edges_ov] SN < SN_S_8a_val_hor ABUT<90 OPPOSITE EXTENDED SN_S_8a_val_ver) OR EDGE (EXT [PACT_outside_SN_h_edges_ov] SN < SN_S_8a_val_ver ABUT<90 OPPOSITE EXTENDED SN_S_8a_val_hor)
 y2 = (EXT PACT_outside_SN_v_edges_ov [SN] < SN_S_8a_val_hor ABUT<90 OPPOSITE EXTENDED SN_S_8a_val_ver) OR EDGE (EXT PACT_outside_SN_h_edges_ov [SN] < SN_S_8a_val_ver ABUT<90 OPPOSITE EXTENDED SN_S_8a_val_hor)
 y3 = EXT pact_convex_corner_ov sn_concave_corner < SN_S_8a_val_hor ABUT<90 OPPOSITE EXTENDED SN_S_8a_val_hor
 y4 = EXT pact_concave_corner_ov sn_convex_corner < SN_S_8a_val_hor ABUT<90 OPPOSITE EXTENDED SN_S_8a_val_hor
 err1_a = INT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_b = EXT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_a = INT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_b = EXT y1 < 0.001 ABUT==90 INTERSECTING ONLY

 err1_c = DFM PROPERTY Y3 err1_a err1_b ABUT ALSO OVERLAP MULTI [-= (count(err1_a) > 0 && count(err1_b) > 0) ? 1 : 0] > 0
 err2_c = DFM PROPERTY Y4 err2_a err2_b ABUT ALSO OVERLAP MULTI [-= (count(err2_a) > 0 && count(err2_b) > 0) ? 1 : 0] > 0
 err1 = DFM COPY err1_c REGION
 err2 = DFM COPY err2_c REGION
 err1 NOT INSIDE INST_DIOMK2
 err2 NOT INSIDE INST_DIOMK2
}

Q: Space between SN vertical edge (edge length <= 0.296um between two concave corners with both sides length >= 0.09um) and AA (AA vertical edge extend 1/2 GT width) in S/D direction >= 0.079um
A: 
SN_S_9 {
@ Space between SN vertical edge (edge length <= 0.296um between two concave corners with both sides length >= 0.09um) and AA (AA vertical edge extend 1/2 GT width) in S/D direction >= 0.079um
 EDG_RAW = CONVEX EDGE SN ANGLE1 == 270 LENGTH1 >= 0.09 ANGLE2 == 270 LENGTH2 >= 0.09 WITH LENGTH <= 0.296
 EDG_CHK = ANGLE EDG_RAW == 90
 err1 = EXT EDG_CHK edge_gate_AA_all < 0.079 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//SP

Q: SP space, except INST region >= 0.192um
A: 
SP_S_1 {
@ SP space, except INST region >= 0.192um
 err1 = EXT SP < 0.192 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE INST
}

VARIABLE SP_S_2_val 0.248
VARIABLE SP_S_2_PRL 0.255-GLOBAL_TOLERANCE

Q: Space between SP in S/D direction when PRL >= 0.255um. >= 0.248um
A: 
SP_S_2 {
@ Space between SP in S/D direction when PRL >= 0.255um. >= 0.248um
 nw_err_RAW = ANGLE (EXT [SP] < SP_S_2_val ABUT<90 OPPOSITE) > 88 <= 90
 nw_jog_ALL = (CONVEX EDGE SP == 1) NOT COIN EDGE nw_err_RAW
 nw_jog_EXP_a = EXPAND EDGE nw_jog_ALL INSIDE BY 0.0005
 nw_jog_EXP_b = EXPAND EDGE nw_jog_ALL OUTSIDE BY 0.0005
 nw_jog_TMP = (nw_jog_ALL COIN EDGE (nw_jog_EXP_a WITH EDGE nw_err_RAW)) COIN EDGE (nw_jog_EXP_b WITH EDGE nw_err_RAW)
 nw_jog_EXP = ((VERTEX (EXPAND EDGE nw_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE nw_err_RAW OUTSIDE BY 0.001)) NOT SP
 nw_err_PRL = DFM PROPERTY nw_jog_EXP nw_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(nw_err_RAW)] > SP_S_2_PRL
 err1 = EXT (nw_err_RAW TOUCH EDGE nw_err_PRL) SP < SP_S_2_val ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

VARIABLE SP_S_3_val 0.224
VARIABLE SP_S_3_PRL 0.352

Q: SP space on STI if PRL >= 0.352um. >= 0.224um
     except:
    1) SP space to ALL_AA < 0.082um in GATE poly direction
    2) SP space to ALL_AA < 0.109um in S/D direction
    3) GT_P96 and INST regions
A: 
SP_S_3 {
@ SP space on STI if PRL >= 0.352um. >= 0.224um
@ except:
@ 1) SP space to ALL_AA < 0.082um in GATE poly direction
@ 2) SP space to ALL_AA < 0.109um in S/D direction
@ 3) GT_P96 and INST regions
 ERRS_all_RAW = EXT SP < SP_S_3_val ABUT<90 OPPOSITE REGION
 ERRS_all_TMP = ERRS_all_RAW ENCLOSE RECTANGLE 0.001 SP_S_3_PRL ORTHOGONAL ONLY
 waive_v_AREA = EXT ALL_AA_h_edges (SP INTERACT ERRS_all_TMP) < 0.082 ABUT<90 OPPOSITE REGION
 waive_h_AREA = EXT ALL_AA_v_edges (SP INTERACT ERRS_all_TMP) < 0.109 ABUT<90 OPPOSITE REGION

 err1_RAW = (ERRS_all_TMP NOT ALL_AA) NOT (OR waive_v_AREA waive_h_AREA)
 err1_TMP = err1_RAW ENCLOSE RECTANGLE 0.001 SP_S_3_PRL ORTHOGONAL ONLY
 err1 = err1_TMP NOT INSIDE GT_P96
 err1 NOT INSIDE INST
}

VARIABLE SP_S_4_val 0.224
VARIABLE SP_S_4_PRL 0.386

Q: SP space on STI if PRL >= 0.386um in GT_P96 region >= 0.224um
    except:
    1) SP space to ALL_AA < 0.082um in GATE poly direction
    2) SP space to ALL_AA < 0.112um in S/D direction
A: 
SP_S_4 {
@ SP space on STI if PRL >= 0.386um in GT_P96 region >= 0.224um
@ except:
@ 1) SP space to ALL_AA < 0.082um in GATE poly direction
@ 2) SP space to ALL_AA < 0.112um in S/D direction
 ERRS_all_RAW = EXT SP < SP_S_4_val ABUT<90 OPPOSITE REGION
 ERRS_all_TMP = ERRS_all_RAW ENCLOSE RECTANGLE 0.001 SP_S_4_PRL ORTHOGONAL ONLY
 waive_v_AREA = EXT ALL_AA_h_edges (SP INTERACT ERRS_all_TMP) < 0.082 ABUT<90 OPPOSITE REGION
 waive_h_AREA = EXT ALL_AA_v_edges (SP INTERACT ERRS_all_TMP) < 0.112 ABUT<90 OPPOSITE REGION

 err1_RAW = (ERRS_all_TMP NOT ALL_AA) NOT (OR waive_v_AREA waive_h_AREA)
 err1_TMP = err1_RAW ENCLOSE RECTANGLE 0.001 SP_S_4_PRL ORTHOGONAL ONLY
 err1 = err1_TMP NOT OUTSIDE GT_P96
 err1 NOT INSIDE SealR_NOT_BULK
}

SP_in_GT_P96 = SP NOT OUTSIDE GT_P96
STI_not_SP = CHIP_NOT_ALL_AA NOT SP
STI_not_SP_GT_P96 = STI_not_SP NOT INSIDE GT_P96

Q: Space between SP and N+AA, except INST and DIOMK2 region >= 0.048um
A: 
SP_S_5 {
@ Space between SP and N+AA, except INST and DIOMK2 region >= 0.048um
 err1 = EXT SP NACT < 0.048 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE INST_DIOMK2
}

Q: Space between SP and N+AA (AA vertical edge extend 1/2 GT width) in S/D direction, except INST and DIOMK2 region >= 0.065um
A: 
SP_S_5a {
@ Space between SP and N+AA (AA vertical edge extend 1/2 GT width) in S/D direction, except INST and DIOMK2 region >= 0.065um
 err1 = EXT SP_v_edges edge_gate_AA_nact < 0.065 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE INST_DIOMK2
}

Q: Space between SP and N+ pick-up AA, except INST and DIOMK2 region >= 0.048um
A: 
SP_S_6 {
@ Space between SP and N+ pick-up AA, except INST and DIOMK2 region >= 0.048um
 err1 = EXT SP NTAPi_RAW < 0.048 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE INST_DIOMK2
}

Q: Space between SP and N+ pick-up AA (AA vertical edge extend 1/2 GT width) in S/D direction, except INST and DIOMK2 region >= 0.065um
A: 
SP_S_6a {
@ Space between SP and N+ pick-up AA (AA vertical edge extend 1/2 GT width) in S/D direction, except INST and DIOMK2 region >= 0.065um
 err1 = EXT SP_v_edges edge_gate_AA_ntap < 0.065 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE INST_DIOMK2
}

Q: Space between SP and DOP_AA (DOP_AA CUT SP is not allowed) >= 0.048um
A: 
SP_S_7 {
@ Space between SP and DOP_AA (DOP_AA CUT SP is not allowed) >= 0.048um
 err1 = EXT DOP_AA SP < 0.048 ABUT<90 SINGULAR REGION
 err2 = SP INSIDE EDGE (DOP_AA CUT SP)

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between SP and DOP_AA (AA vertical edge extend 1/2 GT width) in S/D direction (DOP_AA CUT SP is not allowed) >= 0.065um
A: 
SP_S_7a {
@ Space between SP and DOP_AA (AA vertical edge extend 1/2 GT width) in S/D direction (DOP_AA CUT SP is not allowed) >= 0.065um
 err1 = EXT edge_gate_dopAA_all SP_v_edges < 0.065 ABUT<90 OPPOSITE REGION
 err2 = SP INSIDE EDGE (edge_gate_dopAA_all CUT SP)

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

VARIABLE SP_S_8_val_ver 0.061
VARIABLE SP_S_8_val_hor 0.087

Q: Space between SP and N+AA in GATE poly direction when space in S/D direction < 0.087um at each SP corner, except INST and DIOMK2 region >= 0.061um
A: 
SP_S_8 {
@ Space between SP and N+AA in GATE poly direction when space in S/D direction < 0.087um at each SP corner, except INST and DIOMK2 region >= 0.061um
 y1 = (EXT [NACT_outside_SP_v_edges] SP < SP_S_8_val_hor ABUT<90 OPPOSITE EXTENDED 0.061) OR EDGE (EXT [NACT_outside_SP_h_edges] SP < 0.061 ABUT<90 OPPOSITE EXTENDED SP_S_8_val_hor)
 y2 = (EXT NACT_outside_SP_v_edges [SP] < SP_S_8_val_hor ABUT<90 OPPOSITE EXTENDED 0.061) OR EDGE (EXT NACT_outside_SP_h_edges [SP] < 0.061 ABUT<90 OPPOSITE EXTENDED SP_S_8_val_hor)
 y3 = EXT nact_convex_corner sp_concave_corner < SP_S_8_val_hor ABUT<90 OPPOSITE EXTENDED SP_S_8_val_hor
 y4 = EXT nact_concave_corner sp_convex_corner < SP_S_8_val_hor ABUT<90 OPPOSITE EXTENDED SP_S_8_val_hor
 err1_a = INT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_b = EXT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_a = INT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_b = EXT y1 < 0.001 ABUT==90 INTERSECTING ONLY

 err1_c = DFM PROPERTY y3 err1_a err1_b ABUT ALSO OVERLAP MULTI [-= (count(err1_a) > 0 && count(err1_b) > 0) ? 1 : 0] > 0
 err2_c = DFM PROPERTY y4 err2_a err2_b ABUT ALSO OVERLAP MULTI [-= (count(err2_a) > 0 && count(err2_b) > 0) ? 1 : 0] > 0
 err1 = DFM COPY err1_c REGION
 err2 = DFM COPY err2_c REGION
 err1 NOT INSIDE INST_DIOMK2
 err2 NOT INSIDE INST_DIOMK2
}

VARIABLE SP_S_8a_val_ver 0.061
VARIABLE SP_S_8a_val_hor 0.079

Q: Space between SP and N+AA (AA vertical edge extend 1/2 GT width) in S/D direction when space in GATE poly direction < 0.061um at each SP corner, except INST and DIOMK2 region >= 0.079um
A: 
SP_S_8a {
@ Space between SP and N+AA (AA vertical edge extend 1/2 GT width) in S/D direction when space in GATE poly direction < 0.061um at each SP corner, except INST and DIOMK2 region >= 0.079um
 y1 = (EXT [NACT_outside_SP_v_edges_ov] SP < SP_S_8a_val_hor ABUT<90 OPPOSITE EXTENDED SP_S_8a_val_ver) OR EDGE (EXT [NACT_outside_SP_h_edges_ov] SP < SP_S_8a_val_ver ABUT<90 OPPOSITE EXTENDED SP_S_8a_val_hor)
 y2 = (EXT NACT_outside_SP_v_edges_ov [SP] < SP_S_8a_val_hor ABUT<90 OPPOSITE EXTENDED SP_S_8a_val_ver) OR EDGE (EXT NACT_outside_SP_h_edges_ov [SP] < SP_S_8a_val_ver ABUT<90 OPPOSITE EXTENDED SP_S_8a_val_hor)
 y3 = EXT nact_convex_corner_ov sp_concave_corner < SP_S_8a_val_hor ABUT<90 OPPOSITE EXTENDED SP_S_8a_val_hor
 y4 = EXT nact_concave_corner_ov sp_convex_corner < SP_S_8a_val_hor ABUT<90 OPPOSITE EXTENDED SP_S_8a_val_hor
 err1_a = INT y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_b = EXT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_a = INT y2 < 0.001 ABUT==90 INTERSECTING ONLY
 err2_b = EXT y1 < 0.001 ABUT==90 INTERSECTING ONLY

 err1_c = DFM PROPERTY y3 err1_a err1_b ABUT ALSO OVERLAP MULTI [-= (count(err1_a) > 0 && count(err1_b) > 0) ? 1 : 0] > 0
 err2_c = DFM PROPERTY y4 err2_a err2_b ABUT ALSO OVERLAP MULTI [-= (count(err2_a) > 0 && count(err2_b) > 0) ? 1 : 0] > 0
 err1 = DFM COPY err1_c REGION
 err2 = DFM COPY err2_c REGION
 err1 NOT INSIDE INST_DIOMK2
 err2 NOT INSIDE INST_DIOMK2
}

Q: Space between SP vertical edge (edge length <= 0.296um between two concave corners with both sides length >= 0.09um) and AA (AA vertical edge extend 1/2 GT width) in S/D direction >= 0.079um
A: 
SP_S_9 {
@ Space between SP vertical edge (edge length <= 0.296um between two concave corners with both sides length >= 0.09um) and AA (AA vertical edge extend 1/2 GT width) in S/D direction >= 0.079um
 EDG_RAW = CONVEX EDGE SP ANGLE1 == 270 LENGTH1 >= 0.09 ANGLE2 == 270 LENGTH2 >= 0.09 WITH LENGTH <= 0.296
 EDG_CHK = ANGLE EDG_RAW == 90
 err1 = EXT EDG_CHK edge_gate_AA_all < 0.079 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: For PMOS, Channel length <= 24nm:
    Fin number <= 4, (SA = SB) <= 0.096um, suggest N/P boundary space to AA space >= 80nm
A: 
SP_S_10_DFM1 {
@ For PMOS, Channel length <= 24nm:
@ Fin number <= 4, (SA = SB) <= 0.096um, suggest N/P boundary space to AA space >= 80nm
 SASB_96 = ((PACT ENCLOSE PGATE) INTERACT GATE_raw == 3) ENCLOSE TRGATE_LE_LT_24
 PMOS_SP = (SP ENCLOSE (SASB_96 INTERACT FIN <= 4)) COIN EDGE SN
 err1 = OR (EXT PMOS_SP NAA < 0.08 ABUT<90 REGION) (ENC SASB_96 PMOS_SP < 0.08 ABUT<90 REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}


//M0DMP

Q: Space between M0DMP and AOP_M0 (Overlap with M0 is not allowed) >= 0.05um
A: 
M0DMP_S_1 {
@ Space between M0DMP and AOP_M0 (Overlap with M0 is not allowed) >= 0.05um
 err1 = EXT M0DMP AOP_M0 < 0.05 ABUT<90 SINGULAR REGION
 err2 = M0DMP AND M0
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0DMP and AOP_GT (M0DMP width = 0.04/0.042um) (Overlap is not allowed) >= 0.015um
A: 
M0DMP_S_2 {
@ Space between M0DMP and AOP_GT (M0DMP width = 0.04/0.042um) (Overlap is not allowed) >= 0.015um
 err1 = EXT AOP_GT M0DMP_040_042 < 0.015 ABUT<90 SINGULAR REGION
 err2 = M0DMP AND AOP_GT
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0DMP and AOP_GT (M0DMP width = 0.054um) (Overlap is not allowed) >= 0.032um
A: 
M0DMP_S_3 {
@ Space between M0DMP and AOP_GT (M0DMP width = 0.054um) (Overlap is not allowed) >= 0.032um
 err1 = EXT AOP_GT M0DMP_054 < 0.032 ABUT<90 SINGULAR REGION
 err2 = M0DMP AND AOP_GT
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

M0DMP_NOT_M0CDUM = M0DMP NOT M0CDUM
M0DMP_NOT_M0CDUM_h_edges = ANGLE M0DMP_NOT_M0CDUM == 0

Q: Space between (M0DMP NOT M0CDUM) line-end and AOP_GT (Except AOP_GT jogs <= 0.003um) >= 0.046um
A: 
M0DMP_S_4 {
@ Space between (M0DMP NOT M0CDUM) line-end and AOP_GT (Except AOP_GT jogs <= 0.003um) >= 0.046um
 err1_TMP = EXT [AOP_GT] M0DMP_NOT_M0CDUM_h_edges < 0.046 ABUT<90 MEASURE ALL
 err1 = err1_TMP NOT COIN EDGE AOP_GT_jog_lteq_003
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between M0DMP and V0 (Overlap is not allowed) >= 0.039um
A: 
M0DMP_S_5 {
@ Space between M0DMP and V0 (Overlap is not allowed) >= 0.039um
 err1 = EXT M0DMP V0 < 0.039 ABUT<90 SINGULAR REGION INSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between (M0DMP NOT M0CDUM) and AOP_AA in GATE poly direction (Overlap with AA is not allowed) >= 0.037um
A: 
M0DMP_S_6 {
@ Space between (M0DMP NOT M0CDUM) and AOP_AA in GATE poly direction (Overlap with AA is not allowed) >= 0.037um
 err1 = EXT M0DMP_NOT_M0CDUM_h_edges AOP_AA_h_edges < 0.037 ABUT<90 OPPOSITE REGION
 err2 = M0DMP_NOT_M0CDUM INTERACT AOP_AA SINGULAR ONLY
 err3 = M0DMP AND AA
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0DMP and AOP_M0G (Overlap with M0G is not allowed) >= 0.039um
A: 
M0DMP_S_7 {
@ Space between M0DMP and AOP_M0G (Overlap with M0G is not allowed) >= 0.039um
 err1 = EXT M0DMP AOP_M0G < 0.039 ABUT<90 SINGULAR REGION MEASURE ALL
 err2 = AND M0DMP M0G
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

//M0GDMP

Q: Space between M0GDMP (width = 0.040um) and AOP_M0G (Overlap with M0G is not allowed) >= 0.058um
A: 
M0GDMP_S_1 {
@ Space between M0GDMP (width = 0.040um) and AOP_M0G (Overlap with M0G is not allowed) >= 0.058um
 err1 = EXT M0GDMP_040 AOP_M0G < 0.058 ABUT<90 SINGULAR REGION
 err2 = AND M0GDMP M0G
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Center to center space between AOP_M0G (width = 0.050um) (Overlap with M0G is not allowed, Except M0G region) >= 0.105um
A: 
M0GDMP_S_4 {
@ Center to center space between AOP_M0G (width = 0.050um) (Overlap with M0G is not allowed, Except M0G region) >= 0.105um
 chk_M0G = EXTENTS (AOP_M0G_050 NOT m0g_group) CENTERS 0.0002
 err1 = EXT chk_M0G < 0.105 - 0.0003 ABUT<90 REGION
 err2 = M0GDMP INTERACT (M0G NOT m0g_group) SINGULAR ALSO
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

M0GDMP_060_eq_060_edges = LENGTH M0GDMP_060 == 0.060

Q: Space between M0GDMP (width = 0.060um) to AOP_M0G (Except M0GDMP.S.6, Overlap with M0G is not allowed) >= 0.129um
A: 
M0GDMP_S_5 {
@ Space between M0GDMP (width = 0.060um) to AOP_M0G (Except M0GDMP.S.6, Overlap with M0G is not allowed) >= 0.129um
 waive_S_6 = DFM COPY (EXT M0GDMP_060_eq_060_edges AOP_M0G_050 >= 0.107 < 0.129 ABUT<90 OPPOSITE EXTENDED 0.076) EDGE
 M0G_check_a = M0GDMP_060 NOT COIN EDGE waive_S_6
 M0G_check_b = AOP_M0G NOT COIN EDGE waive_S_6

 err1 = EXT M0G_check_a M0G_check_b < 0.129 ABUT<90 REGION
 err2 = M0GDMP INTERACT M0G SINGULAR ALSO
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between short-side of M0GDMP (width = 0.060um) and AOP_M0G (width = 0.050um, PRL in width direction >= -0.075um) >= 0.106um
A: 
M0GDMP_S_6 {
@ Space between short-side of M0GDMP (width = 0.060um) and AOP_M0G (width = 0.050um, PRL in width direction >= -0.075um) >= 0.106um
 err1 = EXT M0GDMP_060_eq_060_edges AOP_M0G_050 < 0.106 ABUT<90 REGION OPPOSITE EXTENDED 0.076
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0GDMP and AOP_AA in GATE poly direction (Overlap with AA is not allowed) >= 0.013um
A: 
M0GDMP_S_7a {
@ Space between M0GDMP and AOP_AA in GATE poly direction (Overlap with AA is not allowed) >= 0.013um
 err1 = (EXT M0GDMP AOP_AA_h_edges < 0.013 ABUT<90 OPPOSITE REGION) OR (EXT M0GDMP AOP_AA < 0.013 ABUT<90 SINGULAR REGION)
 err2 = AND M0GDMP AA
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0GDMP and AOP_AA (Except M0G.S.7a) >= 0.032um
A: 
M0GDMP_S_7b {
@ Space between M0GDMP and AOP_AA (Except M0G.S.7a) >= 0.032um
 err1 = EXT M0GDMP_v_edges AOP_AA_v_edges < 0.032 ABUT<90 REGION
 err2 = M0GDMP INTERACT AOP_AA SINGULAR ONLY
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0GDMP and AOP_GT (Overlap with GT is not allowed) >= 0.028um
A: 
M0GDMP_S_8 {
@ Space between M0GDMP and AOP_GT (Overlap with GT is not allowed) >= 0.028um
 err1 = EXT M0GDMP AOP_GT < 0.028 ABUT<90 SINGULAR REGION
 err2 = AND M0GDMP GT
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0GDMP and AOP_GT (width >= 0.07um) (Overlap with GT is not allowed) >= 0.038um
A: 
M0GDMP_S_9 {
@ Space between M0GDMP and AOP_GT (width >= 0.07um) (Overlap with GT is not allowed) >= 0.038um
 err1 = EXT M0GDMP AOP_GT_eqgt_070 < 0.038 ABUT<90 SINGULAR REGION
 err2 = AND M0GDMP GT
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0GDMP (width = 0.060um) and AOP_GT (Overlap with GT is not allowed) >= 0.031um
A: 
M0GDMP_S_11 {
@ Space between M0GDMP (width = 0.060um) and AOP_GT (Overlap with GT is not allowed) >= 0.031um
 err1 = EXT M0GDMP_060 AOP_GT < 0.031 ABUT<90 SINGULAR REGION
 err2 = M0GDMP_060 AND GT
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0GDMP and (M0DMP NOT AOP_M0C) (Overlap with M0 is not allowed) >= 0.049um
A: 
M0GDMP_S_1 {
@ Space between M0GDMP and (M0DMP NOT AOP_M0C) (Overlap with M0 is not allowed) >= 0.049um
 err1 = EXT M0GDMP (M0DMP NOT AOP_M0C) < 0.049 ABUT<90 SINGULAR REGION
 err2 = AND M0GDMP M0
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0GDMP and V0 (Overlap is not allowed) >= 0.039um
A: 
M0GDMP_S_2 {
@ Space between M0GDMP and V0 (Overlap is not allowed) >= 0.039um
 err1 = EXT M0GDMP V0 < 0.039 ABUT<90 SINGULAR REGION INSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0GDMP and M0G >= 0.13um
A: 
M0GDMP_S_3 {
@ Space between M0GDMP and M0G >= 0.13um
 err1 = EXT M0GDMP M0G < 0.13 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0GDMP and AA >= 0.07um
A: 
M0GDMP_S_4 {
@ Space between M0GDMP and AA >= 0.07um
 err1 = EXT M0GDMP AA < 0.07 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0GDMP and GT >= 0.055um
A: 
M0GDMP_S_5 {
@ Space between M0GDMP and GT >= 0.055um
 err1 = EXT M0GDMP GT < 0.055 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0GDMP and M0 >= 0.05um
A: 
M0GDMP_S_6 {
@ Space between M0GDMP and M0 >= 0.05um
 err1 = EXT M0GDMP M0 < 0.05 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

//M0

Q: Space between M0 >= 0.05um
A: 
M0_S_1 {
@ Space between M0 >= 0.05um
 err1 = EXT M0 < 0.05 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0 (width = 0.04um) and M0 (width = 0.042um) >= 0.192um
A: 
M0_S_2 {
@ Space between M0 (width = 0.04um) and M0 (width = 0.042um) >= 0.192um
 err1 = EXT M0_040 M0_042 < 0.192 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between the short side of rectangular AOP_M0 (width = 0.054um) and AOP_M0 when PRL > -0.136um. >= 0.119um
A: 
M0_S_3a {
@ Space between the short side of rectangular AOP_M0 (width = 0.054um) and AOP_M0 when PRL > -0.136um. >= 0.119um
 err1 = EXT AOP_M0_054_W_edges AOP_M0 < 0.119 ABUT<90 OPPOSITE EXTENDED 0.136 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between the long side of rectangular AOP_M0 (width = 0.054um) and AOP_M0 when PRL >= -0.119um. >= 0.134um
A: 
M0_S_3b {
@ Space between the long side of rectangular AOP_M0 (width = 0.054um) and AOP_M0 when PRL >= -0.119um. >= 0.134um
 err1 = EXT AOP_M0_054_L_edges AOP_M0 < 0.134 ABUT<90 OPPOSITE EXTENDED 0.119+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between short side of AOP_M0 (width = 0.04/0.042um, PRL > -0.05um), except: Short side space >= 0.086um (length >= 0.229um, either one short side INTERACT M0C (width = 0.052um), short side (NOT INTERACT M0C) space to M0G >= 0.04um) >= 0.096um
A: 
M0_S_4 {
@ Space between short side of AOP_M0 (width = 0.04/0.042um, PRL > -0.05um), except: Short side space >= 0.086um (length >= 0.229um, either one short side INTERACT M0C (width = 0.052um), short side (NOT INTERACT M0C) space to M0G >= 0.04um) >= 0.096um
 M0_L_230 = AOP_M0_040_042 WITH EDGE (LENGTH AOP_M0_040_042 >= 0.229)
 M0_L_230_W_edges = (LENGTH M0_L_230 == 0.04) OR EDGE (LENGTH M0_L_230 == 0.042)
 M0_L_230_W_edges_InM0C = M0_L_230_W_edges INSIDE EDGE M0C_052
 M0_L_230_W_edges_waive = DFM COPY (EXT M0_L_230_W_edges M0_L_230_W_edges_InM0C >= 0.086 < 0.096 ABUT<90 OPPOSITE EXTENDED 0.05) EDGE

 M0_L_230_waive = M0_L_230 WITH EDGE M0_L_230_W_edges_waive
 M0_L_230_waive_W_edges = (M0_L_230_waive COIN EDGE M0_L_230_W_edges) COIN EDGE M0_L_230_W_edges_waive
 M0_L_230_waive_W_edges_NoM0C = M0_L_230_waive_W_edges NOT INSIDE EDGE M0C_052
 M0_L_230_waive_W_edges_NoM0C_to_M0G = EXT [M0_L_230_waive_W_edges_NoM0C] M0G < 0.04 ABUT<90 OPPOSITE
 M0_L_230_waive_W_check = M0_L_230_waive_W_edges_NoM0C NOT TOUCH EDGE M0_L_230_waive_W_edges_NoM0C_to_M0G

 waive_a = EXT [M0_L_230_waive_W_check] M0_L_230_W_edges_InM0C >= 0.086 < 0.096 ABUT<90 OPPOSITE EXTENDED 0.05
 waive_b = EXT M0_L_230_waive_W_check [M0_L_230_W_edges_InM0C] >= 0.086 < 0.096 ABUT<90 OPPOSITE EXTENDED 0.05
 err1_TMP = EXT [AOP_M0_040_042_W_edges] < 0.096 ABUT<90 OPPOSITE EXTENDED 0.05
 err1 = err1_TMP NOT COIN EDGE (waive_a OR EDGE waive_b)
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between the long side of rectangular AOP_M0 and AOP_M0 (width = 0.04um) when PRL > -0.09um. >= 0.05um
A: 
M0_S_4a {
@ Space between the long side of rectangular AOP_M0 and AOP_M0 (width = 0.04um) when PRL > -0.09um. >= 0.05um
 err1 = EXT AOP_M0_L_edges AOP_M0_040 < 0.05 ABUT<90 OPPOSITE EXTENDED 0.09 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between the long side of rectangular AOP_M0 and AOP_M0 (width = 0.04um) when PRL > -0.096um INSIDE GT_P96 region >= 0.056um
A: 
M0_S_4b {
@ Space between the long side of rectangular AOP_M0 and AOP_M0 (width = 0.04um) when PRL > -0.096um INSIDE GT_P96 region >= 0.056um
 m0_L_sides = AOP_M0_040 COIN EDGE ALL_M0_L_edges
 m0_L_sides_chk = m0_L_sides NOT OUTSIDE EDGE GT_P96
 err1_TMP = EXT m0_L_sides m0_L_sides_chk < 0.056 ABUT<90 OPPOSITE EXTENDED 0.096 REGION
 err1 = err1_TMP NOT OUTSIDE GT_P96
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between the long side of rectangular AOP_M0 and AOP_M0 (width = 0.042um) when PRL > -0.09um. >= 0.048um
A: 
M0_S_5a {
@ Space between the long side of rectangular AOP_M0 and AOP_M0 (width = 0.042um) when PRL > -0.09um. >= 0.048um
 err1 = EXT AOP_M0_L_edges AOP_M0_042 < 0.048 ABUT<90 OPPOSITE EXTENDED 0.09 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between the long side of rectangular AOP_M0 and AOP_M0 (width = 0.042um) when PRL > -0.096um inside GT_P96 region >= 0.054um
A: 
M0_S_5b {
@ Space between the long side of rectangular AOP_M0 and AOP_M0 (width = 0.042um) when PRL > -0.096um inside GT_P96 region >= 0.054um
 m0_L_sides = AOP_M0_042 COIN EDGE ALL_M0_L_edges
 m0_L_sides_p96 = m0_L_sides NOT OUTSIDE EDGE GT_P96
 err1_TMP = EXT m0_L_sides m0_L_sides_p96 < 0.054 ABUT<90 OPPOSITE EXTENDED 0.096 REGION
 err1 = err1_TMP NOT OUTSIDE GT_P96
 err1 NOT INSIDE SealR_NOT_BULK
}

AOP_M0_040_W_edges_EX_015 = OR (EXPAND EDGE AOP_M0_040_W_edges OUTSIDE BY 0.015) AOP_M0_040
AOP_M0_042_W_edges_EX_015 = OR (EXPAND EDGE AOP_M0_042_W_edges OUTSIDE BY 0.015) AOP_M0_042

Q: Forbidden zones ((W1+S1+W1)+S2+(W1+S1+W1)) = 0.342um when W1 = 0.04um, S1 = 0.066um, S2 = 0.05um is not allowed
    1) W1 is AOP_M0 width
    2) S1 is horizontal space between two AOP_M0 (M0 line-end extend by 0.015um) with PRL > 0um
    3) S2 is space between two AOP_M0 P106 region
A: 
M0_S_6 {
@ Forbidden zones ((W1+S1+W1)+S2+(W1+S1+W1)) = 0.342um when W1 = 0.04um, S1 = 0.066um, S2 = 0.05um is not allowed
@ 1) W1 is AOP_M0 width
@ 2) S1 is horizontal space between two AOP_M0 (M0 line-end extend by 0.015um) with PRL > 0um
@ 3) S2 is space between two AOP_M0 P106 region
 m0_extend_v_edge = ANGLE AOP_M0_040_W_edges_EX_015 == 90
 m0_extend_h_s066 = EXT m0_extend_v_edge AOP_M0_040_W_edges_EX_015 == 0.066 ABUT<90 OPPOSITE REGION
 err1 = EXT (ANGLE m0_extend_h_s066 == 90) == 0.13 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

AOP_M0_040_REDUCE = AOP_M0_040 NOT INSIDE (OR GT_P96 INST)

Q: Space between AOP_M0 (width = 0.04um) and AOP_M0 in S/D direction when PRL > 0.01um, except GT_P96 and INST region = 0.05, 0.066, 0.14, 0.172, >= 0.23um
A: 
M0_S_6a {
@ Space between AOP_M0 (width = 0.04um) and AOP_M0 in S/D direction when PRL > 0.01um, except GT_P96 and INST region = 0.05, 0.066, 0.14, 0.172, >= 0.23um
 WAIVE_AREA = OR GT_P96 INST
 err1 = (EXT AOP_M0_v_edges AOP_M0_040_REDUCE < 0.050 ABUT<90 OPPOSITE REGION) ENCLOSE RECTANGLE 0.011 0.001 ORTHOGONAL ONLY
 err2 = (EXT AOP_M0_v_edges AOP_M0_040_REDUCE > 0.050 < 0.066 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED) ENCLOSE RECTANGLE 0.011 0.04 ORTHOGONAL ONLY
 err3 = (EXT AOP_M0_v_edges AOP_M0_040_REDUCE > 0.066 < 0.140 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED) ENCLOSE RECTANGLE 0.011 0.04 ORTHOGONAL ONLY
 err4 = (EXT AOP_M0_v_edges AOP_M0_040_REDUCE > 0.140 < 0.172 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED) ENCLOSE RECTANGLE 0.011 0.04 ORTHOGONAL ONLY
 err5 = (EXT AOP_M0_v_edges AOP_M0_040_REDUCE > 0.172 < 0.230 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED) ENCLOSE RECTANGLE 0.011 0.04 ORTHOGONAL ONLY

 err1 NOT INSIDE WAIVE_AREA
 err2 NOT INSIDE WAIVE_AREA
 err3 NOT INSIDE WAIVE_AREA
 err4 NOT INSIDE WAIVE_AREA
 err5 NOT INSIDE WAIVE_AREA
}

AOP_M0_040_EX_015 = AOP_M0_040 OR AOP_M0_040_W_edges_EX_015
AOP_M0_042_EX_015 = AOP_M0_042 OR AOP_M0_042_W_edges_EX_015
AOP_M0_040_EX_015_REDUCE = AOP_M0_040_EX_015 INTERACT (GT_P96 OR (EXPAND EDGE GT_P96_v_edges OUTSIDE BY 0.3))
AOP_M0_042_EX_015_REDUCE = AOP_M0_042_EX_015 INTERACT (GT_P96 OR (EXPAND EDGE GT_P96_v_edges OUTSIDE BY 0.3))
AOP_M0_040_EX_015_v_edges = ANGLE AOP_M0_040_EX_015_REDUCE == 90
AOP_M0_042_EX_015_v_edges = ANGLE AOP_M0_042_EX_015_REDUCE == 90

Q: Space between AOP_M0 (width = 0.04um, line end extend 0.015um) and AOP_M0 in S/D direction inside GT_P96, except DMCB1 region = 0.056, 0.152, >= 0.248um
A: 
M0_S_6c {
@ Space between AOP_M0 (width = 0.04um, line end extend 0.015um) and AOP_M0 in S/D direction inside GT_P96, except DMCB1 region = 0.056, 0.152, >= 0.248um
 err1 = (EXT AOP_M0_v_edges AOP_M0_040_EX_015_REDUCE < 0.056 ABUT<90 OPPOSITE REGION) AND GT_P96
 err2 = (EXT AOP_M0_v_edges AOP_M0_040_EX_015_REDUCE > 0.056 < 0.152 ABUT<90 OPPOSITE REGION) AND GT_P96
 err3 = (EXT AOP_M0_v_edges AOP_M0_040_EX_015_REDUCE > 0.152 < 0.248 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED) AND GT_P96
 err4 = (EXT AOP_M0_040_EX_015_v_edges AOP_M0_040_EX_015_REDUCE < 0.056 ABUT<90 OPPOSITE REGION) AND GT_P96
 err5 = (EXT AOP_M0_040_EX_015_v_edges AOP_M0_040_EX_015_REDUCE > 0.056 < 0.152 ABUT<90 OPPOSITE REGION) AND GT_P96
 err6 = (EXT AOP_M0_040_EX_015_v_edges AOP_M0_040_EX_015_REDUCE > 0.152 < 0.248 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED) AND GT_P96

 err1 NOT INSIDE DMCB1
 err2 NOT INSIDE DMCB1
 err3 NOT INSIDE DMCB1
 err4 NOT INSIDE DMCB1
 err5 NOT INSIDE DMCB1
 err6 NOT INSIDE DMCB1
}

Q: Space between AOP_M0 (width = 0.042um, line end extend 0.015um) and AOP_M0 in S/D direction (INSIDE GT_P96) = 0.054, 0.15, >= 0.246um
A: 
M0_S_6d {
@ Space between AOP_M0 (width = 0.042um, line end extend 0.015um) and AOP_M0 in S/D direction (INSIDE GT_P96) = 0.054, 0.15, >= 0.246um
 err1 = (EXT AOP_M0_v_edges AOP_M0_042_EX_015_REDUCE < 0.054 ABUT<90 OPPOSITE REGION) AND GT_P96
 err2 = (EXT AOP_M0_v_edges AOP_M0_042_EX_015_REDUCE > 0.054 < 0.150 ABUT<90 OPPOSITE REGION) AND GT_P96
 err3 = (EXT AOP_M0_v_edges AOP_M0_042_EX_015_REDUCE > 0.150 < 0.246 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED) AND GT_P96
 err4 = (EXT AOP_M0_042_EX_015_v_edges AOP_M0_042_EX_015_REDUCE < 0.054 ABUT<90 OPPOSITE REGION) AND GT_P96
 err5 = (EXT AOP_M0_042_EX_015_v_edges AOP_M0_042_EX_015_REDUCE > 0.054 < 0.150 ABUT<90 OPPOSITE REGION) AND GT_P96
 err6 = (EXT AOP_M0_042_EX_015_v_edges AOP_M0_042_EX_015_REDUCE > 0.150 < 0.246 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED) AND GT_P96

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
 err6 NOT INSIDE SealR_NOT_BULK
}

ALL_M0_NOT_M0C = ALL_M0 NOT M0C
ALL_M0_NOT_M0C_h_edges = ANGLE ALL_M0_NOT_M0C == 0
ALL_M0_NOT_M0C_v_edges = ANGLE ALL_M0_NOT_M0C == 90
ALL_M0_NOT_M0C_WL_edges_a = DFM PROPERTY ALL_M0_NOT_M0C ALL_M0_NOT_M0C_h_edges ALL_M0_NOT_M0C_v_edges OVERLAP ABUT ALSO MULTI [h_v_ratio = LENGTH(ALL_M0_NOT_M0C_h_edges) - LENGTH(ALL_M0_NOT_M0C_v_edges)] >= 0
ALL_M0_NOT_M0C_WL_edges_b = DFM PROPERTY ALL_M0_NOT_M0C ALL_M0_NOT_M0C_h_edges ALL_M0_NOT_M0C_v_edges OVERLAP ABUT ALSO MULTI [h_v_ratio = LENGTH(ALL_M0_NOT_M0C_v_edges) - LENGTH(ALL_M0_NOT_M0C_h_edges)] >= 0
ALL_M0_NOT_M0C_W_edges = (ALL_M0_NOT_M0C_v_edges COIN EDGE ALL_M0_NOT_M0C_WL_edges_a) OR EDGE (ALL_M0_NOT_M0C_h_edges COIN EDGE ALL_M0_NOT_M0C_WL_edges_b)
ALL_M0_NOT_M0C_L_edges = (ALL_M0_NOT_M0C_h_edges COIN EDGE ALL_M0_NOT_M0C_WL_edges_a) OR EDGE (ALL_M0_NOT_M0C_v_edges COIN EDGE ALL_M0_NOT_M0C_WL_edges_b)

Q: Space between (ALL_M0 NOT M0C) line-end and AOP_AA when PRL > -0.025um, except INST region >= 0.037um
A: 
M0_S_7 {
@ Space between (ALL_M0 NOT M0C) line-end and AOP_AA when PRL > -0.025um, except INST region >= 0.037um
 err1 = EXT ALL_M0_NOT_M0C_W_edges AOP_AA < 0.037 ABUT<90 OPPOSITE EXTENDED 0.025 REGION
 err1 NOT INSIDE INST
}

Q: Space between AOP_M0 (width = 0.04/0.042um) and AOP_GT (Overlap is not allowed) >= 0.015um
A: 
M0_S_8 {
@ Space between AOP_M0 (width = 0.04/0.042um) and AOP_GT (Overlap is not allowed) >= 0.015um
 err1 = EXT AOP_M0_040_042 AOP_GT < 0.015 ABUT<90 SINGULAR REGION INSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0 (width = 0.04um) and AOP_GT (width = 0.016/0.032um) >= 0.017um
A: 
M0_S_8a {
@ Space between AOP_M0 (width = 0.04um) and AOP_GT (width = 0.016/0.032um) >= 0.017um
 err1 = EXT AOP_M0_040 (OR AOP_GT_016 AOP_GT_032) < 0.017 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0 (width = 0.04um) and AOP_GT (width = 0.018um) >= 0.016um
A: 
M0_S_8b {
@ Space between AOP_M0 (width = 0.04um) and AOP_GT (width = 0.018um) >= 0.016um
 err1 = EXT AOP_M0_040 AOP_GT_018 < 0.016 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: pace between AOP_M0 (width = 0.04um) and AOP_GT (width = 0.02um) >= 0.015um
A: 
M0_S_8c {
@ Space between AOP_M0 (width = 0.04um) and AOP_GT (width = 0.02um) >= 0.015um
 err1 = EXT AOP_M0_040 AOP_GT_020 < 0.015 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0 (width = 0.04um) and AOP_GT (width = 0.032um) >= 0.017um
A: 
M0_S_7d {
@ Space between AOP_M0 (width = 0.04um) and AOP_GT (width = 0.032um) >= 0.017um
 err1 = EXT AOP_M0_040 AOP_GT_032 < 0.017 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0 (width = 0.042um) and AOP_GT (width = 0.016/0.032um) >= 0.016um
A: 
M0_S_7e {
@ Space between AOP_M0 (width = 0.042um) and AOP_GT (width = 0.016/0.032um) >= 0.016um
 err1 = EXT AOP_M0_042 (OR AOP_GT_016 AOP_GT_032) < 0.016 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0 (width = 0.042um) and AOP_GT (width = 0.018um) >= 0.015um
A: 
M0_S_7f {
@ Space between AOP_M0 (width = 0.042um) and AOP_GT (width = 0.018um) >= 0.015um
 err1 = EXT AOP_M0_042 AOP_GT_018 < 0.015 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}


AOP_M0_W040_inside_GT_P96 = AOP_M0_040 INSIDE GT_P96
AOP_M0_W042_inside_GT_P96 = AOP_M0_042 INSIDE GT_P96
AOP_M0_W040_042_inside_GT_P96 = AOP_M0_040_042 INSIDE GT_P96

Q: Space between AOP_M0 (width = 0.04/0.042um, INSIDE GT_P96) and AOP_GT (Overlap is not allowed), except DMCB1 region >= 0.016um
A: 
M0_S_9 {
@ Space between AOP_M0 (width = 0.04/0.042um, INSIDE GT_P96) and AOP_GT (Overlap is not allowed), except DMCB1 region >= 0.016um
 err1 = EXT AOP_M0_W040_042_inside_GT_P96 AOP_GT < 0.016 ABUT<90 SINGULAR REGION INSIDE ALSO
 err1 NOT INSIDE DMCB1
}

Q: Space between AOP_M0 (width = 0.04um, INSIDE GT_P96) and AOP_GT (width = 0.016um) >= 0.02um
A: 
M0_S_9a {
@ Space between AOP_M0 (width = 0.04um, INSIDE GT_P96) and AOP_GT (width = 0.016um) >= 0.02um
 err1 = EXT AOP_M0_W040_inside_GT_P96 AOP_GT_016 < 0.020 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0 (width = 0.04um, INSIDE GT_P96) and AOP_GT (width = 0.018um) >= 0.019um
A: 
M0_S_9b {
@ Space between AOP_M0 (width = 0.04um, INSIDE GT_P96) and AOP_GT (width = 0.018um) >= 0.019um
 err1 = EXT AOP_M0_W040_inside_GT_P96 AOP_GT_018 < 0.019 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0 (width = 0.04um, INSIDE GT_P96) and AOP_GT (width = 0.02um) >= 0.018um
A: 
M0_S_9c {
@ Space between AOP_M0 (width = 0.04um, INSIDE GT_P96) and AOP_GT (width = 0.02um) >= 0.018um
 err1 = EXT AOP_M0_W040_inside_GT_P96 AOP_GT_020 < 0.018 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0 (width = 0.04um, INSIDE GT_P96) and AOP_GT (width = 0.022um) >= 0.017um
A: 
M0_S_9d {
@ Space between AOP_M0 (width = 0.04um, INSIDE GT_P96) and AOP_GT (width = 0.022um) >= 0.017um
 err1 = EXT AOP_M0_W040_inside_GT_P96 AOP_GT_022 < 0.017 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0 (width = 0.04um, INSIDE GT_P96) and AOP_GT (width = 0.024um) >= 0.016um
A: 
M0_S_9e {
@ Space between AOP_M0 (width = 0.04um, INSIDE GT_P96) and AOP_GT (width = 0.024um) >= 0.016um
 err1 = EXT AOP_M0_W040_inside_GT_P96 AOP_GT_024 < 0.016 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0 (width = 0.042um, INSIDE GT_P96) and AOP_GT (width = 0.016um) >= 0.019um
A: 
M0_S_9f {
@ Space between AOP_M0 (width = 0.042um, INSIDE GT_P96) and AOP_GT (width = 0.016um) >= 0.019um
 err1 = EXT AOP_M0_W042_inside_GT_P96 AOP_GT_016 < 0.019 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0 (width = 0.042um, INSIDE GT_P96) and AOP_GT (width = 0.018um) >= 0.018um
A: 
M0_S_9g {
@ Space between AOP_M0 (width = 0.042um, INSIDE GT_P96) and AOP_GT (width = 0.018um) >= 0.018um
 err1 = EXT AOP_M0_W042_inside_GT_P96 AOP_GT_018 < 0.018 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0 (width = 0.042um, INSIDE GT_P96) and AOP_GT (width = 0.02um) >= 0.017um
A: 
M0_S_9h {
@ Space between AOP_M0 (width = 0.042um, INSIDE GT_P96) and AOP_GT (width = 0.02um) >= 0.017um
 err1 = EXT AOP_M0_W042_inside_GT_P96 AOP_GT_020 < 0.017 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0 (width = 0.042um, INSIDE GT_P96) and AOP_GT (width = 0.022um) >= 0.016um
A: 
M0_S_9i {
@ Space between AOP_M0 (width = 0.042um, INSIDE GT_P96) and AOP_GT (width = 0.022um) >= 0.016um
 err1 = EXT AOP_M0_W042_inside_GT_P96 AOP_GT_022 < 0.016 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0 and AOP_GT (width >= 0.07um) >= 0.032um
A: 
M0_S_10 {
@ Space between AOP_M0 and AOP_GT (width >= 0.07um) >= 0.032um
 err1 = EXT AOP_M0 AOP_GT_eqgt_070 < 0.032 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0 (width = 0.054um) and AOP_GT (Overlap is not allowed) >= 0.032um
A: 
M0_S_10a {
@ Space between AOP_M0 (width = 0.054um) and AOP_GT (Overlap is not allowed) >= 0.032um
 err1 = EXT AOP_M0_054 AOP_GT < 0.032 ABUT<90 SINGULAR REGION INSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between (AOP_M0 NOT AOP_M0C) and AOP_GT line-end, except small AOP_GT jog <= 0.004um and DMCMK1 region >= 0.046um
A: 
M0_S_10b {
@ Space between (AOP_M0 NOT AOP_M0C) and AOP_GT line-end, except small AOP_GT jog <= 0.004um and DMCMK1 region >= 0.046um
 AOP_GT_lend_m0_S_10 = ANGLE (CONVEX EDGE AOP_GT >= 1) == 0
 err1_TMP = EXT AOP_M0_NOT_AOP_M0C [AOP_GT_lend_m0_S_10] < 0.046 ABUT<90
 err1 = err1_TMP NOT COIN EDGE AOP_GT_jog_lteq_004
 err1 NOT INSIDE EDGE DMCMK1
}

m0_s_11_m0 = M0_040 OUTSIDE GT_P96
m0_s_11_Y1 = EXT m0_s_11_m0 [AOP_GT_016_v_edges] < 0.031 ABUT<90 OPPOSITE
m0_s_11_Y2 = EXT m0_s_11_m0 [AOP_GT_018_v_edges] < 0.029 ABUT<90 OPPOSITE
m0_s_11_Y3 = EXT m0_s_11_m0 [AOP_GT_020_v_edges] < 0.027 ABUT<90 OPPOSITE
m0_s_11_err1 = EXT (m0_s_11_Y1) AOP_GT < 0.08 ABUT<90 OPPOSITE
m0_s_11_err2 = EXT (m0_s_11_Y2) AOP_GT < 0.08 ABUT<90 OPPOSITE
m0_s_11_err3 = EXT (m0_s_11_Y3) AOP_GT < 0.08 ABUT<90 OPPOSITE

Q: Space between M0 (width = 0.04um, OUTSIDE GT_P96) and AOP_GT (one side poly space >= 0.08um, width = 0.016/0.018/0.02um respectively) >= 0.031, 0.029, 0.027um
A: 
M0_S_11 {
@ Space between M0 (width = 0.04um, OUTSIDE GT_P96) and AOP_GT (one side poly space >= 0.08um, width = 0.016/0.018/0.02um respectively) >= 0.031, 0.029, 0.027um
 err1 = COPY m0_s_11_err1
 err2 = COPY m0_s_11_err2
 err3 = COPY m0_s_11_err3
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
 err3 NOT INSIDE EDGE SealR_NOT_BULK
}

m0_s_11a_m0 = M0_040_042 NOT OUTSIDE GT_P96
m0_s_11a_Y1 = EXT m0_s_11a_m0 [AOP_GT_016_v_edges] < 0.034 ABUT<90 OPPOSITE
m0_s_11a_Y2 = EXT m0_s_11a_m0 [AOP_GT_018_v_edges] < 0.032 ABUT<90 OPPOSITE
m0_s_11a_Y3 = EXT m0_s_11a_m0 [AOP_GT_020_v_edges] < 0.030 ABUT<90 OPPOSITE
m0_s_11a_Y4 = EXT m0_s_11a_m0 [AOP_GT_022_v_edges] < 0.028 ABUT<90 OPPOSITE
m0_s_11a_Y5 = EXT m0_s_11a_m0 [AOP_GT_024_v_edges] < 0.026 ABUT<90 OPPOSITE
m0_s_11a_err1 = EXT (m0_s_11a_Y1) AOP_GT <= 0.08 ABUT<90 OPPOSITE
m0_s_11a_err2 = EXT (m0_s_11a_Y2) AOP_GT <= 0.08 ABUT<90 OPPOSITE
m0_s_11a_err3 = EXT (m0_s_11a_Y3) AOP_GT <= 0.08 ABUT<90 OPPOSITE
m0_s_11a_err4 = EXT (m0_s_11a_Y4) AOP_GT <= 0.08 ABUT<90 OPPOSITE
m0_s_11a_err5 = EXT (m0_s_11a_Y5) AOP_GT <= 0.08 ABUT<90 OPPOSITE

Q: Space between M0 (width = 0.04/0.042um, INSIDE GT_P96) and AOP_GT (one side poly space > 0.080um, width = 0.016/0.018/0.02/0.022/0.024um, respectively >= 0.034, 0.032, 0.030, 0.028, 0.026um
A: 
M0_S_11a {
@ Space between M0 (width = 0.04/0.042um, INSIDE GT_P96) and AOP_GT (one side poly space > 0.080um, width = 0.016/0.018/0.02/0.022/0.024um, respectively >= 0.034, 0.032, 0.030, 0.028, 0.026um
 err1 = COPY m0_s_11a_err1
 err2 = COPY m0_s_11a_err2
 err3 = COPY m0_s_11a_err3
 err4 = COPY m0_s_11a_err4
 err5 = COPY m0_s_11a_err5
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
 err3 NOT INSIDE EDGE SealR_NOT_BULK
 err4 NOT INSIDE EDGE SealR_NOT_BULK
 err5 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between M0 (width = 0.054um) and AOP_GT (one side poly space >= 0.118um, width = 0.016/0.018/0.02um respectively) >= 0.05, 0.048, 0.046um
A: 
M0_S_12 {
@ Space between M0 (width = 0.054um) and AOP_GT (one side poly space >= 0.118um, width = 0.016/0.018/0.02um respectively) >= 0.05, 0.048, 0.046um
 bad_016_sps = EXT M0_054 [AOP_GT_016_v_edges] < 0.050 ABUT<90 OPPOSITE
 bad_018_sps = EXT M0_054 [AOP_GT_018_v_edges] < 0.048 ABUT<90 OPPOSITE
 bad_020_sps = EXT M0_054 [AOP_GT_020_v_edges] < 0.046 ABUT<90 OPPOSITE

 err1 = EXT (bad_016_sps) AOP_GT < 0.118 ABUT<90 OPPOSITE
 err2 = EXT (bad_018_sps) AOP_GT < 0.118 ABUT<90 OPPOSITE
 err3 = EXT (bad_020_sps) AOP_GT < 0.118 ABUT<90 OPPOSITE
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
 err3 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between FIELD (AOP_GT NOT P2) and AOP_M0 (FIELD (AOP_GT NOT P2) width < 0.096um, one side space to ((GT (INSIDE DG) SIZING 0.041um) AND GT) = 0.118~0.119um, the other side space to (AOP_GT NOT P2) >= 0.15um) >= 0.054um
A: 
M0_S_13 {
@ Space between FIELD (AOP_GT NOT P2) and AOP_M0 (FIELD (AOP_GT NOT P2) width < 0.096um, one side space to ((GT (INSIDE DG) SIZING 0.041um) AND GT) = 0.118~0.119um, the other side space to (AOP_GT NOT P2) >= 0.15um) >= 0.054um
 GT_size_041_IO = (SIZE (GT_0 AND DG) BY 0.041) AND GT
 GT_sps_eg_150 = EXT (AOP_GT_NOT_P2_lt_096) AOP_GT_NOT_P2 < 0.15 ABUT<90 OPPOSITE
 GT_sps_eq_118_OPP = EXT [AOP_GT_NOT_P2_lt_096] GT_size_041_IO >= 0.118 <= 0.119 ABUT<90 OPPOSITE
 GT_sps_eg_150_EDG = INT GT_sps_eq_118_OPP [GT_sps_eg_150] < 0.096 OPPOSITE
 err1 = EXT GT_sps_eg_150_EDG AOP_M0 < 0.054 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}


//M0C

Q: Space between AOP_M0C, except RSPMK1, INST, M0C (width = 0.051um) to M0C (width = 0.052um) space = 0.043um (in GATE poly direction, PRL=0um)) (overlap is not allowed) >= 0.044um
A: 
M0C_S_1 {
@ Space between AOP_M0C, except RSPMK1, INST, M0C (width = 0.051um) to M0C (width = 0.052um) space = 0.043um (in GATE poly direction, PRL=0um)) (overlap is not allowed) >= 0.044um
 err1 = (EXT AOP_M0C < 0.044 ABUT<90 SINGULAR REGION) NOT INTERACT (EXT M0C_051 M0C_052 == 0.043 OPPOSITE EXTENDED 0.001 PROJ == 0 REGION)
 err2 = M0C AND DOP_M0C
 err3 = M0CDMP AND M0CDOP

 err1 NOT INSIDE (OR RSPMK1 INST)
 err2 NOT INSIDE INST
 err3 NOT INSIDE INST
}

Q: Space between AOP_M0C in GATE poly direction when PRL > 0um, except M0C space = 0.014um in RSPMK1 region >= 0.054um
A: 
M0C_S_2 {
@ Space between AOP_M0C in GATE poly direction when PRL > 0um, except M0C space = 0.014um in RSPMK1 region >= 0.054um
 waive_typeA = (EXT M0C == 0.014 OPPOSITE REGION) INSIDE RSPMK1
 err1 = EXT AOP_M0C_h_edges AOP_M0C < 0.054 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE waive_typeA
}

Q: Space between M0C and AOP_M0C (width = 0.048, 0.082, 0.108um) in GATE poly direction when PRL > 0um. >= 0.073um
A: 
M0C_S_3 {
@ Space between M0C and AOP_M0C (width = 0.048, 0.082, 0.108um) in GATE poly direction when PRL > 0um. >= 0.073um
 err1 = EXT M0C_h_edges ((AOP_M0C_048 OR AOP_M0C_082) OR AOP_M0C_108) < 0.073 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0C in S/D direction >= 0.09um
A: 
M0C_S_4 {
@ Space between AOP_M0C in S/D direction >= 0.09um
 err1 = EXT AOP_M0C_v_edges AOP_M0C < 0.09 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0C and (M0C OR M0CDMP) (width = 0.048um) in S/D direction, except INST region >= 0.18um
A: 
M0C_S_5 {
@ Space between M0C and (M0C OR M0CDMP) (width = 0.048um) in S/D direction, except INST region >= 0.18um
 err1 = EXT M0C_v_edges (DMP_M0C AND AOP_M0C_048) < 0.18 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE INST
}

Q: Space between M0C and (M0C OR M0CDMP) (width = 0.051um) in S/D direction, except GT_P96 region = 0.09, 0.18, >= 0.27um
A: 
M0C_S_6 {
@ Space between M0C and (M0C OR M0CDMP) (width = 0.051um) in S/D direction, except GT_P96 region = 0.09, 0.18, >= 0.27um
 err1 = EXT M0C_v_edges (AOP_M0C_051 AND DMP_M0C) < 0.090 ABUT<90 OPPOSITE REGION
 err2 = EXT M0C_v_edges (AOP_M0C_051 AND DMP_M0C) > 0.090 < 0.180 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err3 = EXT M0C_v_edges (AOP_M0C_051 AND DMP_M0C) > 0.180 < 0.270 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err1 NOT INSIDE GT_P96
 err2 NOT INSIDE GT_P96
 err3 NOT INSIDE GT_P96
}

Q: Space between M0C and (M0C OR M0CDMP) (width = 0.051um) in S/D direction, INSIDE GT_P96 region = 0.096, 0.192, >= 0.288um
A: 
M0C_S_6a {
@ Space between M0C and (M0C OR M0CDMP) (width = 0.051um) in S/D direction, INSIDE GT_P96 region = 0.096, 0.192, >= 0.288um
 err1 = (EXT M0C_v_edges (AOP_M0C_051 AND DMP_M0C) < 0.096 ABUT<90 OPPOSITE REGION) NOT OUTSIDE GT_P96
 err2 = (EXT M0C_v_edges (AOP_M0C_051 AND DMP_M0C) > 0.096 < 0.192 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED) NOT OUTSIDE GT_P96
 err3 = (EXT M0C_v_edges (AOP_M0C_051 AND DMP_M0C) > 0.192 < 0.288 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED) NOT OUTSIDE GT_P96
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DOP_M0C (width = 0.36um) in S/D direction when PRL > -0.36um. >= 0.18um
A: 
M0C_S_6b {
@ Space between DOP_M0C (width = 0.36um) in S/D direction when PRL > -0.36um. >= 0.18um
 err1 = EXT DOP_M0C_360_v_edges DOP_M0C_360 < 0.180 ABUT<90 OPPOSITE EXTENDED 0.36 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DOP_M0C (width = 0.36um) in GATE poly direction when PRL > -0.18um. >= 0.36um
A: 
M0C_S_6c {
@ Space between DOP_M0C (width = 0.36um) in GATE poly direction when PRL > -0.18um. >= 0.36um
 err1 = EXT DOP_M0C_360_h_edges DOP_M0C_360 < 0.360 ABUT<90 OPPOSITE EXTENDED 0.18 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DOP_M0C (width = 0.36um) and AOP_M0C (width = 0.052/0.082um) or M0CDUM >= 0.74um
A: 
M0C_S_6d {
@ Space between DOP_M0C (width = 0.36um) and AOP_M0C (width = 0.052/0.082um) or M0CDUM >= 0.74um
 err1 = EXT (OR AOP_M0C_082 AOP_M0C_052) DOP_M0C_360 < 0.74 ABUT<90 SINGULAR REGION
 err2 = EXT M0CDUM DOP_M0C_360 < 0.74 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0C and ALL_M0 >= 0.012um
A: 
M0C_S_7 {
@ Space between AOP_M0C and ALL_M0 >= 0.012um
 err1 = EXT AOP_M0C ALL_M0 < 0.012 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0C and ALL_M0 in S/D direction >= 0.025um
A: 
M0C_S_8 {
@ Space between AOP_M0C and ALL_M0 in S/D direction >= 0.025um
 err1 = EXT ALL_M0 AOP_M0C_v_edges < 0.025 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0C and AOP_M0 in S/D direction INSIDE GT_P96 region, except DMCB1 region >= 0.028um
A: 
M0C_S_8a {
@ Space between AOP_M0C and AOP_M0 in S/D direction INSIDE GT_P96 region, except DMCB1 region >= 0.028um
 err1 = (EXT AOP_M0C_v_edges AOP_M0 < 0.028 ABUT<90 OPPOSITE REGION) NOT OUTSIDE GT_P96
 err1 NOT INSIDE DMCB1
}
Q: Space between AOP_M0C (width = 0.082/0.108um) and ALL_M0 (width = 0.054um) in S/D direction >= 0.067um
A: 
M0C_S_9 {
@ Space between AOP_M0C (width = 0.082/0.108um) and ALL_M0 (width = 0.054um) in S/D direction >= 0.067um
 chk_M0C = ANGLE (AOP_M0C_082 OR AOP_M0C_108) == 90
 err1 = EXT chk_M0C ALL_M0_054 < 0.067 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DOP_M0C (width = 0.36um) and ALL_M0 (overlap is not allowed) >= 0.148um
A: 
M0C_S_10 {
@ Space between DOP_M0C (width = 0.36um) and ALL_M0 (overlap is not allowed) >= 0.148um
 err1 = EXT DOP_M0C_360 ALL_M0 < 0.148 ABUT<90 SINGULAR REGION INSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DOP_M0C (width = 0.36um) and ALL_M0G (overlap is not allowed) >= 0.148um
A: 
M0C_S_11 {
@ Space between DOP_M0C (width = 0.36um) and ALL_M0G (overlap is not allowed) >= 0.148um
 err1 = EXT DOP_M0C_360 ALL_M0G < 0.148 ABUT<90 SINGULAR REGION INSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0C concave corner and (M0 AND AA), except M0C jog <= 0.002um. >= 0.054um
A: 
M0C_S_12 {
@ Space between M0C concave corner and (M0 AND AA), except M0C jog <= 0.002um. >= 0.054um
 M0C_rvs = DRC:1 NOT M0C
 ERR_TMP = ENC M0_AND_AA [M0C_rvs] < 0.054 ABUT<90 EXCLUDE SHIELDED
 ERR_EDG = ERR_TMP NOT COIN EDGE (LENGTH M0C_rvs <= 0.002)
 err1 = INT ERR_EDG < 0.001 ABUT==90 INTERSECTING ONLY REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//M0G

Q: Space between AOP_M0G (except width = 0.05um) to AOP_M0G >= 0.058um
A: 
M0G_S_1 {
@ Space between AOP_M0G (except width = 0.05um) to AOP_M0G >= 0.058um
 err1 = EXT (AOP_M0G NOT AOP_M0G_050) AOP_M0G < 0.058 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0Gs (width = 0.04um) >= 0.058um
A: 
M0G_S_1a {
@ Space between AOP_M0Gs (width = 0.04um) >= 0.058um
 err1 = EXT AOP_M0G_040 < 0.058 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0G (width = 0.04um) and AOP_M0G (with = 0.04um) when PRL >= -0.019um, except INST region >= 0.065um
A: 
M0G_S_1b {
@ Space between AOP_M0G (width = 0.04um) and AOP_M0G (with = 0.04um) when PRL >= -0.019um, except INST region >= 0.065um
 err1 = EXT AOP_M0G_040 < 0.065 ABUT<90 OPPOSITE EXTENDED 0.019+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE INST
}

AOP_M0G_040_L_sides = INT [AOP_M0G_040] == 0.04 ABUT<90 OPPOSITE
AOP_M0G_040_W_sides = AOP_M0G_040 NOT TOUCH EDGE AOP_M0G_040_L_sides
M0G_040_L_sides = INT [M0G_040] == 0.04 ABUT<90 OPPOSITE
M0G_040_W_sides = M0G_040 NOT TOUCH EDGE M0G_040_L_sides

Q: Space between the short side of AOP_M0G (width = 0.04um) when PRL >= -0.019um. >= 0.076um
A: 
M0G_S_1c {
@ Space between the short side of AOP_M0G (width = 0.04um) when PRL >= -0.019um. >= 0.076um
 err1 = EXT AOP_M0G_040_W_sides < 0.076 ABUT<90 OPPOSITE EXTENDED 0.019+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between the short side of M0G (width = 0.04um, and length = 0.121~0.161um or 0.223~0.249um, and PRL >= -0.02um) >= 0.082um
     Except:
     Space between the short side of M0G (width = 0.04um, and length = 0.121~0.161um or 0.223~0.249um, and PRL >= -0.02um) and (M0 NOT M0C) >= 0.03um
A: 
M0G_S_1d {
@ Space between the short side of M0G (width = 0.04um, and length = 0.121~0.161um or 0.223~0.249um, and PRL >= -0.02um) >= 0.082um
@ Except:
@ Space between the short side of M0G (width = 0.04um, and length = 0.121~0.161um or 0.223~0.249um, and PRL >= -0.02um) and (M0 NOT M0C) >= 0.03um
 good_M0G_L1 = LENGTH M0G_040_L_sides >= 0.121 <= 0.161
 good_M0G_L2 = LENGTH M0G_040_L_sides >= 0.223 <= 0.249
 good_M0G_W = M0G_040 WITH EDGE (good_M0G_L1 OR EDGE good_M0G_L2)
 chk_M0G_W = EXT [good_M0G_W] M0_NOT_M0C < 0.03 ABUT<90 OPPOSITE EXTENDED 0.02+GLOBAL_TOLERANCE
 err1 = EXT (good_M0G_W TOUCH EDGE chk_M0G_W) good_M0G_W < 0.082 ABUT<90 OPPOSITE EXTENDED 0.02+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0G (width = 0.04um and length >= 0.12um) long side and AOP_M0G (width = 0.04um) when PRL >= -0.019um. >= 0.084um
A: 
M0G_S_1e {
@ Space between AOP_M0G (width = 0.04um and length >= 0.12um) long side and AOP_M0G (width = 0.04um) when PRL >= -0.019um. >= 0.084um
 chk_M0G_L = LENGTH AOP_M0G_040_L_sides >= 0.12
 err1 = EXT chk_M0G_L AOP_M0G_040 < 0.084 ABUT<90 OPPOSITE EXTENDED 0.019+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0G (width = 0.04um) and AOP_M0G (width = 0.05um), except M0G.S.1g >= 0.064um
A: 
M0G_S_1f {
@ Space between AOP_M0G (width = 0.04um) and AOP_M0G (width = 0.05um), except M0G.S.1g >= 0.064um
 err1 = EXT (AOP_M0G_040 NOT M0G) AOP_M0G_050 < 0.064 ABUT<90 SINGULAR REGION
 err2 = EXT (AOP_M0G_050 NOT M0G) AOP_M0G_040 < 0.064 ABUT<90 SINGULAR REGION
 err3 = EXT M0G_040 M0G_050 < 0.064 ABUT<90 SINGULAR REGION PROJ>=0
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0G (width = 0.04um) to M0G (width = 0.05um) when PRL < 0um. >= 0.058um
A: 
M0G_S_1g {
@ Space between M0G (width = 0.04um) to M0G (width = 0.05um) when PRL < 0um. >= 0.058um
 err1 = EXT M0G_040 M0G_050 < 0.058 ABUT<90 SINGULAR REGION NOT PROJ
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between the short side of M0G (width = 0.04um) and AOP_M0G (with = 0.05um) when PRL >= -0.016um. >= 0.068um
A: 
M0G_S_1h {
@ Space between the short side of M0G (width = 0.04um) and AOP_M0G (with = 0.05um) when PRL >= -0.016um. >= 0.068um
 err1 = EXT M0G_040_W_sides AOP_M0G_050 < 0.068 ABUT<90 OPPOSITE EXTENDED 0.016+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0G (width = 0.05, length = 0.057~0.058um) and AOP_M0G when PRL >= -0.074um. >= 0.073um
A: 
M0G_S_2 {
@ Space between M0G (width = 0.05, length = 0.057~0.058um) and AOP_M0G when PRL >= -0.074um. >= 0.073um
 err1 = EXT (OR M0G_W050_L057 M0G_W050_L058) AOP_M0G < 0.073 ABUT<90 OPPOSITE EXTENDED 0.074+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between the center of AOP_M0G (width = 0.05um) and center of AOP_M0G (width = 0.05um) (Except M0G group in M0G.S.3c) >= 0.105um
A: 
M0G_S_3a {
@ Space between the center of AOP_M0G (width = 0.05um) and center of AOP_M0G (width = 0.05um) (Except M0G group in M0G.S.3c) >= 0.105um
 chk_center = EXTENTS (AOP_M0G_050 NOT m0g_group) CENTERS 0.0002
 err1 = EXT chk_center < 0.105-0.0002 ABUT<90 PROJ>=0 REGION
 err2 = EXT chk_center < 0.105-0.0003 ABUT<90 CORNER TO CORNER REGION
 err3_special = (EXT m0g_050_center < 0.105-0.0002 ABUT<90 PROJ>=0 REGION) INTERACT m0g_group_TMP > 1  //;space between M0G in two diff M0G group
 err3 = ((EXT m0g_050_center < 0.105-0.0003 ABUT<90 CORNER TO CORNER REGION) INTERACT m0g_group_TMP > 1) OR err3_special  //;space between M0G in two diff M0G group
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between the center of M0G (width = 0.05um) and any one center of 3-neighboring M0G (width = 0.05um, center to center space <= 0.119um) >= 0.119um
A: 
M0G_S_3b {
@ Space between the center of M0G (width = 0.05um) and any one center of 3-neighboring M0G (width = 0.05um, center to center space <= 0.119um) >= 0.119um
 err1 = WITH NEIGHBOR m0g_050_center >= 3 SPACE < 0.119-0.0002
 err1 NOT INSIDE SealR_NOT_BULK
}

//;Definition of M0G group
m0g_050_center = EXTENTS M0G_050 CENTERS 0.0002
m0g_050_center_edge = EXT [m0g_050_center] >= 0.098-0.0002 <= 0.104-0.0002 ABUT<90
m0g_group_STEP_1 = M0G_050 ENCLOSE (EXPAND EDGE m0g_050_center_edge OUTSIDE BY 0.005)
m0g_group_STEP_2 = ANGLE m0g_group_STEP_1 == 90
m0g_group_STEP_3 = EXT [m0g_group_STEP_2] > 0.001 <= 0.104-0.05 ABUT<90 OPPOSITE
m0g_group_STEP_4 = DFM PROPERTY m0g_group_STEP_3 m0g_group_STEP_1 OVERLAP ABUT ALSO MULTI [-= LENGTH(m0g_group_STEP_3)] == 0.05
m0g_group_STEP_5 = EXT m0g_group_STEP_4 > 0.001 <= 0.104-0.05 OPPOSITE REGION
m0g_group_TMP = (m0g_group_STEP_1 OR m0g_group_STEP_5) INTERACT m0g_group_STEP_1 > 1 <= 5
m0g_group = m0g_group_STEP_1 INTERACT m0g_group_TMP

m0g_group_v_edges = ANGLE m0g_group == 90
m0g_group_h_edges = ANGLE m0g_group == 0

Q: Space between M0G group and AOP_M0G >= 0.079um
    Definition of M0G group:
    1) M0G width = 0.05um, and
    2) M0G with PRL = 0.05um in vertical direction
    3) 0.098um <= Center to center space <= 0.104um
    4) The maximum M0G number in one group is 5
A: 
M0G_S_3c {
@ Space between M0G group and AOP_M0G >= 0.079um
@ Definition of M0G group:
@ 1) M0G width = 0.05um, and
@ 2) M0G with PRL = 0.05um in vertical direction
@ 3) 0.098um <= Center to center space <= 0.104um
@ 4) The maximum M0G number in one group is 5
//;Only check the opposite spacing PRL>=0
 chk_M0G = LENGTH m0g_group_TMP > 0  //; == 0.05
 err1 = EXT chk_M0G (M0G NOT INTERACT m0g_group_TMP) < 0.079 ABUT<90 OPPOSITE EXTENDED 0.0002 REGION
 err2 = EXT chk_M0G DOP_M0G < 0.079 ABUT<90 OPPOSITE EXTENDED 0.0002 REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0G group and AOP_M0G (width = 0.04um) in horizontal direction when PRL >= -0.079um. >= 0.114um
    Definition of M0G group follows M0G.S.3c
A: 
M0G_S_3d {
@ Space between M0G group and AOP_M0G (width = 0.04um) in horizontal direction when PRL >= -0.079um. >= 0.114um
@ Definition of M0G group follows M0G.S.3c
 err1 = EXT m0g_group_v_edges AOP_M0G_040 < 0.114 ABUT<90 OPPOSITE EXTENDED 0.079+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0G group and AOP_M0G (width = 0.04/0.05um) in vertical direction when PRL >= -0.079um. >= 0.103um
    Definition of M0G group follows M0G.S.3c
A: 
M0G_S_3e {
@ Space between M0G group and AOP_M0G (width = 0.04/0.05um) in vertical direction when PRL >= -0.079um. >= 0.103um
@ Definition of M0G group follows M0G.S.3c
 err1 = EXT m0g_group_h_edges AOP_M0G_040 < 0.103 ABUT<90 OPPOSITE EXTENDED 0.079+GLOBAL_TOLERANCE REGION
 err2 = (EXT m0g_group_h_edges AOP_M0G_050 < 0.103 ABUT<90 OPPOSITE EXTENDED 0.079+GLOBAL_TOLERANCE REGION) NOT INSIDE m0g_group_TMP
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

M0G_060_L_v_edges = ANGLE M0G_060_L_edges == 90
M0G_060_L_h_edges = ANGLE M0G_060_L_edges == 0

Q: Space between M0G (width = 0.06um) and M0G, except OCOVL region >= 0.129um
    (Except M0G_S_4b, and the space between M0G (width = 0.06um) long side and M0G when PRL >= -0.08um < 0um)
A: 
M0G_S_4a {
@ Space between M0G (width = 0.06um) and M0G, except OCOVL region >= 0.129um
@ (Except M0G_S_4b, and the space between M0G (width = 0.06um) long side and M0G when PRL >= -0.08um < 0um)
//; Exclude space between M0G (width = 0.06um) long side and M0G when PRL >= -0.080um < 0um
 y1 = EXT M0G_060 M0G >= 0.102 < 0.129 ABUT<90 CORNER TO CORNER
 y2 = DFM PROPERTY y1 M0G_060_L_v_edges M0G_060_L_h_edges ABUT ALSO OVERLAP MULTI
  [-= ((EWXP(y1) >= 0.08 && count(M0G_060_L_v_edges) > 0) || (EWYP(y1) >= 0.08 && count(M0G_060_L_h_edges) > 0)) ? 1 : 0] > 0
 err1 = DFM COPY y2 REGION
 err2 = EXT M0G_060_L_edges M0G < 0.129 ABUT<90 REGION PROJ>=0
 err1 NOT INSIDE OCOVL
 err2 NOT INSIDE OCOVL
}

Q: Space between M0G (width = 0.06um) short side and M0G when PRL in width direction >= -0.08um. >= 0.101um
A: 
M0G_S_4b {
@ Space between M0G (width = 0.06um) short side and M0G when PRL in width direction >= -0.08um. >= 0.101um
 err1 = EXT M0G_060_eq_060_edges M0G < 0.101 ABUT<90 OPPOSITE EXTENDED 0.08+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DOP_M0G (width = 0.06um) and AOP_M0G >= 0.129um
A: 
M0G_S_4c {
@ Space between DOP_M0G (width = 0.06um) and AOP_M0G >= 0.129um
 err1 = EXT DOP_M0G_060 AOP_M0G < 0.129 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between short side of M0G (width = 0.06um) and AOP_M0G (width = 0.05um) when PRL >= -0.075um. >= 0.106um
A: 
M0G_S_4d {
@ Space between short side of M0G (width = 0.06um) and AOP_M0G (width = 0.05um) when PRL >= -0.075um. >= 0.106um
 err1 = EXT M0G_060_eq_060_edges AOP_M0G_050 < 0.106 ABUT<90 OPPOSITE EXTENDED 0.075+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0G (width/length = 0.06/0.095~0.096um) and ALL_M0G >= 0.142um
A: 
M0G_S_4e {
@ Space between AOP_M0G (width/length = 0.06/0.095~0.096um) and ALL_M0G >= 0.142um
 err1 = EXT AOP_M0G_W060_L095_L096 ALL_M0G < 0.142 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0G (width = 0.051~0.053/0.054~0.055/0.088um) and AOP_M0G (width = 0.05um) in vertical direction when PRL >= -0.015um. >= 0.069um
A: 
M0G_S_5a {
@ Space between M0G (width = 0.051~0.053/0.054~0.055/0.088um) and AOP_M0G (width = 0.05um) in vertical direction when PRL >= -0.015um. >= 0.069um
 err1 = EXT M0G_051_To_055_088_h_edges AOP_M0G_050 < 0.069 ABUT<90 OPPOSITE EXTENDED 0.015+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0G (width = 0.051~0.053/0.054~0.055/0.088um) and AOP_M0G (width = 0.04um, PRL >= -0.015) in vertical direction >= 0.065um
A: 
M0G_S_5b {
@ Space between M0G (width = 0.051~0.053/0.054~0.055/0.088um) and AOP_M0G (width = 0.04um, PRL >= -0.015) in vertical direction >= 0.065um
 err1 = EXT M0G_051_To_055_088_h_edges AOP_M0G_040 < 0.065 ABUT<90 OPPOSITE EXTENDED 0.015+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0G (width = 0.051~0.053/0.054~0.055/0.088um) and AOP_M0G (width = 0.05/0.088um) in horizontal direction when PRL > 0um. >= 0.077um
A: 
M0G_S_5c {
@ Space between M0G (width = 0.051~0.053/0.054~0.055/0.088um) and AOP_M0G (width = 0.05/0.088um) in horizontal direction when PRL > 0um. >= 0.077um
 err1 = EXT M0G_051_To_055_088_v_edges AOP_M0G_050 < 0.077 ABUT<90 OPPOSITE REGION
 err2 = EXT M0G_051_To_055_088_v_edges AOP_M0G_088 < 0.077 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0G (width = 0.051~0.053/0.054~0.055/0.088um) and AOP_M0G (width = 0.04um, PRL >= -0.015) in horizontal direction >= 0.077um
A: 
M0G_S_5d {
@ Space between M0G (width = 0.051~0.053/0.054~0.055/0.088um) and AOP_M0G (width = 0.04um, PRL >= -0.015) in horizontal direction >= 0.077um
 err1 = EXT M0G_051_To_055_088_v_edges AOP_M0G_040 < 0.077 ABUT<90 OPPOSITE EXTENDED 0.015+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0G (width = 0.051~0.053/0.054~0.055/0.088um) in vertical direction when PRL > 0um. >= 0.083um
A: 
M0G_S_5e {
@ Space between M0G (width = 0.051~0.053/0.054~0.055/0.088um) in vertical direction when PRL > 0um. >= 0.083um
 err1 = EXT M0G_051_To_055_088_h_edges < 0.083 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Corner space between M0G (width = 0.051~0.053/0.054~0.055/0.088um) and AOP_M0G (width = 0.04um, PRL <= -0.016um) >= 0.069um
A: 
M0G_S_5f {
@ Corner space between M0G (width = 0.051~0.053/0.054~0.055/0.088um) and AOP_M0G (width = 0.04um, PRL <= -0.016um) >= 0.069um
 err1_RAW = EXT M0G_051_To_055_088 AOP_M0G_040 < 0.069 ABUT<90
 err1_TMP = DFM PROPERTY err1_RAW [-= (EWXP(err1_RAW) >= 0.016 && EWYP(err1_RAW) >= 0.016) ? 1 : 0] > 0
 err1 = DFM COPY err1_TMP REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Corner space between M0G (width = 0.051~0.053/0.054~0.055/0.088um) when PRL <= 0um. >= 0.091um
A: 
M0G_S_5g {
@ Corner space between M0G (width = 0.051~0.053/0.054~0.055/0.088um) when PRL <= 0um. >= 0.091um
 err1 = EXT M0G_051_To_055_088 < 0.091 ABUT<90 CORNER TO CORNER SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DOP_M0G and (AOP_M0G INSIDE DG) >= 0.046um
A: 
M0G_S_6a {
@ Space between DOP_M0G and (AOP_M0G INSIDE DG) >= 0.046um
 err1 = EXT DOP_M0G (AOP_M0G INSIDE DG) < 0.046 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

M0G_in_AOP_AA_interact_M0 = AOP_M0G_AND_AOP_AA INTERACT M0
M0G_S_7a_7b_Chk = AOP_M0G NOT INTERACT M0G_in_AOP_AA_interact_M0

Q: Space between AOP_M0G and AOP_AA (AA vertical edge extend 1/2 GT) >= 0.029um
    (Overlap is not allowed, except (AOP_M0G AND AOP_AA) INTERACT M0), except (the space >= 0.013 in GATE poly direction) and INST region
    DRC waive the space or overlap between DUM_M0G and DUM_AA
A: 
M0G_S_7a {
@ Space between AOP_M0G and AOP_AA (AA vertical edge extend 1/2 GT) >= 0.029um
@ (Overlap is not allowed, except (AOP_M0G AND AOP_AA) INTERACT M0), except (the space >= 0.013 in GATE poly direction) and INST region
@ DRC waive the space or overlap between DUM_M0G and DUM_AA
 EDG_WAIVE_7b = ANGLE M0G_S_7a_7b_Chk == 0
 EDG_WAIVE_M0 = EXT [EDG_WAIVE_7b] edge_gate_aopAA_all >= 0.013 < 0.029 ABUT<90
 EDG_WAIVE_AA = EXT EDG_WAIVE_7b [edge_gate_aopAA_all] >= 0.013 < 0.029 ABUT<90
 M0G_CHECK = (M0G_S_7a_7b_Chk NOT COIN EDGE EDG_WAIVE_M0) NOT COIN EDGE M0G_in_AOP_AA_interact_M0
 AAs_CHECK = edge_gate_aopAA_all NOT COIN EDGE EDG_WAIVE_AA
 err1 = OR (EXT (M0G_CHECK COIN EDGE M0G) AAs_CHECK < 0.029 ABUT<90 REGION) (EXT (M0G_CHECK NOT COIN EDGE M0G) (AAs_CHECK COIN EDGE edge_gate_AA_all) < 0.029 ABUT<90 REGION)
 err1 NOT INSIDE INST

 err2 = OR ((M0G_S_7a_7b_Chk INTERACT M0G) AND AOP_AA) ((M0G_S_7a_7b_Chk NOT INTERACT M0G) AND AA)
 err2 NOT INSIDE INST
}

Q: Space between AOP_M0G and AOP_AA in GATE poly direction (Overlap is not allowed, except (AOP_M0G AND AOP_AA) INTERACT M0), except INST region >= 0.013um
    DRC waive the space or overlap between DUM_M0G and DUM_AA
A: 
M0G_S_7b {
@ Space between AOP_M0G and AOP_AA in GATE poly direction (Overlap is not allowed, except (AOP_M0G AND AOP_AA) INTERACT M0), except INST region >= 0.013um
@ DRC waive the space or overlap between DUM_M0G and DUM_AA
 M0G_CHECK = ANGLE M0G_S_7a_7b_Chk == 0
 err1 = OR (EXT (M0G_CHECK COIN EDGE M0G) AOP_AA < 0.013 ABUT>0<90 REGION) (EXT (M0G_CHECK NOT COIN EDGE M0G) AA < 0.013 ABUT>0<90 REGION)
 err2 = OR EDGE ((M0G_S_7a_7b_Chk COIN EDGE M0G) COIN EDGE AOP_AA_h_edges) ((M0G_S_7a_7b_Chk NOT COIN EDGE M0G) COIN EDGE AA_h_edges)
 err1 NOT INSIDE INST
 err2 NOT INSIDE EDGE INST

 err3 = OR ((M0G_S_7a_7b_Chk INTERACT M0G) AND AOP_AA) ((M0G_S_7a_7b_Chk NOT INTERACT M0G) AND AA)
 err4 = M0G INTERACT AOP_AA SINGULAR ONLY
 err3 NOT INSIDE INST
 err4 NOT INSIDE INST
}

Q: Space between M0G (width = 0.06um) and AOP_AA (AA vertical edge extend 1/2 GT), except (the space >= 0.031 in GATE poly direction) >= 0.049um
A: 
M0G_S_8a {
@ Space between M0G (width = 0.06um) and AOP_AA (AA vertical edge extend 1/2 GT), except (the space >= 0.031 in GATE poly direction) >= 0.049um
 WAIVE_M0_side = EXT [M0G_060_h_edges] edge_gate_aopAA_all >= 0.031 <= 0.049 ABUT<90
 WAIVE_AA_side = EXT M0G_060_h_edges [edge_gate_aopAA_all] >= 0.031 <= 0.049 ABUT<90
 CHECK_M0 = M0G_060 NOT COIN EDGE WAIVE_M0_side
 err1 = EXT (edge_gate_aopAA_all NOT COIN EDGE WAIVE_AA_side) CHECK_M0 < 0.049 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0G (width = 0.06um) and AOP_AA in GATE poly direction >= 0.031um
A: 
M0G_S_8b {
@ Space between M0G (width = 0.06um) and AOP_AA in GATE poly direction >= 0.031um
 err1 = EXT M0G_060_h_edges AOP_AA < 0.031 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0G (width = 0.06um) and concave edge of L-shape AA edge (AA vertical edge extend 1/2GT) in S/D direction >= 0.069um
A: 
M0G_S_9 {
@ Space between M0G (width = 0.06um) and concave edge of L-shape AA edge (AA vertical edge extend 1/2GT) in S/D direction >= 0.069um
 err1 = EXT (CONVEX EDGE edge_gate_AA_all == 1) M0G_060_v_edges < 0.069 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0G and AOP_GT, except AOP_GT jog <= 0.004um and OCOVL region >= 0.028um
A: 
M0G_S_10a {
@ Space between AOP_M0G and AOP_GT, except AOP_GT jog <= 0.004um and OCOVL region >= 0.028um
 err1 = EXT AOP_M0G (AOP_GT NOT COIN EDGE AOP_GT_jog_lteq_004) < 0.028 ABUT<90 REGION
 err2 = AOP_M0G INTERACT AOP_GT SINGULAR ONLY
 err1 NOT INSIDE OCOVL
 err2 NOT INSIDE OCOVL
}

pitch090_centerline = INT AOP_GT >= 0.018 <= 0.020 OPPOSITE REGION CENTERLINE 0.002
pitch106_centerline = INT AOP_GT == 0.036 OPPOSITE REGION CENTERLINE 0.002
pitch090_design = DFM COPY (DFM SPACE pitch090_centerline == 0.090-0.002 BY EXT HORIZONTAL) REGION
pitch106_design = DFM COPY (DFM SPACE pitch106_centerline == 0.106-0.002 BY EXT HORIZONTAL) REGION

Q: Space between AOP_M0G and AOP_GT (width >= 0.07um) >= 0.038um
A: 
M0G_S_10b {
@ Space between AOP_M0G and AOP_GT (width >= 0.07um) >= 0.038um
 err1 = EXT AOP_M0G AOP_GT_eqgt_070 < 0.038 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0G and AOP_GT line end >= 0.034um
A: 
M0G_S_10c {
@ Space between AOP_M0G and AOP_GT line end >= 0.034um
 err1 = EXT AOP_M0G AOP_GT_h_edges < 0.034 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0G and ALL_GT (width <= 0.024um, the side space to ALL_GT >= 0.08um), except GT_P96 and small AOP_GT jog <= 0.004um. >= 0.049um
A: 
M0G_S_11 {
@ Space between M0G and ALL_GT (width <= 0.024um, the side space to ALL_GT >= 0.08um), except GT_P96 and small AOP_GT jog <= 0.004um. >= 0.049um
 chk_GT_sides_space_eqgt_080 = EXT (ALL_GT_eqlt_024_edges) ALL_GT < 0.080 ABUT<90 OPPOSITE
 // chk_GT_sides_space_eqlt_080 = EXT [ALL_GT_eqlt_024_edges] ALL_GT < 0.080 ABUT<90 OPPOSITE
 chk_GT_sides_region_eqgt_080 = INT chk_GT_sides_space_eqgt_080 <= 0.024 OPPOSITE REGION
 // chk_GT_sides_region_eqlt_080 = INT chk_GT_sides_space_eqgt_080 chk_GT_sides_space_eqlt_080 <= 0.024 OPPOSITE REGION
 chk_M0G_sides = ((M0G NOT ALL_GT) TOUCH (M0G AND ALL_GT)) COIN EDGE M0G_v_edges
 chk_GT_sides = (ALL_GT_eqlt_024_edges COIN EDGE chk_GT_sides_region_eqgt_080) NOT COIN EDGE AOP_GT_jog_lteq_004
 err1 = EXT chk_M0G_sides chk_GT_sides < 0.049 ABUT<90 REGION
 err1 NOT INSIDE GT_P96
}

Q: Space between M0G and ALL_GT (width = 0.032um, the side space to ALL_GT >= 0.08um), except GT_P96 and small AOP_GT jog <= 0.004um. >= 0.051um
A: 
M0G_S_11a {
@ Space between M0G and ALL_GT (width = 0.032um, the side space to ALL_GT >= 0.08um), except GT_P96 and small AOP_GT jog <= 0.004um. >= 0.051um
 chk_GT_sides_space_eqgt_080 = EXT (ALL_GT_032_v_edges) ALL_GT < 0.080 ABUT<90 OPPOSITE
 // chk_GT_sides_space_eqlt_080 = EXT [ALL_GT_032_v_edges] ALL_GT < 0.080 ABUT<90 OPPOSITE
 chk_GT_sides_region_eqgt_080 = INT chk_GT_sides_space_eqgt_080 == 0.032 OPPOSITE REGION
 // chk_GT_sides_region_eqlt_080 = INT chk_GT_sides_space_eqgt_080 chk_GT_sides_space_eqlt_080 == 0.032 OPPOSITE REGION
 chk_M0G_sides = ((M0G NOT ALL_GT) TOUCH (M0G AND ALL_GT)) COIN EDGE M0G_v_edges
 chk_GT_sides = (ALL_GT_032_v_edges COIN EDGE chk_GT_sides_region_eqgt_080) NOT COIN EDGE AOP_GT_jog_lteq_004
 err1 = EXT chk_M0G_sides chk_GT_sides < 0.051 ABUT<90 REGION
 err1 NOT INSIDE GT_P96
}

Q: Space between AOP_M0G and (AOP_GT NOT P2) (width <= 0.09um, one side space to ((GATE (INSIDE DG) SIZING 0.041um) AND GT) = 0.118/0.119um, the other side space to (AOP_GT NOT P2) >= 0.15um)
    (Except the regions of only one M0G space to DOP_GT < 0.055um, and DOP_GT space to DOP_M0G) >= 0.054um
A: 
M0G_S_12 {
@ Space between AOP_M0G and (AOP_GT NOT P2) (width <= 0.09um, one side space to ((GATE (INSIDE DG) SIZING 0.041um) AND GT) = 0.118/0.119um, the other side space to (AOP_GT NOT P2) >= 0.15um)
@ (Except the regions of only one M0G space to DOP_GT < 0.055um, and DOP_GT space to DOP_M0G) >= 0.054um
 y1 = (SIZE GATE_in_DG BY 0.041) AND GT
 y2 = EXT (AOP_GT_NOT_P2_eqlt_090) AOP_GT < 0.15 ABUT<90 OPPOSITE  //; not exclude P2 in this spacing check
 y3 = EXT [AOP_GT_NOT_P2_eqlt_090] y1 >= 0.118 <= 0.119 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 y4 = INT [y2] y3 <= 0.090 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 y5 = EXT (y4 COIN EDGE DOP_GT) M0G_v_edges < 0.054 ABUT<90 OPPOSITE REGION

 err1 = EXT (y4 COIN EDGE GT) M0G_v_edges < 0.054 ABUT<90 OPPOSITE REGION  //;exclude space between DOP_GT and DOP_M0G
 err2 = EXT (y4 COIN EDGE GT) AOP_M0G_v_edges < 0.054 ABUT<90 OPPOSITE REGION
 err3 = (EXPAND EDGE (y4 COIN EDGE DOP_GT) INSIDE BY 0.002) INTERACT y5 > 1
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between AOP_M0G (width = 0.06um) and AOP_GT, except small AOP_GT jog <= 0.004um and OCOVL region >= 0.031um
A: 
M0G_S_13 {
@ Space between AOP_M0G (width = 0.06um) and AOP_GT, except small AOP_GT jog <= 0.004um and OCOVL region >= 0.031um
 err1 = EXT AOP_M0G_060 (AOP_GT NOT COIN EDGE AOP_GT_jog_lteq_004) < 0.031 ABUT<90 REGION
 err1 NOT INSIDE OCOVL
}

Q: Space between AOP_M0G (width = 0.06um) and AOP_GT line end >= 0.039um
A: 
M0G_S_14 {
@ Space between AOP_M0G (width = 0.06um) and AOP_GT line end >= 0.039um
 err1 = EXT AOP_M0G_060 AOP_GT_h_edges < 0.039 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0G and (M0 NOT M0C), except (M0G (width = 0.051~0.053/0.088um) AND GT) space to M0 = 0.025um, and INST region >= 0.026um
A: 
M0G_S_15a {
@ Space between M0G and (M0 NOT M0C), except (M0G (width = 0.051~0.053/0.088um) AND GT) space to M0 = 0.025um, and INST region >= 0.026um
 waive_M0G_TEMP = (OR M0G_WIDTH_051 M0G_WIDTH_052 M0G_WIDTH_053 M0G_WIDTH_088) AND GT
 waive_M0G_EDGE = EXT [waive_M0G_TEMP] M0 == 0.025 ABUT<90 OPPOSITE
 check_M0G = (EXT [M0G] M0_NOT_M0C < 0.026 ABUT<90) NOT TOUCH EDGE waive_M0G_EDGE
 err1 = EXT check_M0G M0_NOT_M0C < 0.026 ABUT<90 REGION
 err1 NOT INSIDE INST
}

Q: Space between M0G and (M0 NOT M0C) in S/D direction when PRL > -0.016um, except (M0G (width = 0.051~0.053/0.088um) AND GT) space to M0 = 0.025um and INST region >= 0.026um
A: 
M0G_S_15b {
@ Space between M0G and (M0 NOT M0C) in S/D direction when PRL > -0.016um, except (M0G (width = 0.051~0.053/0.088um) AND GT) space to M0 = 0.025um and INST region >= 0.026um
 check_M0G_TEMP = EXT [M0G] M0_NOT_M0C < 0.026 ABUT<90 OPPOSITE EXTENDED 0.016
 waive_M0G_TEMP = (OR M0G_WIDTH_051 M0G_WIDTH_052 M0G_WIDTH_053 M0G_WIDTH_088) AND GT
 waive_M0G_EDGE = EXT [waive_M0G_TEMP] M0 == 0.025 ABUT<90 OPPOSITE
 check_M0G = ANGLE (check_M0G_TEMP NOT TOUCH EDGE waive_M0G_EDGE) == 90
 err1 = EXT check_M0G M0_NOT_M0C < 0.026 ABUT<90 OPPOSITE EXTENDED 0.016 REGION
 err1 NOT INSIDE INST
}

Q: Space between M0G and (M0 NOT M0C) in S/D direction when PRL > -0.016um, except poly center-to-center space = 0.09um design and INST region >= 0.028um
A: 
M0G_S_15c {
@ Space between M0G and (M0 NOT M0C) in S/D direction when PRL > -0.016um, except poly center-to-center space = 0.09um design and INST region >= 0.028um
 waive_TMP = INT GT_v_edges <= 0.036 OPPOSITE REGION CENTERLINE 0.0002
 waive = (EXT waive_TMP == 0.09-0.0002 ABUT<90 OPPOSITE REGION) OR waive_TMP
 err1 = (EXT M0G M0_NOT_M0C_L_edges < 0.028 ABUT<90 OPPOSITE EXTENDED 0.016 REGION) NOT INSIDE waive
 err1 NOT INSIDE INST
}

Q: Space between M0G (width = 0.06um) and (M0 NOT M0C) >= 0.028um
A: 
M0G_S_16a {
@ Space between M0G (width = 0.06um) and (M0 NOT M0C) >= 0.028um
 err1 = EXT M0G_060 M0_NOT_M0C < 0.028 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

AOP_M0_040_W_edge_outer_AOP_M0C = AOP_M0_040_W_edges NOT INSIDE EDGE AOP_M0C
AOP_M0_042_W_edge_outer_AOP_M0C = AOP_M0_042_W_edges NOT INSIDE EDGE AOP_M0C

Q: Space between M0G and short side of AOP_M0, except INST region >= 0.035um
    1. M0 width = 0.04/0.042um
    2. M0 short side NOT INTERACT AOP_M0C
    3. Space between AOP_M0 short side > 0.32um
    4. PRL > 0
A: 
M0G_S_17a {
@ Space between M0G and short side of AOP_M0, except INST region >= 0.035um
@ 1. M0 width = 0.04/0.042um
@ 2. M0 short side NOT INTERACT AOP_M0C
@ 3. Space between AOP_M0 short side > 0.32um
@ 4. PRL > 0
 err1_TMP_a = EXT [AOP_M0_040_W_edge_outer_AOP_M0C] M0G < 0.035 ABUT<90 OPPOSITE //;only check non-shielded M0G
 err1_TMP_b = EXT [AOP_M0_042_W_edge_outer_AOP_M0C] M0G < 0.035 ABUT<90 OPPOSITE
 err1_TMP = OR EDGE err1_TMP_a err1_TMP_b
 err1 = EXT (err1_TMP) AOP_M0 <= 0.32 ABUT<90 //;OPPOSITE
 err1 NOT INSIDE EDGE INST
}

Q: Space between M0G and short side of AOP_M0, except INST region >= 0.049um
    1. M0 width = 0.04/0.042um
    2. M0 short side NOT INTERACT AOP_M0C
    3. Space between AOP_M0 short side > 0.41um
    4. PRL > 0
A: 
M0G_S_17b {
@ Space between M0G and short side of AOP_M0, except INST region >= 0.049um
@ 1. M0 width = 0.04/0.042um
@ 2. M0 short side NOT INTERACT AOP_M0C
@ 3. Space between AOP_M0 short side > 0.41um
@ 4. PRL > 0
 err1_TMP_a = EXT [AOP_M0_040_W_edge_outer_AOP_M0C] M0G < 0.049 ABUT<90 OPPOSITE //;only check non-shielded M0G
 err1_TMP_b = EXT [AOP_M0_042_W_edge_outer_AOP_M0C] M0G < 0.049 ABUT<90 OPPOSITE
 err1_TMP = OR EDGE err1_TMP_a err1_TMP_b
 err1 = EXT (err1_TMP) AOP_M0 <= 0.41 ABUT<90 //;OPPOSITE
 err1 NOT INSIDE EDGE INST
}

Q: Corner space between M0G and short side of AOP_M0, except INST region >= 0.031um
    1. M0 width = 0.04/0.042um
    2. M0 short side NOT INTERACT AOP_M0C
    3. Space between AOP_M0 short side > 0.32um
    4. PRL <= 0
A: 
M0G_S_17c {
@ Corner space between M0G and short side of AOP_M0, except INST region >= 0.031um
@ 1. M0 width = 0.04/0.042um
@ 2. M0 short side NOT INTERACT AOP_M0C
@ 3. Space between AOP_M0 short side > 0.32um
@ 4. PRL <= 0
 err1_TMP_a = OR EDGE (EXT [AOP_M0_040_W_edge_outer_AOP_M0C] M0G < 0.031 ABUT<90 PROJ==0) (EXT [AOP_M0_040_W_edge_outer_AOP_M0C] M0G < 0.031 ABUT<90 NOT PROJ)  //;only check non-shielded M0G
 err1_TMP_b = OR EDGE (EXT [AOP_M0_042_W_edge_outer_AOP_M0C] M0G < 0.031 ABUT<90 PROJ==0) (EXT [AOP_M0_042_W_edge_outer_AOP_M0C] M0G < 0.031 ABUT<90 NOT PROJ)
 err1_TMP = OR EDGE err1_TMP_a err1_TMP_b
 err1 = EXT (err1_TMP) AOP_M0 <= 0.32 ABUT<90 //;OPPOSITE
 err1 NOT INSIDE EDGE INST
}

Q: Space between M0G and short side of (M0 NOT M0C (M0C width = 0.051um, M0 short side interact M0C)) in GATE poly direction when PRL >= 0um. >= 0.039um
A: 
M0G_S_18 {
@ Space between M0G and short side of (M0 NOT M0C (M0C width = 0.051um, M0 short side interact M0C)) in GATE poly direction when PRL >= 0um. >= 0.039um
 err1 = EXT M0G (M0_NOT_M0C_h_edges TOUCH EDGE M0C_051) < 0.039 ABUT<90 PROJ>=0 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between long side of M0G (width = 0.04um) and short side of (M0 NOT M0C) (M0 width = 0.04/0.042um) when PRL >= 0um, except INST region >= 0.028um
A: 
M0G_S_19 {
@ Space between long side of M0G (width = 0.04um) and short side of (M0 NOT M0C) (M0 width = 0.04/0.042um) when PRL >= 0um, except INST region >= 0.028um
 err1 = EXT M0G_040_L_edges M0_NOT_M0C_040_042_W_edges < 0.028 ABUT<90 PROJ>=0 REGION
 err1 NOT INSIDE INST
}

Q: Space between long side of M0G (width = 0.04/0.06um) and short side of (M0 NOT M0C) (M0 width = 0.054um) when PRL >= 0um. >= 0.034um
A: 
M0G_S_20 {
@ Space between long side of M0G (width = 0.04/0.06um) and short side of (M0 NOT M0C) (M0 width = 0.054um) when PRL >= 0um. >= 0.034um
 err1 = EXT M0G_040_L_edges M0_NOT_M0C_054_W_edges < 0.034 ABUT<90 PROJ>=0 REGION
 err2 = EXT M0G_060_L_edges M0_NOT_M0C_054_W_edges < 0.034 ABUT<90 PROJ>=0 REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

M0_W_edges_outside_M0C = (M0 NOT INSIDE EDGE M0C) TOUCH EDGE M0_W_edges
M0_W_054_edges_outside_M0C = (M0_054 NOT INSIDE EDGE M0C) TOUCH EDGE M0_W_edges

Q: Space between long side of M0G (width = 0.04/0.06/0.088um) and short side of M0 (short side NOT INTERACT M0C) when PRL >= -0.018um. >= 0.031um
A: 
M0G_S_21a {
@ Space between long side of M0G (width = 0.04/0.06/0.088um) and short side of M0 (short side NOT INTERACT M0C) when PRL >= -0.018um. >= 0.031um
 err1 = EXT M0G_040_L_edges M0_W_edges_outside_M0C < 0.031 ABUT<90 OPPOSITE EXTENDED 0.018+GLOBAL_TOLERANCE REGION
 err2 = EXT M0G_060_L_edges M0_W_edges_outside_M0C < 0.031 ABUT<90 OPPOSITE EXTENDED 0.018+GLOBAL_TOLERANCE REGION
 err3 = EXT M0G_088_L_edges M0_W_edges_outside_M0C < 0.031 ABUT<90 OPPOSITE EXTENDED 0.018+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between long side of M0G (width = 0.04/0.06/0.088um) and short side of M0 (width = 0.054um, short side NOT INTERACT M0C) when PRL >= -0.018um. >= 0.047um
A: 
M0G_S_21b {
@ Space between long side of M0G (width = 0.04/0.06/0.088um) and short side of M0 (width = 0.054um, short side NOT INTERACT M0C) when PRL >= -0.018um. >= 0.047um
 err1 = EXT M0G_040_L_edges M0_W_054_edges_outside_M0C < 0.047 ABUT<90 OPPOSITE EXTENDED 0.018+GLOBAL_TOLERANCE REGION
 err2 = EXT M0G_060_L_edges M0_W_054_edges_outside_M0C < 0.047 ABUT<90 OPPOSITE EXTENDED 0.018+GLOBAL_TOLERANCE REGION
 err3 = EXT M0G_088_L_edges M0_W_054_edges_outside_M0C < 0.047 ABUT<90 OPPOSITE EXTENDED 0.018+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between long side of M0G (width = 0.06um) and long side of (M0 NOT M0C) when PRL > 0um and M0G and M0 are both in vertical direction >= 0.049um
A: 
M0G_S_22 {
@ Space between long side of M0G (width = 0.06um) and long side of (M0 NOT M0C) when PRL > 0um and M0G and M0 are both in vertical direction >= 0.049um
 err1_CHK = M0_L_edges NOT INSIDE EDGE M0C
 err1 = EXT err1_CHK M0G_060_L_edges < 0.049 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between short side of M0G (width = 0.06um) and short side of (M0 NOT M0C) when PRL >= 0um. >= 0.049um
A: 
M0G_S_23 {
@ Space between short side of M0G (width = 0.06um) and short side of (M0 NOT M0C) when PRL >= 0um. >= 0.049um
 err1_CHK = LENGTH M0G_WIDTH_060 == 0.060
 err1 = EXT err1_CHK M0_NOT_M0C_W_edges < 0.049 ABUT<90 PROJ>=0 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between short side of M0G (width = 0.04/0.06um) and long side of (M0 NOT M0C) (M0 width = 0.054um) when PRL >= 0um. >= 0.032um
A: 
M0G_S_24 {
@ Space between short side of M0G (width = 0.04/0.06um) and long side of (M0 NOT M0C) (M0 width = 0.054um) when PRL >= 0um. >= 0.032um
 err1 = EXT M0G_040_eq_040_edges M0_NOT_M0C_054_L_edges < 0.032 ABUT<90 PROJ>=0 REGION
 err2 = EXT M0G_060_eq_060_edges M0_NOT_M0C_054_L_edges < 0.032 ABUT<90 PROJ>=0 REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0G (width = 0.05um) and the short side of M0 (short side NOT INTERACT M0C) when PRL > -0.018um. >= 0.029um
A: 
M0G_S_25a {
@ Space between M0G (width = 0.05um) and the short side of M0 (short side NOT INTERACT M0C) when PRL > -0.018um. >= 0.029um
 err1 = EXT M0G_050 (M0_W_edges OUTSIDE EDGE M0C) < 0.029 ABUT<90 OPPOSITE EXTENDED 0.018 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0G (width = 0.05um) and the short side of (M0 NOT M0C) (M0 width = 0.04/0.042um) when PRL >= 0.02um, except INST region >= 0.049um
A: 
M0G_S_25b {
@ Space between M0G (width = 0.05um) and the short side of (M0 NOT M0C) (M0 width = 0.04/0.042um) when PRL >= 0.02um, except INST region >= 0.049um
 err1 = EXT M0G_050 M0_NOT_M0C_040_042_W_edges < 0.049 ABUT<90 OPPOSITE REGION PROJ>=0.02
 err1 NOT INSIDE INST
}

Q: Space between M0G (width = 0.05um) and (M0 NOT M0C) (M0 width = 0.054um) when PRL >= 0um. >= 0.049um
A: 
M0G_S_25c {
@ Space between M0G (width = 0.05um) and (M0 NOT M0C) (M0 width = 0.054um) when PRL >= 0um. >= 0.049um
 err1 = EXT M0_NOT_M0C_054 M0G_050 < 0.049 ABUT<90 PROJ>=0 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

M0G_W051To053_L090To091_W054To055_L090To091 = ((M0G WITH EDGE (LENGTH M0G >= 0.051 <= 0.053)) WITH EDGE (LENGTH M0G >= 0.090 <= 0.091)) OR ((M0G WITH EDGE (LENGTH M0G >= 0.054 <= 0.055)) WITH EDGE (LENGTH M0G >= 0.090 <= 0.091))

Q: Space between M0G (width/length = 0.051~0.053/0.09~0.091um, 0.054~0.055/0.09~0.091um) and long side of M0 in S/D direction when PRL > -0.025um. >= 0.032um
    DRC flags M0 line-end (NOT INTERACT M0C) inside the space region
    This rule only checks the space between the nearest point of (M0 line-end [NOT INTERACT M0C] from the M0 long side) and M0G
A: 
M0G_S_26 {
@ Space between M0G (width/length = 0.051~0.053/0.09~0.091um, 0.054~0.055/0.09~0.091um) and long side of M0 in S/D direction when PRL > -0.025um. >= 0.032um
@ DRC flags M0 line-end (NOT INTERACT M0C) inside the space region
@ This rule only checks the space between the nearest point of (M0 line-end [NOT INTERACT M0C] from the M0 long side) and M0G
 chk_M0G_v_edges = M0G_v_edges COIN EDGE M0G_W051To053_L090To091_W054To055_L090To091
 chk_M0_W_edges = M0_W_edges NOT INSIDE EDGE M0C
 chk_M0_L_sides = EXPAND EDGE chk_M0_W_edges INSIDE BY 0.0005 OUTSIDE BY 0.0005
 err1 = EXT chk_M0G_v_edges chk_M0_L_sides < 0.032 ABUT<90 OPPOSITE EXTENDED 0.025-0.0005 REGION //;special spacing check
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0G (width = 0.051~0.053/0.054~0.055/0.088um) and (M0 NOT M0C) (M0 width = 0.04/0.042um) in GATE poly direction >= 0.029um
A: 
M0G_S_27 {
@ Space between M0G (width = 0.051~0.053/0.054~0.055/0.088um) and (M0 NOT M0C) (M0 width = 0.04/0.042um) in GATE poly direction >= 0.029um
 err1 = EXT M0G_051_To_055_088_h_edges M0_NOT_M0C_040_042 < 0.029 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M0G (width = 0.06um) and (M0 NOT M0C) in S/D direction when PRL > -0.016um. >= 0.029um
A: 
M0G_S_28 {
@ Space between M0G (width = 0.06um) and (M0 NOT M0C) in S/D direction when PRL > -0.016um. >= 0.029um
 err1 = EXT M0_NOT_M0C_v_edges M0G_060 < 0.029 ABUT<90 OPPOSITE EXTENDED 0.016 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Corner space between M0G and (M0 NOT M0C) when PRL < -0.014um, except INST region >= 0.028um
A: 
M0G_S_29 {
@ Corner space between M0G and (M0 NOT M0C) when PRL < -0.014um, except INST region >= 0.028um
 err1_RAW = EXT M0G M0_NOT_M0C < 0.028 ABUT CORNER TO CORNER
 err1_TMP = DFM PROPERTY err1_RAW [-= (EWXP(err1_RAW) > 0.014 && EWYP(err1_RAW) > 0.014) ? 1 : 0] > 0
 err1 = DFM COPY err1_TMP REGION
 err1 NOT INSIDE INST
}

Q: Space between M0G and P2 in GATE poly direction when INTERACT the same GT (P2 (width = 0.048um, 0.068um) overlap (GT AND M0G) is not allowed) >= 0.016um
    Except M0G width/length = 0.06/0.095~0.096um, INST region
A: 
M0G_S_30 {
@ Space between M0G and P2 in GATE poly direction when INTERACT the same GT (P2 (width = 0.048um, 0.068um) overlap (GT AND M0G) is not allowed) >= 0.016um
@ Except M0G width/length = 0.06/0.095~0.096um, INST region
 CHECK_GTs = (GT INTERACT P2) INTERACT M0G
 CHECK_M0G = (M0G INTERACT CHECK_GTs) NOT (OR M0G_W060_L095 M0G_W060_L096)
 CHECK_P2s_TMP = (P2 INTERACT CHECK_GTs) INSIDE EDGE CHECK_GTs
 CHECK_P2s = CHECK_P2s_TMP COIN EDGE P2_h_edges

 err1 = EXT CHECK_M0G CHECK_P2s < 0.016 ABUT<90 OPPOSITE REGION
 err2 = (OR P2_W_048 P2_W_068) AND (GT AND CHECK_M0G)
 err1 NOT INSIDE INST
 err2 NOT INSIDE INST
}

Q: Space between the long side of M0G (width = 0.04/0.06um) and the short side of (M0 NOT M0C) when PRL >= 0um. >= 0.033um
    1) M0C width = 0.048/0.052um, space to neighboring M0C (width = 0.048/0.052um) = 0.044um, PRL = 0um
    2) M0 and M0G interact same M0C
A: 
M0G_S_31a {
@ Space between the long side of M0G (width = 0.04/0.06um) and the short side of (M0 NOT M0C) when PRL >= 0um. >= 0.033um
@ 1) M0C width = 0.048/0.052um, space to neighboring M0C (width = 0.048/0.052um) = 0.044um, PRL = 0um
@ 2) M0 and M0G interact same M0C
 CHECK_M0C_corner = M0C_048_052 COIN EDGE (INT [M0C] < 0.001 ABUT==90 INTERSECTING ONLY)
 CHECK_M0C_CRN = EXT [CHECK_M0C_corner] == 0.044 OPPOSITE EXTENDED 0.0005 PROJ == 0
 CHECK_M0C = M0C_048_052 WITH EDGE CHECK_M0C_CRN
 CHECK_M0G_side = (M0G_040_L_edges OR EDGE M0G_060_L_edges) INSIDE EDGE CHECK_M0C
 CHECK_M0s_side = M0_NOT_M0C TOUCH EDGE CHECK_M0C
 err1 = EXT CHECK_M0G_side CHECK_M0s_side < 0.033 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//;M0G_S_31b_31c_M0G_W_edge = M0G_051_eq_051_edges OR EDGE M0G_054_eq_054_edges
M0G_S_31b_31c_M0G_W_edge = LENGTH (WITH WIDTH M0G >= 0.051 <= 0.055) >= 0.051 <= 0.055

Q: Space between the short side of M0G (width = 0.051~0.053/0.054~0.055um) and the short side of M0 (short side not interact M0C) when PRL >= -0.018um. >= 0.031um
A: 
M0G_S_31b {
@ Space between the short side of M0G (width = 0.051~0.053/0.054~0.055um) and the short side of M0 (short side not interact M0C) when PRL >= -0.018um. >= 0.031um
 chk_M0 = M0_W_edges OUTSIDE EDGE M0C
 err1 = EXT chk_M0 M0G_S_31b_31c_M0G_W_edge < 0.031 ABUT<90 OPPOSITE EXTENDED 0.018+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between the short side of M0G (width = 0.051~0.053/0.054~0.055um) and the short side of M0 (width = 0.054um, short side not interact M0C) when PRL >= -0.018um. >= 0.047um
A: 
M0G_S_31c {
@ Space between the short side of M0G (width = 0.051~0.053/0.054~0.055um) and the short side of M0 (width = 0.054um, short side not interact M0C) when PRL >= -0.018um. >= 0.047um
 chk_M0 = (M0_W_edges COIN EDGE M0_054) NOT INSIDE EDGE M0C
 err1 = EXT chk_M0 M0G_S_31b_31c_M0G_W_edge < 0.047 ABUT<90 OPPOSITE EXTENDED 0.018+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//V0


Q: Space between two V0s >= 0.04um
A: 
V0_S_1 {
@ Space between two V0s >= 0.04um
 err1 = EXT V0N < 0.04 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between two V0s when PRL >= -0.026um, except INST region >= 0.051um
    DRC only flag the point-to-point space when PRL <= 0
A: 
V0_S_2 {
@ Space between two V0s when PRL >= -0.026um, except INST region >= 0.051um
@ DRC only flag the point-to-point space when PRL <= 0
//; Only flag the point-to-point space < 0.051 when abs(PRL) < Minimum space value
 err1 = EXT V0N < 0.051 ABUT<90 OPPOSITE EXTENDED 0.001 REGION
 err1 NOT INSIDE INST

 err2_RAW = EXT V0N < 0.051 ABUT<90 CORNER TO CORNER
 err2_TMP = DFM PROPERTY err2_RAW [-= (EWXP(err2_RAW) <= 0.026 || EWYP(err2_RAW) <= 0.026) ? 1 : 0] > 0
 err2 = DFM COPY err2_TMP REGION
 err2 NOT INSIDE INST
}

Q: Space between V0 bar and V0 bar, square V0 or rectangular V0 >= 0.59um
A: 
V0_S_3 {
@ Space between V0 bar and V0 bar, square V0 or rectangular V0 >= 0.59um
 err1 = EXT V0_BAR_100_all < 0.59 ABUT<90 SINGULAR REGION
 err2 = EXT V0_BAR_100_all V0_SR < 0.59 ABUT<90 SINGULAR REGION

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between V0 and M0G at different net >= 0.029um
A: 
V0_S_4 {
@ Space between V0 and M0G at different net >= 0.029um
 err1 = EXT (V0 INTERACT V0N) M0G < 0.029 ABUT<90 SINGULAR REGION NOT CONNECTED MEASURE ALL //;based on M0G.S.1
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between V0 and M0G at different net when PRL > -0.012um. >= 0.032um
A: 
V0_S_5 {
@ Space between V0 and M0G at different net when PRL > -0.012um. >= 0.032um
 err1 = EXT (V0 INTERACT V0N) M0G < 0.032 ABUT<90 REGION NOT CONNECTED OPPOSITE EXTENDED 0.012 MEASURE ALL //;based on M0G.S.1
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between V0 and (M0 NOT M0C) at different net in S/D direction when PRL > -0.016um. >= 0.025um
A: 
V0_S_7 {
@ Space between V0 and (M0 NOT M0C) at different net in S/D direction when PRL > -0.016um. >= 0.025um
 err1 = EXT (V0 INTERACT V0N) M0_NOT_M0C_v_edges < 0.025 REGION NOT CONNECTED OPPOSITE EXTENDED 0.016 MEASURE ALL //;based on M0.S.1
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between V0 and (M0 NOT M0C) at different net in S/D direction when PRL > -0.016um. >= 0.027um
     DRC only check space along M1 enclosure V0 > 0um in S/D direction
A: 
V0_S_8 {
@ Space between V0 and (M0 NOT M0C) at different net in S/D direction when PRL > -0.016um. >= 0.027um
@ DRC only check space along M1 enclosure V0 > 0um in S/D direction
 chk_V0 = (V0 INTERACT V0N) NOT COIN INSIDE EDGE M1
 err1 = EXT chk_V0 M0_NOT_M0C_v_edges < 0.027 REGION NOT CONNECTED OPPOSITE EXTENDED 0.016 MEASURE ALL //;based on M0.S.1
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between V0 and (M0 NOT M0C) line-end at different net when PRL > 0.01um, except INST region >= 0.025um
A: 
V0_S_9 {
@ Space between V0 and (M0 NOT M0C) line-end at different net when PRL > 0.01um, except INST region >= 0.025um
 err1 = EXT (V0 INTERACT V0N) (M0_NOT_M0C COIN EDGE M0_NOT_M0C_W_edges) < 0.025 ABUT<90 OPPOSITE PROJ>0.01 NOT CONNECTED REGION MEASURE ALL //;based on M0.S.1
 err1 NOT INSIDE INST
}


Q: Space between V0 and M0G at different net when PRL > -0.012um. >= 0.04um
A: 
V0_S_5_DFM1 {
@ Space between V0 and M0G at different net when PRL > -0.012um. >= 0.04um
 err1 = EXT (V0 INTERACT V0N) M0G < 0.04 ABUT<90 SINGULAR REGION NOT CONNECTED OPPOSITE EXTENDED 0.012 MEASURE ALL //;based on M0G.S.1
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Recommended protection space between square V0 and the M1 concave corner (square V0 enclosure by M1 edge < 0.003um at opposite side of M1 concave corner,
    the concave corner with M1 width <= 0.034um and jog length >= 0.004um) >= 0.03
A: 
V0_S_23_DFM1 {
@ Recommended protection space between square V0 and the M1 concave corner (square V0 enclosure by M1 edge < 0.003um at opposite side of M1 concave corner,
@ the concave corner with M1 width <= 0.034um and jog length >= 0.004um) >= 0.03
 min_enc_met_side = M1 TOUCH EDGE (ENC V0N [M1] < 0.003 ABUT<90 OPPOSITE)
 min_wid_met_side = M1 TOUCH EDGE (INT min_enc_met_side [M1_convex_lt_two_edges] <= 0.034 OPPOSITE)
 min_wid_met_corn = EXT min_wid_met_side (LENGTH M1_convex_lt_two_edges >= 0.004) < 0.001 ABUT INTERSECTING ONLY REGION
 min_wid_met_side_c = min_wid_met_side TOUCH EDGE min_wid_met_corn
 min_wid_met_corn_c = M1 TOUCH EDGE min_wid_met_corn
 min_wid_met_side_opp = M1 TOUCH EDGE (INT min_wid_met_side_c [M1] <= 0.034 OPPOSITE)
 min_wid_met_area_opp = INT min_wid_met_side_c M1 <= 0.034 OPPOSITE REGION

 min_enc_via_s = ENC [V0N] min_wid_met_side_opp < 0.003 ABUT<90 OPPOSITE
 min_enc_via_c = V0N WITH EDGE min_enc_via_s
 min_met_corn = min_wid_met_corn_c COIN EDGE (M1 ENCLOSE min_enc_via_c)
 via_err_edge_outer = EXT [min_enc_via_c] min_met_corn < 0.03 ABUT<90 OPPOSITE EXTENDED 0.005 MEASURE ALL
 via_err_edge_inner = EXT [min_enc_via_c] min_wid_met_corn < 0.03 ABUT<90 OPPOSITE EXTENDED 0.005 EXCLUDE SHIELDED
 via_err_edge_all = OR EDGE via_err_edge_outer via_err_edge_inner
 err1 = min_enc_via_c WITH EDGE via_err_edge_all
 err1 NOT INSIDE SealR_NOT_BULK

 min_wid_met_all = INT M1 M1_convex_lt_two_edges <= 0.034 OPPOSITE REGION
 err2 = ENC (V0N INTERACT min_wid_met_all SINGULAR ALSO) M1 < 0.0005 SINGULAR REGION  //;INTERACT min_wid_met_rvs SINGULAR ONLY // point touch via
 err2 NOT INSIDE SealR_NOT_BULK

 met_corner_corss = (EXT M1_convex_lt_two_edges M1 < 0.001 ABUT==90 INTERSECTING ONLY REGION) COIN EDGE min_wid_met_all
 via_inside_corss = ((V0N NOT WITH EDGE (ENC [V0N] M1 < 0.001 ABUT>0<90 SINGULAR)) NOT WITH EDGE via_err_edge_all) NOT INSIDE min_wid_met_all
 via_inside_corss_enc = EXT [via_inside_corss] met_corner_corss <= 0.001 PROJ==0 PARA ONLY OPPOSITE EXTENDED 0.002
 err3 = via_inside_corss INTERACT (INT via_inside_corss_enc == V0_MiniWidth OPPOSITE REGION) // via inside cross must be enclosed by the short side of metal (width<= 0.034) >= 0.001
 err3 NOT INSIDE SealR_NOT_BULK
}


//;M0C_vertex_area = EXT M0C < 0.001 ABUT REGION
V0N_intact_M0_040 = V0N INTERACT M0_040_042
V0N_intact_M0_054 = V0N INTERACT M0_054

M0_040_with_V0 = M0_040_042 INTERACT V0N_intact_M0_040
M0_054_with_V0 = M0_054 INTERACT V0N_intact_M0_054

M0C_with_M0_040_V0 = M0C INTERACT M0_040_with_V0
M0C_with_M0_054_V0 = M0C INTERACT M0_054_with_V0

M0C_with_M0_040_V0_concave_edges = CONVEX EDGE M0C_with_M0_040_V0 <= 1
M0C_with_M0_054_V0_concave_edges = CONVEX EDGE M0C_with_M0_054_V0 <= 1

VARIABLE V0_S_11_val 0.038
VARIABLE V0_S_12_val 0.082

Q: Space between V0 (INTERACT M0 width = 0.04/0.042um) and M0C concave corner when V0 and M0C interact same M0 >= 0.038um
A: 
V0_S_11 {
@ Space between V0 (INTERACT M0 width = 0.04/0.042um) and M0C concave corner when V0 and M0C interact same M0 >= 0.038um
 M0C_reversed = DRC:1 NOT (M0C_with_M0_040_V0 WITH EDGE M0C_with_M0_040_V0_concave_edges)
 M0C_corner_space_TMP = ENC (V0N_intact_M0_040 AND M0C_reversed) [M0C_reversed] < V0_S_11_val ABUT
 M0C_corner_TMP = INT [M0C_reversed] M0C_corner_space_TMP < 0.0001 ABUT==90 INTERSECTING ONLY
 M0C_M0_interface = (M0_040_with_V0 NOT M0C) COIN EDGE M0C_with_M0_040_V0_concave_edges
 VIA_corner_error_TMP = ENC [V0N_intact_M0_040] M0C_M0_interface < V0_S_11_val ABUT
 M0C_corner_error_TMP = M0C_reversed COIN EDGE (M0C_corner_TMP COIN EDGE M0C_with_M0_040_V0_concave_edges)
 err1 = ENC VIA_corner_error_TMP M0C_corner_error_TMP < V0_S_11_val ABUT REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between V0 (INTERACT M0 width = 0.054um) and M0C concave corner when V0 and M0C interact same M0 >= 0.082um
A: 
V0_S_12 {
@ Space between V0 (INTERACT M0 width = 0.054um) and M0C concave corner when V0 and M0C interact same M0 >= 0.082um
 M0C_reversed = DRC:1 NOT (M0C_with_M0_054_V0 WITH EDGE M0C_with_M0_054_V0_concave_edges)
 M0C_corner_space_TMP = ENC (V0N_intact_M0_054 AND M0C_reversed) [M0C_reversed] < V0_S_12_val ABUT EXCLUDE SHIELDED
 M0C_corner_TMP = INT [M0C_reversed] M0C_corner_space_TMP < 0.0001 ABUT==90 INTERSECTING ONLY
 M0C_M0_interface = (M0_054_with_V0 NOT M0C) COIN EDGE M0C_with_M0_054_V0_concave_edges
 VIA_corner_error_TMP = ENC [V0N_intact_M0_054] M0C_M0_interface < V0_S_12_val ABUT EXCLUDE SHIELDED
 M0C_corner_error_TMP = M0C_reversed COIN EDGE (M0C_corner_TMP COIN EDGE M0C_with_M0_054_V0_concave_edges)
 err1 = ENC VIA_corner_error_TMP M0C_corner_error_TMP < V0_S_12_val ABUT REGION EXCLUDE SHIELDED
 err1 NOT INSIDE SealR_NOT_BULK
}


//RV0

Q: Space between square V0 and rectangular V0 >= 0.049um
A: 
RV0_S_1 {
@ Space between square V0 and rectangular V0 >= 0.049um
 err1 = EXT V0N RV0 < 0.049 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between two rectangular V0s >= 0.047um
A: 
RV0_S_2 {
@ Space between two rectangular V0s >= 0.047um
 err1 = EXT RV0 < 0.047 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between rectangular V0 and square or rectangular V0 when PRL >= -0.026um, DRC only flag the point-to-point space when PRL <= 0. >= 0.051um
A: 
RV0_S_3 {
@ Space between rectangular V0 and square or rectangular V0 when PRL >= -0.026um, DRC only flag the point-to-point space when PRL <= 0. >= 0.051um
 err1 = EXT V0_SR RV0 < 0.051 ABUT<90 OPPOSITE EXTENDED 0.001 REGION
 err1 NOT INSIDE SealR_NOT_BULK

 err2_RAW = EXT V0_SR RV0 < 0.051 ABUT<90 CORNER TO CORNER
 err2_TMP = DFM PROPERTY err2_RAW [-= (EWXP(err2_RAW) <= 0.026 || EWYP(err2_RAW) <= 0.026) ? 1 : 0] > 0
 err2 = DFM COPY err2_TMP REGION
 err2 NOT INSIDE SealR_NOT_BULK
}

VARIABLE RV0_S_4_val 0.074

Q: Space between rectangular V0 to square or rectangular V0 when PRL > -0.032um for the short side of rectangular V0 >= 0.074um
A: 
RV0_S_4 {
@ Space between rectangular V0 to square or rectangular V0 when PRL > -0.032um for the short side of rectangular V0 >= 0.074um
 err1 = EXT V0N RV0_W < RV0_S_4_val ABUT<90 OPPOSITE EXTENDED 0.001 REGION
 err2 = EXT RV0_W RV0 < RV0_S_4_val ABUT<90 OPPOSITE EXTENDED 0.001 REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK

 Y1 = EXT V0N (ANGLE RV0_W == 0) < RV0_S_4_val ABUT<90 NOT PROJ
 Y2 = DFM PROPERTY Y1 GLOBALXY [-= (EWXP(Y1) < 0.032) ? 1 : 0] > 0
 err3 = DFM COPY Y2 REGION
 err3 NOT INSIDE SealR_NOT_BULK

 Y3 = EXT V0N (ANGLE RV0_W == 90) < RV0_S_4_val ABUT<90 NOT PROJ
 Y4 = DFM PROPERTY Y3 GLOBALXY [-= (EWYP(Y3) < 0.032) ? 1 : 0] > 0
 err4 = DFM COPY Y4 REGION
 err4 NOT INSIDE SealR_NOT_BULK

 Z1 = EXT (ANGLE RV0_W == 0) < RV0_S_4_val ABUT<90 NOT PROJ
 Z2 = DFM PROPERTY Z1 GLOBALXY [-= (EWXP(Z1) < 0.032) ? 1 : 0] > 0
 err5 = DFM COPY Z2 REGION
 err5 NOT INSIDE SealR_NOT_BULK

 Z3 = EXT (ANGLE RV0_W == 90) < RV0_S_4_val ABUT<90 NOT PROJ
 Z4 = DFM PROPERTY Z3 GLOBALXY [-= (EWYP(Z3) < 0.032) ? 1 : 0] > 0
 err6 = DFM COPY Z4 REGION
 err6 NOT INSIDE SealR_NOT_BULK

 Z5 = EXT (ANGLE RV0_L == 0) (ANGLE RV0_W == 0) < RV0_S_4_val ABUT<90 NOT PROJ
 Z6 = DFM PROPERTY Z5 GLOBALXY [-= (EWXP(Z5) < 0.032) ? 1 : 0] > 0
 err7 = DFM COPY Z6 REGION
 err7 NOT INSIDE SealR_NOT_BULK

 Z7 = EXT (ANGLE RV0_L == 90) (ANGLE RV0_W == 90) < RV0_S_4_val ABUT<90 NOT PROJ
 Z8 = DFM PROPERTY Z7 GLOBALXY [-= (EWYP(Z7) < 0.032) ? 1 : 0] > 0
 err8 = DFM COPY Z8 REGION
 err8 NOT INSIDE SealR_NOT_BULK
}

Q: Space between short side of rectangular V0 when PRL > 0um. = 0.074~0.082, >= 0.1um
A: 
RV0_S_4a {
@ Space between short side of rectangular V0 when PRL > 0um. = 0.074~0.082, >= 0.1um
 err1 = EXT RV0_W < 0.074 ABUT<90 OPPOSITE REGION
 err2 = EXT RV0_W > 0.082 < 0.100 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Corner space between rectangular V0 and square or rectangular V0 when PRL <= -0.032um. >= 0.051um
A: 
RV0_S_5 {
@ Corner space between rectangular V0 and square or rectangular V0 when PRL <= -0.032um. >= 0.051um
 err1_RAW = EXT V0_SR RV0 < 0.051 ABUT<90 CORNER TO CORNER
 err1_TMP = DFM PROPERTY err1_RAW [-= (EWXP(err1_RAW) >= 0.032 && EWYP(err1_RAW) >= 0.032) ? 1 : 0] > 0
 err1 = DFM COPY err1_TMP REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between the long side of RV0 when PRL > 0um and with one M1 between two RV0s >= 0.115um
A: 
RV0_S_6 {
@ Space between the long side of RV0 when PRL > 0um and with one M1 between two RV0s >= 0.115um
 y1 = EXT RV0_L < 0.115 ABUT<90 OPPOSITE REGION
 y2 = EXT [RV0_L] < 0.115 ABUT<90 OPPOSITE
 y3 = EXPAND EDGE y2 INSIDE BY 0.001
 y4 = (y1 or y3) AND M1
 err1_TMP = (y1 or y3) INTERACT y4 >= 3
 err1 = y1 AND err1_TMP
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between RV0 and M0G at different net >= 0.029um
A: 
RV0_S_7 {
@ Space between RV0 and M0G at different net >= 0.029um
 err1 = EXT (V0 INTERACT RV0) M0G < 0.029 ABUT<90 SINGULAR NOT CONNECTED REGION MEASURE ALL //;based on M0.S.1
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between RV0 and M0G at different net when PRL > -0.012um. >= 0.032um
A: 
RV0_S_8 {
@ Space between RV0 and M0G at different net when PRL > -0.012um. >= 0.032um
 err1 = EXT (V0 INTERACT RV0) M0G < 0.032 ABUT<90 OPPOSITE EXTENDED 0.012 NOT CONNECTED REGION MEASURE ALL //;based on M0.S.1
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between RV0 and (M0 NOT M0C) at different net in S/D direction when PRL > -0.016um. >= 0.025um
A: 
RV0_S_9 {
@ Space between RV0 and (M0 NOT M0C) at different net in S/D direction when PRL > -0.016um. >= 0.025um
 err1 = EXT (V0 INTERACT RV0) M0_NOT_M0C_v_edges < 0.025 ABUT<90 OPPOSITE EXTENDED 0.016 NOT CONNECTED REGION MEASURE ALL //;based on M0.S.1
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between RV0 and (M0 NOT M0C) line-end at different net when PRL > 0.01um. >= 0.025um
A: 
RV0_S_10 {
@ Space between RV0 and (M0 NOT M0C) line-end at different net when PRL > 0.01um. >= 0.025um
 err1 = EXT (V0 INTERACT RV0) (M0_NOT_M0C COIN EDGE M0_NOT_M0C_W_edges) < 0.025 ABUT<90 OPPOSITE PROJ>0.01 NOT CONNECTED REGION MEASURE ALL //;based on M0.S.1
 err1 NOT INSIDE SealR_NOT_BULK
}

// RV0.S.11 (purposely blank)

RV0_intact_M0_040 = RV0 INTERACT M0_040_042
RV0_intact_M0_054 = RV0 INTERACT M0_054

M0_040_with_RV0 = M0_040_042 INTERACT RV0_intact_M0_040
M0_054_with_RV0 = M0_054 INTERACT RV0_intact_M0_054

M0C_with_M0_040_RV0 = M0C INTERACT M0_040_with_RV0
M0C_with_M0_054_RV0 = M0C INTERACT M0_054_with_RV0

M0C_with_M0_040_RV0_concave_edges = CONVEX EDGE M0C_with_M0_040_RV0 <= 1
M0C_with_M0_054_RV0_concave_edges = CONVEX EDGE M0C_with_M0_054_RV0 <= 1

VARIABLE RV0_S_12_val 0.038
VARIABLE RV0_S_13_val 0.082

Q: Space between rectangular V0 (INTERACT M0 width = 0.04/0.042um) and M0C concave corner when rectangular V0 and M0C interact same M0 >= 0.038um
A: 
RV0_S_12 {
@ Space between rectangular V0 (INTERACT M0 width = 0.04/0.042um) and M0C concave corner when rectangular V0 and M0C interact same M0 >= 0.038um
 M0C_reversed = DRC:1 NOT (M0C_with_M0_040_RV0 WITH EDGE M0C_with_M0_040_RV0_concave_edges)
 M0C_corner_space_TMP = ENC (RV0_intact_M0_040 AND M0C_reversed) [M0C_reversed] < RV0_S_12_val ABUT
 M0C_corner_TMP = INT [M0C_reversed] M0C_corner_space_TMP < 0.0001 ABUT==90 INTERSECTING ONLY
 M0C_M0_interface = (M0_040_with_RV0 NOT M0C) COIN EDGE M0C_with_M0_040_RV0_concave_edges
 VIA_corner_error_TMP = ENC [RV0_intact_M0_040] M0C_M0_interface < RV0_S_12_val ABUT
 M0C_corner_error_TMP = M0C_reversed COIN EDGE (M0C_corner_TMP COIN EDGE M0C_with_M0_040_RV0_concave_edges)
 err1 = ENC VIA_corner_error_TMP M0C_corner_error_TMP < RV0_S_12_val ABUT REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between rectangular V0 (INTERACT M0 width = 0.054um) and M0C concave corner when rectangular V0 and M0C interact same M0 >= 0.082um
A: 
RV0_S_13 {
@ Space between rectangular V0 (INTERACT M0 width = 0.054um) and M0C concave corner when rectangular V0 and M0C interact same M0 >= 0.082um
 M0C_reversed = DRC:1 NOT (M0C_with_M0_054_RV0 WITH EDGE M0C_with_M0_054_RV0_concave_edges)
 M0C_corner_space_TMP = ENC (RV0_intact_M0_054 AND M0C_reversed) [M0C_reversed] < RV0_S_13_val ABUT EXCLUDE SHIELDED
 M0C_corner_TMP = INT [M0C_reversed] M0C_corner_space_TMP < 0.0001 ABUT==90 INTERSECTING ONLY
 M0C_M0_interface = (M0_054_with_RV0 NOT M0C) COIN EDGE M0C_with_M0_054_RV0_concave_edges
 VIA_corner_error_TMP = ENC [RV0_intact_M0_054] M0C_M0_interface < RV0_S_13_val ABUT EXCLUDE SHIELDED
 M0C_corner_error_TMP = M0C_reversed COIN EDGE (M0C_corner_TMP COIN EDGE M0C_with_M0_054_RV0_concave_edges)
 err1 = ENC VIA_corner_error_TMP M0C_corner_error_TMP < RV0_S_13_val ABUT REGION EXCLUDE SHIELDED
 err1 NOT INSIDE SealR_NOT_BULK
}

//M1

Q: Space between M1 and line-end (width < 0.046um) when PRL > -0.016um except INST region >= 0.07
A: 
M1_S_13_ME {
@ Space between M1 and line-end (width < 0.046um) when PRL > -0.016um except INST region >= 0.07
 err1 = EXT M1_line M1_end_0.046 < 0.070 ABUT<90 OPPOSITE EXTENDED 0.016 REGION
 err1 NOT INSIDE INST
}

Q: Space between M1 and line-end (0.046um <= M1 width <= 0.049um), when PRL > -0.016um, except INST region >= 0.036um
A: 
M1_S_13a_ME {
@ Space between M1 and line-end (0.046um <= M1 width <= 0.049um), when PRL > -0.016um, except INST region >= 0.036um
 err1 = EXT M1_line M1_end_0.046_0.049 < 0.036 ABUT<90 OPPOSITE EXTENDED 0.016 REGION
 err1 NOT INSIDE INST
}

Q: Space between M1 line-end and line-end (width < 0.046um) when PRL > -0.016um, except INST region >= 0.081um
A: 
M1_S_14_ME {
@ Space between M1 line-end and line-end (width < 0.046um) when PRL > -0.016um, except INST region >= 0.081um
 err1 = EXT M1_end_0.046 < 0.081 ABUT<90 OPPOSITE EXTENDED 0.016 REGION
 err1 NOT INSIDE INST
}

Q: Space between M1 outside vertex (M1 line-end outer vertex or L-shape outer vertex) and nearby L-shape inner vertex >= 0.047um
    DRC flag if both projection space < 0.036um, except INST region
A: 
M1_S_50_ME {
@ Space between M1 outside vertex (M1 line-end outer vertex or L-shape outer vertex) and nearby L-shape inner vertex >= 0.047um
@ DRC flag if both projection space < 0.036um, except INST region
 Y1 = (EXT [M1_v_edges] < 0.036 ABUT<90 OPPOSITE EXTENDED 0.047) OR EDGE (EXT [M1_h_edges] < 0.036 ABUT<90 OPPOSITE EXTENDED 0.047)
 Y2 = EXT M1_convex_corner M1_concave_corner < 0.047 ABUT<90
 err1_a = INT Y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_b = EXT Y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_c = DFM PROPERTY Y2 err1_a err1_b ABUT ALSO OVERLAP MULTI [-= (count(err1_a) > 0 && count(err1_b) > 0) ? 1 : 0] > 0
 err1 = DFM COPY err1_c REGION
 err1 NOT INSIDE INST
}

Q: Recommended M1 space to reduce the short possibility, except MOMDMY region >= 0.044um
A: 
M1_S_1_DFM1 {
@ Recommended M1 space to reduce the short possibility, except MOMDMY region >= 0.044um
 err1 = EXT M1 < 0.044 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE MOMDMY
}

Q: Recommended M1 space when either one M1 width > 0.09um. >= 0.072um
A: 
M1_S_7_DFM1 {
@ Recommended M1 space when either one M1 width > 0.09um. >= 0.072um
 chk_M1 = M1 WITH WIDTH > 0.09
 err1 = EXT chk_M1 M1 < 0.072 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Recommended M1 space when either one M1 width > 0.12um. >= 0.106um
A: 
M1_S_8_DFM1 {
@ Recommended M1 space when either one M1 width > 0.12um. >= 0.106um
 chk_M1 = M1 WITH WIDTH > 0.12
 err1 = EXT chk_M1 M1 < 0.106 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Recommended M1 space when either one M1 width > 0.18um. >= 0.126um
A: 
M1_S_9_DFM1 {
@ Recommended M1 space when either one M1 width > 0.18um. >= 0.126um
 chk_M1 = M1 WITH WIDTH > 0.18
 err1 = EXT chk_M1 M1 < 0.126 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Recommended M1 space when either one M1 width > 0.27um. >= 0.144um
A: 
M1_S_10_DFM1 {
@ Recommended M1 space when either one M1 width > 0.27um. >= 0.144um
 chk_M1 = M1 WITH WIDTH > 0.27
 err1 = EXT chk_M1 M1 < 0.144 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}


#IFDEF DFM_RULES_PRIORITY_1 YES
Q: Space between M1 and line-end (W < 0.046um, PRL > -0.022um) >= 0.07um
A: 
M1_S_13a_DFM1 {
@ Space between M1 and line-end (W < 0.046um, PRL > -0.022um) >= 0.07um
 err1 = EXT M1 M1_end_0.046 < 0.070 ABUT<90 OPPOSITE EXTENDED 0.022 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M1 and line-end (0.046 < W <= 0.051um, PRL > -0.022um) >= 0.063um
A: 
M1_S_13b_DFM1 {
@ Space between M1 and line-end (0.046 < W <= 0.051um, PRL > -0.022um) >= 0.063um
 err1 = EXT M1 M1_end_0.046_0.051 < 0.063 ABUT<90 OPPOSITE EXTENDED 0.022 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M1 line-end (W <= 0.051um) and line-end (W < 0.048um, PRL > -0.022um) >= 0.081um
A: 
M1_S_13c_DFM1 {
@ Space between M1 line-end (W <= 0.051um) and line-end (W < 0.048um, PRL > -0.022um) >= 0.081um
 err1 = EXT M1_end_0.051 M1_end_0.048 < 0.081 ABUT<90 OPPOSITE EXTENDED 0.022 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M1 line and (V0 or V1) enclosed by dense M1 line-end (when PRL (L1) > -0.025um; E <= 0.045um) >= 0.117um
    Dense M1 line end definition: (W+S) < 0.11um, the PRL (L2) of (V0 or V1) and neighboring M1 line > 0um
    This rule isn't applicable for SRAM region
A: 
M1_S_17_V0_DFM1 {
@ Space between M1 line and (V0 or V1) enclosed by dense M1 line-end (when PRL (L1) > -0.025um; E <= 0.045um) >= 0.117um
@ Dense M1 line end definition: (W+S) < 0.11um, the PRL (L2) of (V0 or V1) and neighboring M1 line > 0um
@ This rule isn't applicable for SRAM region
 v0_lend_enc = ENC [V0] M1_end <= 0.045 ABUT<90 OPPOSITE
 v0_lend_enc_e = V0 WITH EDGE v0_lend_enc
 v0_lend_full_e = v0_lend_enc_e TOUCH EDGE v0_lend_enc
 v0_lend_full_c = v0_lend_enc_e TOUCH EDGE (INT v0_lend_full_e [v0_lend_enc_e] < 0.005 ABUT==90)

 v0_side_met_s = EXT v0_lend_full_c M1 < 0.11-V0_MiniWidth OPPOSITE MEASURE ALL
 v0_side_met_e = M1 TOUCH EDGE (DFM COPY v0_side_met_s EDGE)
 v0_side_met_e_o = EXT M1_line v0_side_met_e < 0.005 ABUT INTERSECTING ONLY
 v0_side_met_e_c = v0_side_met_e TOUCH EDGE (DFM COPY v0_side_met_e_o EDGE)
 v0_side_met_s_c = EXT v0_lend_full_c v0_side_met_e_c < 0.11-V0_MiniWidth OPPOSITE MEASURE ALL
 v0_side_met = M1 TOUCH EDGE ((DFM COPY v0_side_met_e_o EDGE) NOT TOUCH EDGE v0_side_met_e)
 v0_real_met = v0_lend_full_e TOUCH EDGE (v0_lend_enc_e WITH EDGE (DFM COPY v0_side_met_s_c EDGE))
 err1 = EXT v0_real_met v0_side_met < 0.117 ABUT<90 REGION MEASURE ALL OPPOSITE EXTENDED 0.025
 err1 NOT INSIDE INST
}

Q: Space between M1 line and (V0 or V1) enclosed by dense M1 line-end (when PRL (L1) > -0.025um; E <= 0.045um) >= 0.117um
    Dense M1 line end definition: (W+S) < 0.11um, the PRL (L2) of (V0 or V1) and neighboring M1 line > 0um
    This rule isn't applicable for SRAM region
A: 
M1_S_17_V1_DFM1 {
@ Space between M1 line and (V0 or V1) enclosed by dense M1 line-end (when PRL (L1) > -0.025um; E <= 0.045um) >= 0.117um
@ Dense M1 line end definition: (W+S) < 0.11um, the PRL (L2) of (V0 or V1) and neighboring M1 line > 0um
@ This rule isn't applicable for SRAM region
 v1_lend_enc = ENC [V1] M1_end <= 0.045 ABUT<90 OPPOSITE
 v1_lend_enc_e = V1 WITH EDGE v1_lend_enc
 v1_lend_full_e = v1_lend_enc_e TOUCH EDGE v1_lend_enc
 v1_lend_full_c = v1_lend_enc_e TOUCH EDGE (INT v1_lend_full_e [v1_lend_enc_e] < 0.005 ABUT==90)

 v1_side_met_s = EXT v1_lend_full_c M1 < 0.11-V1_MiniWidth OPPOSITE MEASURE ALL
 v1_side_met_e = M1 TOUCH EDGE (DFM COPY v1_side_met_s EDGE)
 v1_side_met_e_o = EXT M1_line v1_side_met_e < 0.005 ABUT INTERSECTING ONLY
 v1_side_met_e_c = v1_side_met_e TOUCH EDGE (DFM COPY v1_side_met_e_o EDGE)
 v1_side_met_s_c = EXT v1_lend_full_c v1_side_met_e_c < 0.11-V1_MiniWidth OPPOSITE MEASURE ALL
 v1_side_met = M1 TOUCH EDGE ((DFM COPY v1_side_met_e_o EDGE) NOT TOUCH EDGE v1_side_met_e)
 v1_real_met = v1_lend_full_e TOUCH EDGE (v1_lend_enc_e WITH EDGE (DFM COPY v1_side_met_s_c EDGE))
 err1 = EXT v1_real_met v1_side_met < 0.117 ABUT<90 REGION MEASURE ALL OPPOSITE EXTENDED 0.025
 err1 NOT INSIDE INST
}

Q: Recommended M1 forbidden zone of ((W1+S1+W2+S2) or (S1+W2+S2+W3)) = 0.14~0.159um
    When M1 width is < 0.037um
    DRC flags edge of forbidden zone, and waive the violation in same polygon
A: 
M1_S_19_DFM1 {
@ Recommended M1 forbidden zone of ((W1+S1+W2+S2) or (S1+W2+S2+W3)) = 0.14~0.159um
@ When M1 width is < 0.037um
@ DRC flags edge of forbidden zone, and waive the violation in same polygon
 M1_NOTCH = EXT [M1] <= 0.159+GLOBAL_TOLERANCE-2*M1_MiniWidth-M1_MiniSpace
 M1_NOTCH_A = EXT (M1_v_edges COIN EDGE M1_NOTCH) <= 0.159+GLOBAL_TOLERANCE-2*M1_MiniWidth ABUT<90 OPPOSITE PARA ONLY NOTCH REGION EXCLUDE SHIELDED
 M1_NOTCH_A_all = M1_v_edges OR EDGE (M1_NOTCH_A COIN EDGE M1_v_edges)
 M1_ERR_P1 = DFM SPACE M1_NOTCH_A_all M1_width_lt_037_opp_edges >= 0.140 <= 0.159 BY ENC MEASURE ALL COUNT == 3 BY LAYER M1_NOTCH_A_all
 M1_ERR_P2 = DFM SPACE M1_width_lt_037_opp_edges M1_NOTCH_A_all >= 0.140 <= 0.159 BY ENC MEASURE ALL COUNT == 3 BY LAYER M1_NOTCH_A_all
 err1 = DFM PROPERTY M1_ERR_P1 M1_COLORA M1_COLORB M1_width_lt_037_opp_edges OVERLAP ABUT ALSO MULTI
  [+= count(M1_width_lt_037_opp_edges)] > 0
  [-= (EC(M1_ERR_P1) > 0 && (count(M1_COLORA) > 1 || count(M1_COLORB) > 1 || count(M1_COLORA) == 0 || count(M1_COLORB) == 0)) ? 1 : 0 ] > 0
 err2 = DFM PROPERTY M1_ERR_P2 M1_COLORA M1_COLORB M1_width_lt_037_opp_edges OVERLAP ABUT ALSO MULTI
  [+= count(M1_width_lt_037_opp_edges)] > 0
  [-= (EC(M1_ERR_P2) > 0 && (count(M1_COLORA) > 1 || count(M1_COLORB) > 1 || count(M1_COLORA) == 0 || count(M1_COLORB) == 0)) ? 1 : 0 ] > 0
 DFM COPY err1 err2

 M1_NOTCH_B = EXT (M1_h_edges COIN EDGE M1_NOTCH) <= 0.159+GLOBAL_TOLERANCE-2*M1_MiniWidth ABUT<90 OPPOSITE PARA ONLY NOTCH REGION EXCLUDE SHIELDED
 M1_NOTCH_B_all = M1_h_edges OR EDGE (M1_NOTCH_B COIN EDGE M1_h_edges)
 M1_ERR_P3 = DFM SPACE M1_NOTCH_B_all M1_width_lt_037_opp_edges >= 0.140 <= 0.159 BY ENC MEASURE ALL COUNT == 3 BY LAYER M1_NOTCH_B_all
 M1_ERR_P4 = DFM SPACE M1_width_lt_037_opp_edges M1_NOTCH_B_all >= 0.140 <= 0.159 BY ENC MEASURE ALL COUNT == 3 BY LAYER M1_NOTCH_B_all
 err3 = DFM PROPERTY M1_ERR_P3 M1_COLORA M1_COLORB M1_width_lt_037_opp_edges OVERLAP ABUT ALSO MULTI
  [+= count(M1_width_lt_037_opp_edges)] > 0
  [-= (EC(M1_ERR_P3) > 0 && (count(M1_COLORA) > 1 || count(M1_COLORB) > 1 || count(M1_COLORA) == 0 || count(M1_COLORB) == 0)) ? 1 : 0 ] > 0
 err4 = DFM PROPERTY M1_ERR_P4 M1_COLORA M1_COLORB M1_width_lt_037_opp_edges OVERLAP ABUT ALSO MULTI
  [+= count(M1_width_lt_037_opp_edges)] > 0
  [-= (EC(M1_ERR_P4) > 0 && (count(M1_COLORA) > 1 || count(M1_COLORB) > 1 || count(M1_COLORA) == 0 || count(M1_COLORB) == 0)) ? 1 : 0 ] > 0
 DFM COPY err3 err4
}

Q: Space between M1 outside vertex (M1 line-end outer vertex or L-shape outer vertex) and nearby L-shape inner vertex >= 0.047um
    DRC flag if both projection space < 0.036um
A: 
M1_S_35_DFM1 {
@ Space between M1 outside vertex (M1 line-end outer vertex or L-shape outer vertex) and nearby L-shape inner vertex >= 0.047um
@ DRC flag if both projection space < 0.036um
 Y1 = (EXT [M1_v_edges] < 0.036 ABUT<90 OPPOSITE EXTENDED 0.047) OR EDGE (EXT [M1_h_edges] < 0.036 ABUT<90 OPPOSITE EXTENDED 0.047)
 Y2 = EXT M1_convex_corner M1_concave_corner < 0.047 ABUT<90

 err1_a = INT Y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_b = EXT Y1 < 0.001 ABUT==90 INTERSECTING ONLY
 err1_c = DFM PROPERTY Y2 err1_a err1_b ABUT ALSO OVERLAP MULTI [-= (count(err1_a) > 0 && count(err1_b) > 0) ? 1 : 0] > 0
 err1 = DFM COPY err1_c REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between two M1s, except LOGO region >= 0.032um
A: 
M1_S_1 {
@ Space between two M1s, except LOGO region >= 0.032um
 err1 = EXT M1 < 0.032 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE LOGO
}

Q: Space between two M1s when one or both M1 enclosure of long side edge of RV0 < 0.005um
    DRC flag the space between M1 and the long sides of RV0 >= 0.035um
A: 
M1_S_2 {
@ Space between two M1s when one or both M1 enclosure of long side edge of RV0 < 0.005um
@ DRC flag the space between M1 and the long sides of RV0 >= 0.035um
 err1_c = ENC RV0_L [M1] < 0.005 ABUT<90 OPPOSITE
 err1 = EXT err1_c M1 < 0.035 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between two M1s when one or both M1 enclosure of long side edge of RV0 < 0.003um
    DRC flag the space between M1 and the long sides of RV0 >= 0.044um
A: 
M1_S_3 {
@ Space between two M1s when one or both M1 enclosure of long side edge of RV0 < 0.003um
@ DRC flag the space between M1 and the long sides of RV0 >= 0.044um
 err1_c = ENC RV0_L [M1] < 0.003 ABUT<90 OPPOSITE
 err1 = EXT err1_c M1 < 0.044 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}


Q: 45-degree bent M1 space to M1 >= 0.152um
A: 
M1_S_6 {
@ 45-degree bent M1 space to M1 >= 0.152um
 err1 = OR (EXT M1_45_skew_edges M1 < 0.152 ABUT<90 OPPOSITE REGION) (EXT M1_45_skew_edges M1 < 0.152 ABUT<90 OPPOSITE1 REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between M1 when one or both M1 width >= 0.091um when PRL >= 0.141um. = 0.041~0.057, >= 0.072um
A: 
M1_S_7 {
@ Space between M1 when one or both M1 width >= 0.091um when PRL >= 0.141um. = 0.041~0.057, >= 0.072um
 met_wid_all = M1 WITH WIDTH >= 0.091
 met_err_RAW = (EXT [met_wid_all] M1 < 0.041 ABUT<90 OPPOSITE MEASURE ALL) OR EDGE (EXT [met_wid_all] M1 >= 0.058 < 0.072 ABUT<90 OPPOSITE MEASURE ALL)
 met_jog_ALL = (CONVEX EDGE M1 == 1) NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M1
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] > 0.141-GLOBAL_TOLERANCE
 met_err_EGE = met_err_RAW TOUCH EDGE met_err_PRL
 err1 = (EXT met_err_EGE M1 < 0.041 ABUT<90 OPPOSITE REGION MEASURE ALL) OR (EXT met_err_EGE M1 >= 0.058 < 0.072 ABUT<90 OPPOSITE REGION MEASURE ALL)
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between M1 when one or both M1 width >= 0.121um when PRL >= 0.141um, except OCOVL region = 0.041~0.057, >= 0.106um
A: 
M1_S_8 {
@ Space between M1 when one or both M1 width >= 0.121um when PRL >= 0.141um, except OCOVL region = 0.041~0.057, >= 0.106um
 met_wid_all = M1 WITH WIDTH >= 0.121
 met_err_RAW = (EXT [met_wid_all] M1 < 0.041 ABUT<90 OPPOSITE MEASURE ALL) OR EDGE (EXT [met_wid_all] M1 >= 0.058 < 0.106 ABUT<90 OPPOSITE MEASURE ALL)
 met_jog_ALL = (CONVEX EDGE M1 == 1) NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M1
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] > 0.141-GLOBAL_TOLERANCE
 met_err_EGE = met_err_RAW TOUCH EDGE met_err_PRL
 err1 = (EXT met_err_EGE M1 < 0.041 ABUT<90 OPPOSITE REGION MEASURE ALL) OR (EXT met_err_EGE M1 >= 0.058 < 0.106 ABUT<90 OPPOSITE REGION MEASURE ALL)
 err1 NOT INSIDE OCOVL
}

Q:  Space between M1 when one or both M1 width >= 0.181um when PRL >= 0.189um. >= 0.125um
A: 
M1_S_9 {
@ Space between M1 when one or both M1 width >= 0.181um when PRL >= 0.189um. >= 0.125um
 met_wid_all = M1 WITH WIDTH >= 0.181
 met_err_RAW = EXT M1 met_wid_all < 0.125 OPPOSITE REGION MEASURE ALL
 met_err_CRN = EXT (ANGLE M1 > 44 < 46) met_wid_all < 0.125 OPPOSITE1 REGION MEASURE ALL
 err1 = met_err_RAW ENCLOSE RECTANGLE 0.001 0.189 ORTHOGONAL ONLY
 err2 = met_err_CRN ENCLOSE RECTANGLE 0.032 0.189
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between M1 when one or both M1 width >= 0.271um when PRL >= 0.289um. >= 0.143um
A: 
M1_S_10 {
@ Space between M1 when one or both M1 width >= 0.271um when PRL >= 0.289um. >= 0.143um
 met_wid_all = M1 WITH WIDTH >= 0.271
 met_err_RAW = EXT M1 met_wid_all < 0.143 OPPOSITE REGION MEASURE ALL
 met_err_CRN = EXT (ANGLE M1 > 44 < 46) met_wid_all < 0.143 OPPOSITE1 REGION MEASURE ALL
 err1 = met_err_RAW ENCLOSE RECTANGLE 0.001 0.289 ORTHOGONAL ONLY
 err2 = met_err_CRN ENCLOSE RECTANGLE 0.032 0.289
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M1 when one or both M1 width >= 0.542um, except LOGO region >= 0.188um
A: 
M1_S_11 {
@ Space between M1 when one or both M1 width >= 0.542um, except LOGO region >= 0.188um
 met_wid = M1 WITH WIDTH >= 0.542
 err1 = EXT met_wid M1 < 0.188 ABUT<90 REGION
 err1 NOT INSIDE LOGO
}

Q: Space between M1 when one or both M1 width >= 1.36um, except LOGO region >= 0.305um
A: 
M1_S_12 {
@ Space between M1 when one or both M1 width >= 1.36um, except LOGO region >= 0.305um
 met_wid = (M1 WITH WIDTH >= 0.542) WITH WIDTH >= 1.36
 err1 = EXT met_wid M1 < 0.305 ABUT<90 REGION
 err1 NOT INSIDE LOGO
}

Q: Space between M1 and M1 line-end (width < 0.046um) when PRL > -0.016um. >= 0.049um
A: 
M1_S_13 {
@ Space between M1 and M1 line-end (width < 0.046um) when PRL > -0.016um. >= 0.049um
 err1 = EXT M1 M1_end_0.046 < 0.049 ABUT<90 OPPOSITE EXTENDED 0.016 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between M1 line-end and line-end (width < 0.046um) when PRL > -0.016um, except INST region >= 0.058um
A: 
M1_S_14 {
@ Space between M1 line-end and line-end (width < 0.046um) when PRL > -0.016um, except INST region >= 0.058um
 err1 = EXT M1_end_0.046 < 0.058 ABUT<90 OPPOSITE EXTENDED 0.016 REGION
 err1 NOT INSIDE INST
}

Q:  Space between M1 and dense M1 line-end (width < 0.046um, neighboring edge >= 0.048um), when PRL > -0.016um, except INST region >= 0.069um
     Dense M1 line end definition:
     (W+S1) < 0.09um, other metal must be in the region R, T and D is the extension from metal line end, T < 0.016um, D < 0.048um, S1 should be the space between separate metal.
     (Except small jog with edge length < 0.032um)
A: 
M1_S_15 {
@ Space between M1 and dense M1 line-end (width < 0.046um, neighboring edge >= 0.048um), when PRL > -0.016um, except INST region >= 0.069um
@ Dense M1 line end definition:
@ (W+S1) < 0.09um, other metal must be in the region R, T and D is the extension from metal line end, T < 0.016um, D < 0.048um, S1 should be the space between separate metal.
@ (Except small jog with edge length < 0.032um)
 end_check_TMP = CONVEX EDGE M1 ANGLE1 == 90 LENGTH1 >= 0.048 ANGLE2 == 90 LENGTH2 >= 0.048 WITH LENGTH < 0.046
 end_space_TMP = EXT end_check_TMP M1 < 0.069 ABUT<90 OPPOSITE EXTENDED 0.016 REGION
 end_space_EGE = end_check_TMP TOUCH EDGE end_space_TMP
 end_inner_EXD = EXPAND EDGE end_space_EGE INSIDE BY 0.048 OUTSIDE BY 0.016
 end_sides_EGE = (end_inner_EXD TOUCH EDGE M1) NOT COIN EDGE end_check_TMP
 // 
 end_sides_ERR = EXT end_sides_EGE M1 < 0.09-0.032 OPPOSITE
 end_width_ERR = INT end_inner_EXD < 0.046 OPPOSITE EXCLUDE SHIELDED
 end_sides_CHK = DFM PROPERTY end_sides_EGE end_sides_ERR end_width_ERR OVERLAP ABUT ALSO MULTI [-= MIN(EW(end_sides_ERR)) + MIN(EW(end_width_ERR))] < 0.09
 end_check_EXD = (end_inner_EXD AND M1) WITH EDGE end_sides_CHK
 end_check = end_space_EGE TOUCH EDGE end_check_EXD
 err1 = EXT end_check M1 < 0.069 ABUT<90 OPPOSITE EXTENDED 0.016 REGION
 err1 NOT INSIDE INST
}

M1_line_end_046_054_edges = CONVEX EDGE M1 == 2 WITH LENGTH >= 0.046 <= 0.054
M1_line_end_046_054_prl_gt_135 = INT (M1_line_end_046_054_edges) M1 < 0.135 OPPOSITE EXCLUDE SHIELDED
M1_line_end_046_054_prl_gt_135_all = M1_line_end_046_054_edges TOUCH EDGE M1_line_end_046_054_prl_gt_135

Q: Space between M1 and M1 line-end space in metal array >= 0.072um
     Metal array definition:
    1) M1 width (W): 0.046um <= W <= 0.054um
    2) M1 length (L) >= 0.135um
    3) Searching distance (D) of M1 line-end edge: 0.048um
    4) M1 space (S1) 0.058um <= S1 <= 0.076um for both long sides
    5) M1 PRL > 0um for short side (L1)
    6) Line end space (S2) of both neighboring M1: 0.058um <= S2 <= 0.076um with PRL > 0um
    DRC doesn't flag at least one S1 >= 0.058~ <= 0.063um with PRL > 0.112um. And DRC flags forbidden space that has PRL > 0um with both S2
A: 
M1_S_16 {
@ Space between M1 and M1 line-end space in metal array >= 0.072um
@ Metal array definition:
@ 1) M1 width (W): 0.046um <= W <= 0.054um
@ 2) M1 length (L) >= 0.135um
@ 3) Searching distance (D) of M1 line-end edge: 0.048um
@ 4) M1 space (S1) 0.058um <= S1 <= 0.076um for both long sides
@ 5) M1 PRL > 0um for short side (L1)
@ 6) Line end space (S2) of both neighboring M1: 0.058um <= S2 <= 0.076um with PRL > 0um
@ DRC doesn't flag at least one S1 >= 0.058~ <= 0.063um with PRL > 0.112um. And DRC flags forbidden space that has PRL > 0um with both S2
 distance_D_M = EXPAND EDGE M1_line_end_046_054_prl_gt_135_all INSIDE BY 0.048
 distance_D_W = (distance_D_M AND M1) COIN EDGE M1_line_end_046_054_prl_gt_135_all  //; W edge
 distance_D_W_edge = EXT [distance_D_W] M1 >= 0.058 <= 0.076 ABUT<90 OPPOSITE
 distance_D_W_058_076 = distance_D_W TOUCH EDGE distance_D_W_edge

//;for 58~63 region: exclude special orcs.2 dp shape
 distance_D_seg_twin = (EXPAND EDGE distance_D_W_058_076 INSIDE BY 0.112+0.048 EXTEND BY 0.054-0.046) AND (INT M1 >= 0.046 <= 0.054 OPPOSITE REGION)
 distance_D_seg_twin_l_sides = (distance_D_seg_twin NOT TOUCH EDGE distance_D_W_058_076) NOT INSIDE EDGE M1
 distance_D_seg_twin_l_sides_real = distance_D_seg_twin_l_sides NOT TOUCH EDGE (INT [distance_D_seg_twin_l_sides] distance_D_W_058_076 <= 0.112 + 0.048 ABUT<90 OPPOSITE)

 distance_D_side_058_062_space = EXT distance_D_seg_twin_l_sides_real >= 0.058 <= 0.062 ABUT<90 OPPOSITE REGION
 distance_D_side_058_062_space_orcs = distance_D_side_058_062_space NOT ENCLOSE RECTANGLE 0.005 0.112+GLOBAL_TOLERANCE ORTHOGONAL ONLY
 distance_D_side_058_062_edges = distance_D_seg_twin_l_sides_real COIN EDGE distance_D_side_058_062_space_orcs
 distance_D_side_058_062_both = INT distance_D_side_058_062_edges >= 0.046 <= 0.054 ABUT<90 OPPOSITE REGION

//;for 63~76 region
 distance_D_side_063_076_edges = EXT [distance_D_seg_twin_l_sides_real] >= 0.063 <= 0.076 ABUT<90 OPPOSITE
 distance_D_side_063_076 = INT distance_D_side_063_076_edges >= 0.046 <= 0.054 ABUT<90 OPPOSITE REGION
 distance_D_side_058_076 = distance_D_side_058_062_both OR distance_D_side_063_076  //;all 058~062,063~076

 distance_D_seg_midd_part = M1 AND (EXPAND EDGE distance_D_W_058_076 INSIDE BY 0.112 + 0.048 EXTEND BY -0.01)
 distance_D_seg_side_part = distance_D_seg_twin NOT distance_D_seg_midd_part
 distance_D_seg_side_part_c = distance_D_seg_side_part INTERACT distance_D_side_058_076
 distance_D_seg_midd_part_c = distance_D_seg_midd_part INTERACT distance_D_seg_side_part_c >= 2
 distance_D_seg_twin_058_076_c = (distance_D_seg_twin INTERACT distance_D_side_058_076) INTERACT distance_D_seg_midd_part_c

 distance_D_seg_twin_opp = INT distance_D_seg_twin_058_076_c <= 0.112 + 0.048 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 distance_D_seg_twin_opp_ew = DFM PROPERTY distance_D_seg_twin_opp distance_D_seg_twin_058_076_c OVERLAP ABUT ALSO MULTI
 [max_ew = ew(distance_D_seg_twin_opp)] >= 0.135
 [cal_ew = (property_ref(max_ew) == ew(distance_D_seg_twin_opp)) ? 1 : 0] > 0

 distance_D_sp1 = distance_D_seg_twin_058_076_c NOT COIN EDGE (DFM COPY distance_D_seg_twin_opp_ew EDGE)
 distance_D_sp2 = (EXPAND EDGE distance_D_sp1 INSIDE BY 0.002 CORNER FILL) INTERACT distance_D_side_058_076
 distance_D_sp3 = distance_D_W_058_076 COIN EDGE (distance_D_seg_twin_058_076_c INTERACT distance_D_sp2 >= 2)

 distance_D_sp_forbidden = EXT distance_D_sp3 M1 < 0.072 ABUT<90 OPPOSITE REGION
 distance_D_sp_forbidden_ove = EXPAND EDGE (distance_D_W_058_076 TOUCH EDGE distance_D_sp_forbidden) OUTSIDE BY 0.005
 distance_D_sp_forbidden_all = EXTENTS (OR distance_D_sp_forbidden distance_D_sp_forbidden_ove)
 distance_D_sp_forbidden_side = distance_D_sp_forbidden_all NOT TOUCH EDGE M1
 distance_D_sp_forbidden_side_prl = EXT (distance_D_sp_forbidden_side) M1 >= 0.058 <= 0.076 ABUT<90 OPPOSITE
 distance_D_sp_forbidden_side_prl_both = distance_D_sp_forbidden_all WITH EDGE distance_D_sp_forbidden_side_prl >= 2
 err1 = distance_D_sp_forbidden AND distance_D_sp_forbidden_side_prl_both  //; flag error region has prl with the beside error region
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: M1 forbidden space when one M1 width >= 0.15um and PRL > 0.135um, except M1 jog width <= 0.135um. = 0.058~0.062um
    DRC searching range is from 0.106um to 0.729um
    DRC flags the forbidden space that totally inside the searching range along the space direction, and the PRL between forbidden space and the wide metal is > 0.135um
A: 
M1_S_18 {
@ M1 forbidden space when one M1 width >= 0.15um and PRL > 0.135um, except M1 jog width <= 0.135um. = 0.058~0.062um
@ DRC searching range is from 0.106um to 0.729um
@ DRC flags the forbidden space that totally inside the searching range along the space direction, and the PRL between forbidden space and the wide metal is > 0.135um
 SPACE_Forbidden_PRE = EXT M1 >= 0.058 <= 0.062 ABUT<90 OPPOSITE REGION
 SPACE_Forbidden_TMP = SPACE_Forbidden_PRE ENCLOSE RECTANGLE 0.001 0.135+GLOBAL_TOLERANCE ORTHOGONAL ONLY
 SPACE_Forbidden_TMP_in_SearchR = EXT (M1 COIN EDGE SPACE_Forbidden_TMP) met_wide_eqgt_150 >= 0.106 <= 0.729 ABUT>0<90 OPPOSITE MEASURE ALL
 SPACE_Forbidden_TMP_in_SearchR_EDGE = M1 COIN EDGE (DFM COPY SPACE_Forbidden_TMP_in_SearchR EDGE)
 SPACE_Forbidden_real = EXT SPACE_Forbidden_TMP_in_SearchR_EDGE M1 >= 0.058 <= 0.062 ABUT<90 OPPOSITE REGION
 err1 = ENCLOSE RECTANGLE SPACE_Forbidden_real 0.001 0.135+GLOBAL_TOLERANCE ORTHOGONAL ONLY
 err1 NOT INSIDE SealR_NOT_BULK
}

#IFDEF DOUBLE_PATTERNING_RULES_CHECK YES
#IFDEF DOUBLE_PATTERNING_RULES_CHECK_ONLY YES
DRC SELECT CHECK M1_S_19 M1_S_20
#ENDIF
M1_a = M1 INTERACT M1_mask0
M1_b = M1 INTERACT M1_mask1
M1_a_v_edges = M1_v_edges TOUCH EDGE M1_a
M1_b_v_edges = M1_v_edges TOUCH EDGE M1_b
M1_a_h_edges = M1_h_edges TOUCH EDGE M1_a
M1_b_h_edges = M1_h_edges TOUCH EDGE M1_b
M1_a_width_lt_037_opp_edges = M1_width_lt_037_opp_edges COIN EDGE M1_a
M1_b_width_lt_037_opp_edges = M1_width_lt_037_opp_edges COIN EDGE M1_b
M1_a_width_lt_034_opp_edges = M1_width_lt_034_opp_edges COIN EDGE M1_a
M1_b_width_lt_034_opp_edges = M1_width_lt_034_opp_edges COIN EDGE M1_b

Q: M1 forbidden space for single mask when M1 width < 0.037um and PRL with neighboring M1 (W3) > 0.117um
    DRC flags edge of ((W1+S1+W2+S2) or (S1+W2+S2+W3)) = 0.141~0.159um
    DRC waive when:
    (1) A/B or B/C are same polygons
    (2) A/C in different masks
    (3) INST region
A: 
M1_S_19 {
@ M1 forbidden space for single mask when M1 width < 0.037um and PRL with neighboring M1 (W3) > 0.117um
@ DRC flags edge of ((W1+S1+W2+S2) or (S1+W2+S2+W3)) = 0.141~0.159um
@ DRC waive when:
@ (1) A/B or B/C are same polygons
@ (2) A/C in different masks
@ (3) INST region
 M1_NOTCH = EXT [M1] <= 0.159+GLOBAL_TOLERANCE-2*M1_MiniWidth-M1_MiniSpace ABUT<90 OPPOSITE
 M1_NOTCH_A = EXT (M1_v_edges COIN EDGE M1_NOTCH) <= 0.159+GLOBAL_TOLERANCE-2*M1_MiniWidth ABUT<90 OPPOSITE PARA ONLY NOTCH REGION EXCLUDE SHIELDED
 M1_NOTCH_A_all = M1_v_edges OR EDGE (M1_NOTCH_A COIN EDGE M1_v_edges)
 M1_ERR_P1 = DFM SPACE M1_NOTCH_A_all M1_width_lt_037_opp_edges >= 0.141 <= 0.159 BY ENC MEASURE ALL COUNT == 3 BY LAYER M1_NOTCH_A_all
 M1_ERR_P2 = DFM SPACE M1_width_lt_037_opp_edges M1_NOTCH_A_all >= 0.141 <= 0.159 BY ENC MEASURE ALL COUNT == 3 BY LAYER M1_NOTCH_A_all
 err1 = DFM PROPERTY M1_ERR_P1 M1_COLORA M1_COLORB M1_width_lt_037_opp_edges INST M1_a_v_edges M1_b_v_edges OVERLAP ABUT ALSO MULTI
  [s = count(INST)] == 0
  [+= (count(M1_width_lt_037_opp_edges) > 0 && (count(M1_a_v_edges) == 0 || count(M1_b_v_edges) == 0)) ? 1 : 0] > 0
  [-= (EC(M1_ERR_P1) > 0.117 && (count(M1_COLORA) > 1 || count(M1_COLORB) > 1 || count(M1_COLORA) == 0 || count(M1_COLORB) == 0)) ? 1 : 0 ] > 0
 err2 = DFM PROPERTY M1_ERR_P2 M1_COLORA M1_COLORB M1_width_lt_037_opp_edges INST M1_a_v_edges M1_b_v_edges OVERLAP ABUT ALSO MULTI
  [s = count(INST)] == 0
  [+= (count(M1_width_lt_037_opp_edges) > 0 && (count(M1_a_v_edges) == 0 || count(M1_b_v_edges) == 0)) ? 1 : 0] > 0
  [-= (EC(M1_ERR_P2) > 0.117 && (count(M1_COLORA) > 1 || count(M1_COLORB) > 1 || count(M1_COLORA) == 0 || count(M1_COLORB) == 0)) ? 1 : 0 ] > 0

 err3 = DFM PROPERTY M1_ERR_P1 M1_COLORA M1_COLORB M1_width_lt_037_opp_edges DRC:1_NOT_INST M1_a_v_edges M1_b_v_edges OVERLAP ABUT ALSO MULTI
  [s = count(DRC:1_NOT_INST)] > 0
  [+= (count(M1_width_lt_037_opp_edges) > 0 && (count(M1_a_v_edges) == 0 || count(M1_b_v_edges) == 0)) ? 1 : 0] > 0
  [-= (EC(M1_ERR_P1) > 0.117 && (count(M1_COLORA) > 1 || count(M1_COLORB) > 1 || count(M1_COLORA) == 0 || count(M1_COLORB) == 0)) ? 1 : 0 ] > 0
 err4 = DFM PROPERTY M1_ERR_P2 M1_COLORA M1_COLORB M1_width_lt_037_opp_edges DRC:1_NOT_INST M1_a_v_edges M1_b_v_edges OVERLAP ABUT ALSO MULTI
  [s = count(DRC:1_NOT_INST)] > 0
  [+= (count(M1_width_lt_037_opp_edges) > 0 && (count(M1_a_v_edges) == 0 || count(M1_b_v_edges) == 0)) ? 1 : 0] > 0
  [-= (EC(M1_ERR_P2) > 0.117 && (count(M1_COLORA) > 1 || count(M1_COLORB) > 1 || count(M1_COLORA) == 0 || count(M1_COLORB) == 0)) ? 1 : 0 ] > 0

 M1_NOTCH_B = EXT (M1_h_edges COIN EDGE M1_NOTCH) <= 0.159+GLOBAL_TOLERANCE-2*M1_MiniWidth ABUT<90 OPPOSITE PARA ONLY NOTCH REGION EXCLUDE SHIELDED
 M1_NOTCH_B_all = M1_h_edges OR EDGE (M1_NOTCH_B COIN EDGE M1_h_edges)
 M1_ERR_P3 = DFM SPACE M1_NOTCH_B_all M1_width_lt_037_opp_edges >= 0.141 <= 0.159 BY ENC MEASURE ALL COUNT == 3 BY LAYER M1_NOTCH_B_all
 M1_ERR_P4 = DFM SPACE M1_width_lt_037_opp_edges M1_NOTCH_B_all >= 0.141 <= 0.159 BY ENC MEASURE ALL COUNT == 3 BY LAYER M1_NOTCH_B_all
 err5 = DFM PROPERTY M1_ERR_P3 M1_COLORA M1_COLORB M1_width_lt_037_opp_edges INST M1_a_h_edges M1_b_h_edges OVERLAP ABUT ALSO MULTI
  [s = count(INST)] == 0
  [+= (count(M1_width_lt_037_opp_edges) > 0 && (count(M1_a_h_edges) == 0 || count(M1_b_h_edges) == 0)) ? 1 : 0] > 0
  [-= (EC(M1_ERR_P3) > 0.117 && (count(M1_COLORA) > 1 || count(M1_COLORB) > 1 || count(M1_COLORA) == 0 || count(M1_COLORB) == 0)) ? 1 : 0 ] > 0
 err6 = DFM PROPERTY M1_ERR_P4 M1_COLORA M1_COLORB M1_width_lt_037_opp_edges INST M1_a_h_edges M1_b_h_edges OVERLAP ABUT ALSO MULTI
  [s = count(INST)] == 0
  [+= (count(M1_width_lt_037_opp_edges) > 0 && (count(M1_a_h_edges) == 0 || count(M1_b_h_edges) == 0)) ? 1 : 0] > 0
  [-= (EC(M1_ERR_P4) > 0.117 && (count(M1_COLORA) > 1 || count(M1_COLORB) > 1 || count(M1_COLORA) == 0 || count(M1_COLORB) == 0)) ? 1 : 0 ] > 0

 err7 = DFM PROPERTY M1_ERR_P3 M1_COLORA M1_COLORB M1_width_lt_037_opp_edges DRC:1_NOT_INST M1_a_h_edges M1_b_h_edges OVERLAP ABUT ALSO MULTI
  [s = count(DRC:1_NOT_INST)] > 0
  [+= (count(M1_width_lt_037_opp_edges) > 0 && (count(M1_a_h_edges) == 0 || count(M1_b_h_edges) == 0)) ? 1 : 0] > 0
  [-= (EC(M1_ERR_P3) > 0.117 && (count(M1_COLORA) > 1 || count(M1_COLORB) > 1 || count(M1_COLORA) == 0 || count(M1_COLORB) == 0)) ? 1 : 0 ] > 0
 err8 = DFM PROPERTY M1_ERR_P4 M1_COLORA M1_COLORB M1_width_lt_037_opp_edges DRC:1_NOT_INST M1_a_h_edges M1_b_h_edges OVERLAP ABUT ALSO MULTI
  [s = count(DRC:1_NOT_INST)] > 0
  [+= (count(M1_width_lt_037_opp_edges) > 0 && (count(M1_a_h_edges) == 0 || count(M1_b_h_edges) == 0)) ? 1 : 0] > 0
  [-= (EC(M1_ERR_P4) > 0.117 && (count(M1_COLORA) > 1 || count(M1_COLORB) > 1 || count(M1_COLORA) == 0 || count(M1_COLORB) == 0)) ? 1 : 0 ] > 0
 DFM COPY err1 err2 err3 err4 err5 err6 err7 err8
}

Q: M1 forbidden space for single mask = 0.161~0.174um
    when
    1. M1 width < 0.034um and PRL with neighboring M1 (W2) > 0.117um
    2. M1 space: 0.032um <= S1 < 0.037um or 0.058um <= S1 < 0.068um, or 0.032um <= S3 < 0.037um or 0.058um <= S3 < 0.068um
    DRC flags edge of ((W1+S1+W2+S2) or (S1+W2+S2+W3)) = 0.161~0.174
    DRC waive when:
    (1) A/B or B/C are same polygons
    (2) A/C in different masks
    (3) INST region
A: 
M1_S_20 {
@ M1 forbidden space for single mask = 0.161~0.174um
@ when
@ 1. M1 width < 0.034um and PRL with neighboring M1 (W2) > 0.117um
@ 2. M1 space: 0.032um <= S1 < 0.037um or 0.058um <= S1 < 0.068um, or 0.032um <= S3 < 0.037um or 0.058um <= S3 < 0.068um
@ DRC flags edge of ((W1+S1+W2+S2) or (S1+W2+S2+W3)) = 0.161~0.174
@ DRC waive when:
@ (1) A/B or B/C are same polygons
@ (2) A/C in different masks
@ (3) INST region
 M1_NOTCH = EXT [M1] <= 0.174+GLOBAL_TOLERANCE-2*M1_MiniWidth-M1_MiniSpace ABUT<90 OPPOSITE
 M1_NOTCH_A = EXT (M1_v_edges COIN EDGE M1_NOTCH) <= 0.174+GLOBAL_TOLERANCE-2*M1_MiniSpace ABUT<90 OPPOSITE PARA ONLY NOTCH REGION EXCLUDE SHIELDED
 M1_NOTCH_A_all = M1_v_edges OR EDGE (M1_NOTCH_A COIN EDGE M1_v_edges)
 M1_ERR_P1 = DFM SPACE M1_NOTCH_A_all M1_width_lt_034_opp_edges >= 0.161 <= 0.174 BY ENC MEASURE ALL COUNT == 3 BY LAYER M1_NOTCH_A_all
 M1_ERR_P2 = DFM SPACE M1_width_lt_034_opp_edges M1_NOTCH_A_all >= 0.161 <= 0.174 BY ENC MEASURE ALL COUNT == 3 BY LAYER M1_NOTCH_A_all
 err1 = DFM PROPERTY M1_ERR_P1 M1_COLORA M1_COLORB M1_width_lt_034_opp_edges M1_oppo_space_s1_s3_edges INST M1_a_v_edges M1_b_v_edges OVERLAP ABUT ALSO MULTI
  [s = count(INST)] == 0
  [+= count(M1_width_lt_034_opp_edges)] > 0
  [p= (count(M1_oppo_space_s1_s3_edges) > 0 && (count(M1_a_v_edges) == 0 || count(M1_b_v_edges) == 0)) ? 1 : 0] > 0
  [-= (EC(M1_ERR_P1) > 0.117 && (count(M1_COLORA) > 1 || count(M1_COLORB) > 1 || count(M1_COLORA) == 0 || count(M1_COLORB) == 0)) ? 1 : 0 ] > 0
 err2 = DFM PROPERTY M1_ERR_P2 M1_COLORA M1_COLORB M1_width_lt_034_opp_edges M1_oppo_space_s1_s3_edges INST M1_a_v_edges M1_b_v_edges OVERLAP ABUT ALSO MULTI
  [s = count(INST)] == 0
  [+= count(M1_width_lt_034_opp_edges)] > 0
  [p= (count(M1_oppo_space_s1_s3_edges) > 0 && (count(M1_a_v_edges) == 0 || count(M1_b_v_edges) == 0)) ? 1 : 0] > 0
  [-= (EC(M1_ERR_P2) > 0.117 && (count(M1_COLORA) > 1 || count(M1_COLORB) > 1 || count(M1_COLORA) == 0 || count(M1_COLORB) == 0)) ? 1 : 0 ] > 0

 err3 = DFM PROPERTY M1_ERR_P1 M1_COLORA M1_COLORB M1_width_lt_034_opp_edges M1_oppo_space_s1_s3_edges DRC:1_NOT_INST M1_a_v_edges M1_b_v_edges OVERLAP ABUT ALSO MULTI
  [s = count(DRC:1_NOT_INST)] > 0
  [+= count(M1_width_lt_034_opp_edges)] > 0
  [p= (count(M1_oppo_space_s1_s3_edges) > 0 && (count(M1_a_v_edges) == 0 || count(M1_b_v_edges) == 0)) ? 1 : 0] > 0
  [-= (EC(M1_ERR_P1) > 0.117 && (count(M1_COLORA) > 1 || count(M1_COLORB) > 1 || count(M1_COLORA) == 0 || count(M1_COLORB) == 0)) ? 1 : 0 ] > 0
 err4 = DFM PROPERTY M1_ERR_P2 M1_COLORA M1_COLORB M1_width_lt_034_opp_edges M1_oppo_space_s1_s3_edges DRC:1_NOT_INST M1_a_v_edges M1_b_v_edges OVERLAP ABUT ALSO MULTI
  [s = count(DRC:1_NOT_INST)] > 0
  [+= count(M1_width_lt_034_opp_edges)] > 0
  [p= (count(M1_oppo_space_s1_s3_edges) > 0 && (count(M1_a_v_edges) == 0 || count(M1_b_v_edges) == 0)) ? 1 : 0] > 0
  [-= (EC(M1_ERR_P2) > 0.117 && (count(M1_COLORA) > 1 || count(M1_COLORB) > 1 || count(M1_COLORA) == 0 || count(M1_COLORB) == 0)) ? 1 : 0 ] > 0

 M1_NOTCH_B = EXT (M1_h_edges COIN EDGE M1_NOTCH) <= 0.174+GLOBAL_TOLERANCE-2*M1_MiniWidth ABUT<90 OPPOSITE PARA ONLY NOTCH REGION EXCLUDE SHIELDED
 M1_NOTCH_B_all = M1_h_edges OR EDGE (M1_NOTCH_B COIN EDGE M1_h_edges)
 M1_ERR_P3 = DFM SPACE M1_NOTCH_B_all M1_width_lt_034_opp_edges >= 0.161 <= 0.174 BY ENC MEASURE ALL COUNT == 3 BY LAYER M1_NOTCH_B_all
 M1_ERR_P4 = DFM SPACE M1_width_lt_034_opp_edges M1_NOTCH_B_all >= 0.161 <= 0.174 BY ENC MEASURE ALL COUNT == 3 BY LAYER M1_NOTCH_B_all
 err5 = DFM PROPERTY M1_ERR_P3 M1_COLORA M1_COLORB M1_width_lt_034_opp_edges M1_oppo_space_s1_s3_edges M1_a_h_edges M1_b_h_edges INST OVERLAP ABUT ALSO MULTI
  [s = count(INST)] == 0
  [+= count(M1_width_lt_034_opp_edges)] > 0
  [p= (count(M1_oppo_space_s1_s3_edges) > 0 && (count(M1_a_h_edges) == 0 || count(M1_b_h_edges) == 0)) ? 1 : 0] > 0
  [-= (EC(M1_ERR_P3) > 0.117 && (count(M1_COLORA) > 1 || count(M1_COLORB) > 1 || count(M1_COLORA) == 0 || count(M1_COLORB) == 0)) ? 1 : 0 ] > 0
 err6 = DFM PROPERTY M1_ERR_P4 M1_COLORA M1_COLORB M1_width_lt_034_opp_edges M1_oppo_space_s1_s3_edges INST M1_a_h_edges M1_b_h_edges OVERLAP ABUT ALSO MULTI
  [s = count(INST)] == 0
  [+= count(M1_width_lt_034_opp_edges)] > 0
  [p= (count(M1_oppo_space_s1_s3_edges) > 0 && (count(M1_a_h_edges) == 0 || count(M1_b_h_edges) == 0)) ? 1 : 0] > 0
  [-= (EC(M1_ERR_P4) > 0.117 && (count(M1_COLORA) > 1 || count(M1_COLORB) > 1 || count(M1_COLORA) == 0 || count(M1_COLORB) == 0)) ? 1 : 0 ] > 0

 err7 = DFM PROPERTY M1_ERR_P3 M1_COLORA M1_COLORB M1_width_lt_034_opp_edges M1_oppo_space_s1_s3_edges DRC:1_NOT_INST M1_a_h_edges M1_b_h_edges OVERLAP ABUT ALSO MULTI
  [s = count(DRC:1_NOT_INST)] > 0
  [+= count(M1_width_lt_034_opp_edges)] > 0
  [p= (count(M1_oppo_space_s1_s3_edges) > 0 && (count(M1_a_h_edges) == 0 || count(M1_b_h_edges) == 0)) ? 1 : 0] > 0
  [-= (EC(M1_ERR_P3) > 0.117 && (count(M1_COLORA) > 1 || count(M1_COLORB) > 1 || count(M1_COLORA) == 0 || count(M1_COLORB) == 0)) ? 1 : 0 ] > 0
 err8 = DFM PROPERTY M1_ERR_P4 M1_COLORA M1_COLORB M1_width_lt_034_opp_edges M1_oppo_space_s1_s3_edges DRC:1_NOT_INST M1_a_h_edges M1_b_h_edges OVERLAP ABUT ALSO MULTI
  [s = count(DRC:1_NOT_INST)] > 0
  [+= count(M1_width_lt_034_opp_edges)] > 0
  [p= (count(M1_oppo_space_s1_s3_edges) > 0 && (count(M1_a_h_edges) == 0 || count(M1_b_h_edges) == 0)) ? 1 : 0] > 0
  [-= (EC(M1_ERR_P4) > 0.117 && (count(M1_COLORA) > 1 || count(M1_COLORB) > 1 || count(M1_COLORA) == 0 || count(M1_COLORB) == 0)) ? 1 : 0 ] > 0
  DFM COPY err1 err2 err3 err4 err5 err6 err7 err8
}
#ENDIF

//M2
Q: Recommend Mxy space to reduce the short possibility, except MOMDMY region >= 0.044um
A: 
M2_S_1_DFM1 {
@ Recommend Mxy space to reduce the short possibility, except MOMDMY region >= 0.044um
 err1 = EXT M2 < 0.044 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE MOMDMY
}
 
chk_M2_070 = M2 WITH WIDTH > 0.07
chk_M2_088 = chk_M2_070 WITH WIDTH > 0.088
chk_M2_112 = chk_M2_088 WITH WIDTH > 0.112
chk_M2_180 = chk_M2_112 WITH WIDTH > 0.180
chk_M2_270 = chk_M2_180 WITH WIDTH > 0.270

Q:  Recommended Mxy space when either one Mxy width > 0.07um. >= 0.072um
A: 
M2_S_2_DFM1 {
@ Recommended Mxy space when either one Mxy width > 0.07um. >= 0.072um
 err1 = EXT chk_M2_070 M2 < 0.072 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Recommended Mxy space when either one Mxy width > 0.088um. >= 0.081um
A: 
M2_S_3_DFM1 {
@ Recommended Mxy space when either one Mxy width > 0.088um. >= 0.081um
 err1 = EXT chk_M2_088 M2 < 0.081 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Recommended Mxy space when either one Mxy width > 0.112um, except EFUSE region >= 0.106um
A: 
M2_S_4_DFM1 {
@ Recommended Mxy space when either one Mxy width > 0.112um, except EFUSE region >= 0.106um
 err1 = EXT chk_M2_112 M2 < 0.106 ABUT<90 REGION
 err1 NOT INSIDE EFUSE
}

Q:  Recommended Mxy space when either one Mxy width > 0.18um, except EFUSE region >= 0.126um
A: 
M2_S_5_DFM1 {
@ Recommended Mxy space when either one Mxy width > 0.18um, except EFUSE region >= 0.126um
 err1 = EXT chk_M2_180 M2 < 0.126 ABUT<90 REGION
 err1 NOT INSIDE EFUSE
}

Q:  Recommended Mxy space when either one Mxy width > 0.27um. >= 0.144um
A: 
M2_S_6_DFM1 {
@ Recommended Mxy space when either one Mxy width > 0.27um. >= 0.144um
 err1 = EXT chk_M2_270 M2 < 0.144 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy line and line-end (W < 0.046um, PRL > -0.022um) >= 0.070um
A: 
M2_S_9a_DFM1 {
@ Space between Mxy line and line-end (W < 0.046um, PRL > -0.022um) >= 0.070um
 err1 = EXT M2 M2_end_0.046 < 0.070 ABUT<90 OPPOSITE EXTENDED 0.022 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy line and line-end (0.046 < W <= 0.051um, PRL > -0.022um) >= 0.063um
A: 
M2_S_9b_DFM1 {
@ Space between Mxy line and line-end (0.046 < W <= 0.051um, PRL > -0.022um) >= 0.063um
 err1 = EXT M2 M2_end_0.046_0.051 < 0.063 ABUT<90 OPPOSITE EXTENDED 0.022 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Recommended space between Mxy line-end (width <= 0.051um) and line-end (width < 0.048um) when PRL > -0.022um. >= 0.081um
A: 
M2_S_10_DFM1 {
@ Recommended space between Mxy line-end (width <= 0.051um) and line-end (width < 0.048um) when PRL > -0.022um. >= 0.081um
 err1 = EXT M2_end_0.052 M2_end_0.048 < 0.081 ABUT<90 OPPOSITE EXTENDED 0.022 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between two Mxy, except LOGO region >= 0.032um
A: 
M2_S_1 {
@ Space between two Mxy, except LOGO region >= 0.032um
 err1 = EXT M2 < 0.032 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE LOGO
}

Q:  Space between Mxy when one or both Mxy width >= 0.071um and the PRL >= 0.14um. = 0.041~0.062, >= 0.072um
A: 
M2_S_2 {
@ Space between Mxy when one or both Mxy width >= 0.071um and the PRL >= 0.14um. = 0.041~0.062, >= 0.072um
 met_wid_all = M2 WITH WIDTH >= 0.071
 met_err_RAW = (EXT [met_wid_all] M2 < 0.041 ABUT<90 OPPOSITE MEASURE ALL) OR EDGE (EXT [met_wid_all] M2 >= 0.063 < 0.072 ABUT<90 OPPOSITE MEASURE ALL)
 met_jog_ALL = (CONVEX EDGE M2 == 1) NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M2
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] > 0.140-GLOBAL_TOLERANCE
 met_err_EGE = met_err_RAW TOUCH EDGE met_err_PRL
 err1 = (EXT met_err_EGE M2 < 0.041 ABUT<90 OPPOSITE REGION MEASURE ALL) OR (EXT met_err_EGE M2 >= 0.063 < 0.072 ABUT<90 OPPOSITE REGION MEASURE ALL)
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy when one or both width >= 0.09um and PRL >= 0.14um. = 0.041~0.062, >= 0.081um
A: 
M2_S_3 {
@ Space between Mxy when one or both width >= 0.09um and PRL >= 0.14um. = 0.041~0.062, >= 0.081um
 met_wid_all = M2 WITH WIDTH >= 0.09
 met_err_RAW = (EXT [met_wid_all] M2 < 0.041 ABUT<90 OPPOSITE MEASURE ALL) OR EDGE (EXT [met_wid_all] M2 >= 0.063 < 0.081 ABUT<90 OPPOSITE MEASURE ALL)
 met_jog_ALL = (CONVEX EDGE M2 == 1) NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M2
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] > 0.140-GLOBAL_TOLERANCE
 met_err_EGE = met_err_RAW TOUCH EDGE met_err_PRL
 err1 = (EXT met_err_EGE M2 < 0.041 ABUT<90 OPPOSITE REGION MEASURE ALL) OR (EXT met_err_EGE M2 >= 0.063 < 0.081 ABUT<90 OPPOSITE REGION MEASURE ALL)
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy when one or both width >= 0.114um and PRL >= 0.14um, except LOGO region = 0.041~0.062, >= 0.106um
A: 
M2_S_4 {
@ Space between Mxy when one or both width >= 0.114um and PRL >= 0.14um, except LOGO region = 0.041~0.062, >= 0.106um
 met_wid_all = M2 WITH WIDTH >= 0.114
 met_err_RAW = (EXT [met_wid_all] M2 < 0.041 ABUT<90 OPPOSITE MEASURE ALL) OR EDGE (EXT [met_wid_all] M2 >= 0.063 < 0.106 ABUT<90 OPPOSITE MEASURE ALL)
 met_jog_ALL = (CONVEX EDGE M2 == 1) NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M2
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] > 0.140-GLOBAL_TOLERANCE
 met_err_EGE = met_err_RAW TOUCH EDGE met_err_PRL
 err1 = (EXT met_err_EGE M2 < 0.041 ABUT<90 OPPOSITE REGION MEASURE ALL) OR (EXT met_err_EGE M2 >= 0.063 < 0.106 ABUT<90 OPPOSITE REGION MEASURE ALL)
 err1 NOT INSIDE LOGO
}

Q:  Space between Mxy when one or both width >= 0.181um and PRL >= 0.19um. >= 0.125um
A: 
M2_S_5 {
@ Space between Mxy when one or both width >= 0.181um and PRL >= 0.19um. >= 0.125um
 met_wid_all = M2 WITH WIDTH >= 0.181
 met_err_RAW = EXT M2 met_wid_all < 0.125 OPPOSITE REGION MEASURE ALL
 met_err_CRN = EXT (ANGLE M2 > 44 < 46) met_wid_all < 0.125 OPPOSITE1 REGION MEASURE ALL
 err1 = met_err_RAW ENCLOSE RECTANGLE 0.001 0.19 ORTHOGONAL ONLY
 err2 = met_err_CRN ENCLOSE RECTANGLE 0.032 0.19
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy when one or both width >= 0.272um and PRL >= 0.288um. >= 0.143um
A: 
M2_S_6 {
@ Space between Mxy when one or both width >= 0.272um and PRL >= 0.288um. >= 0.143um
 met_wid_all = M2 WITH WIDTH >= 0.272
 met_err_RAW = EXT M2 met_wid_all < 0.143 OPPOSITE REGION MEASURE ALL
 met_err_CRN = EXT (ANGLE M2 > 44 < 46) met_wid_all < 0.143 OPPOSITE1 REGION MEASURE ALL
 err1 = met_err_RAW ENCLOSE RECTANGLE 0.001 0.288 ORTHOGONAL ONLY
 err2 = met_err_CRN ENCLOSE RECTANGLE 0.032 0.288
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between Mxy when one or both width >= 0.542um, except LOGO region >= 0.188um
A:  
M2_S_7 {
@ Space between Mxy when one or both width >= 0.542um, except LOGO region >= 0.188um
 chk_Mn = M2 WITH WIDTH >= 0.542
 err1 = EXT M2 chk_Mn < 0.188 ABUT<90 REGION
 err1 NOT INSIDE LOGO
}

Q:  Space between Mxy when one or both width >= 1.352um, except LOGO region >= 0.304um
A: 
M2_S_8 {
@ Space between Mxy when one or both width >= 1.352um, except LOGO region >= 0.304um
 chk_Mn = (M2 WITH WIDTH >= 0.542) WITH WIDTH >= 1.352
 err1 = EXT M2 chk_Mn < 0.304 ABUT<90 REGION
 err1 NOT INSIDE LOGO
}

Q:  Space between Mxy line and line-end (W <= 0.051um) when PRL >= -0.021um. >= 0.049um
A: 
M2_S_9 {
@ Space between Mxy line and line-end (W <= 0.051um) when PRL >= -0.021um. >= 0.049um
 err1 = EXT M2_line M2_end_0.052 < 0.049 ABUT<90 OPPOSITE EXTENDED 0.021+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy line-end (0.032um <= width <= 0.051um) and line-end (0.032um <= width <= 0.047um) when PRL >= -0.021um. >= 0.058um
A: 
M2_S_10 {
@ Space between Mxy line-end (0.032um <= width <= 0.051um) and line-end (0.032um <= width <= 0.047um) when PRL >= -0.021um. >= 0.058um
 err1 = EXT M2_end_0.032_0.051 M2_end_0.032_0.047 < 0.058 ABUT<90 OPPOSITE EXTENDED 0.021+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy line-end (0.032um <= width <= 0.051um) and line-end (0.048um <= width <= 0.051um) when PRL >= -0.021um. >= 0.055um
A: 
M2_S_11 {
@ Space between Mxy line-end (0.032um <= width <= 0.051um) and line-end (0.048um <= width <= 0.051um) when PRL >= -0.021um. >= 0.055um
 err1 = EXT M2_end_0.032_0.051 M2_end_0.048_0.051 < 0.055 ABUT<90 OPPOSITE EXTENDED 0.021+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy and dense Mxy line-end (0.032um >= W <= 0.047um), when PRL > -0.022um. Dense Mxy line end definition:
     (W+S1) < 0.09um, other metal must be in the region R, T and D is the extension from metal line end, T <= 0.021um, D <= 0.051um, S1 should be the space between separate metal
     (Except small jog with edge length <= 0.031um) >= 0.07um
A: 
M2_S_12 {
@ Space between Mxy and dense Mxy line-end (0.032um >= W <= 0.047um), when PRL > -0.022um. Dense Mxy line end definition:
@ (W+S1) < 0.09um, other metal must be in the region R, T and D is the extension from metal line end, T <= 0.021um, D <= 0.051um, S1 should be the space between separate metal
@ (Except small jog with edge length <= 0.031um) >= 0.07um
 end_check_TMP = CONVEX EDGE M2 ANGLE1 == 90 LENGTH1 >= 0.001 ANGLE2 == 90 LENGTH2 >= 0.001 WITH LENGTH < 0.047+GLOBAL_TOLERANCE
 end_space_TMP = EXT end_check_TMP M2 < 0.07 ABUT<90 OPPOSITE EXTENDED 0.021+GLOBAL_TOLERANCE REGION
 end_space_EGE = end_check_TMP TOUCH EDGE end_space_TMP
 end_inner_EXD = EXPAND EDGE end_space_EGE INSIDE BY 0.051+GLOBAL_TOLERANCE OUTSIDE BY 0.021+GLOBAL_TOLERANCE
 end_sides_EGE = (end_inner_EXD TOUCH EDGE M2) NOT COIN EDGE end_check_TMP
 // 
 end_sides_ERR = EXT end_sides_EGE M2 < 0.09-0.024 OPPOSITE
 end_width_ERR = INT end_inner_EXD < 0.047+GLOBAL_TOLERANCE OPPOSITE EXCLUDE SHIELDED
 end_sides_CHK = DFM PROPERTY end_sides_EGE end_sides_ERR end_width_ERR OVERLAP ABUT ALSO MULTI [-= MIN(EW(end_sides_ERR)) + MIN(EW(end_width_ERR))] < 0.09
 end_check_EXD = (end_inner_EXD AND M2) WITH EDGE end_sides_CHK
 end_check = end_space_EGE TOUCH EDGE end_check_EXD
 err1 = EXT end_check M2 < 0.07 ABUT<90 OPPOSITE EXTENDED 0.021+GLOBAL_TOLERANCE REGION
 err2 = err1 NOT WITH EDGE (LENGTH M2_end <= 0.031)
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy and dense Mxy line-end (0.048um <= W <= 0.051um), when PRL > -0.022um. Dense Mxy line end definition:
     (W+S1) < 0.09um, other metal must be in the region R, T and D is the extension from metal line end, T <= 0.021um, D <= 0.051um, S1 should be the space between separate metal
     (Except small jog with edge length <= 0.031um) >= 0.056um
A: 
M2_S_13 {
@ Space between Mxy and dense Mxy line-end (0.048um <= W <= 0.051um), when PRL > -0.022um. Dense Mxy line end definition:
@ (W+S1) < 0.09um, other metal must be in the region R, T and D is the extension from metal line end, T <= 0.021um, D <= 0.051um, S1 should be the space between separate metal
@ (Except small jog with edge length <= 0.031um) >= 0.056um
 end_check_TMP = CONVEX EDGE M2 ANGLE1 == 90 LENGTH1 >= 0.001 ANGLE2 == 90 LENGTH2 >= 0.001 WITH LENGTH >= 0.048 <= 0.051
 end_space_TMP = EXT end_check_TMP M2 < 0.056 ABUT<90 OPPOSITE EXTENDED 0.022 REGION
 end_space_EGE = end_check_TMP TOUCH EDGE end_space_TMP
 end_inner_EXD = EXPAND EDGE end_space_EGE INSIDE BY 0.051+GLOBAL_TOLERANCE OUTSIDE BY 0.021+GLOBAL_TOLERANCE
 end_sides_EGE = (end_inner_EXD TOUCH EDGE M2) NOT COIN EDGE end_check_TMP
 // 
 end_sides_ERR = EXT end_sides_EGE M2 < 0.058 OPPOSITE
 end_width_ERR = INT end_inner_EXD >= 0.048 <= 0.051 OPPOSITE EXCLUDE SHIELDED
 end_sides_CHK = DFM PROPERTY end_sides_EGE end_sides_ERR end_width_ERR OVERLAP ABUT ALSO MULTI [-= MIN(EW(end_sides_ERR)) + MIN(EW(end_width_ERR))] < 0.09
 end_check_EXD = (end_inner_EXD AND M2) WITH EDGE end_sides_CHK
 end_check = end_space_EGE TOUCH EDGE end_check_EXD
 err1 = EXT end_check M2 < 0.056 ABUT<90 OPPOSITE EXTENDED 0.022 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
M2_line_end_046_054_edges = CONVEX EDGE M2 == 2 WITH LENGTH >= 0.046 <= 0.054
M2_line_end_046_054_prl_gt_L = INT (M2_line_end_046_054_edges) M2 < 0.134 OPPOSITE EXCLUDE SHIELDED
M2_line_end_046_054_prl_gt_L_all = M2_line_end_046_054_edges TOUCH EDGE M2_line_end_046_054_prl_gt_L

Q:  Mxy line-end space in metal array >= 0.072um
     Metal array definition:
     1. Mxy width (W): 0.046um <= W <= 0.054um
     2. Mxy length (L) >= 0.134um
     3. Searching distance (D) of Mxy line-end edge: 0.048um
     4. Mxy space (S1) 0.058um <= S1 <= 0.076um for both long sides
     5. Mxy PRL > 0um for short side (L1)
     6. Line end space (S2) of both neighboring Mxy: 0.058um <= S2 <= 0.076um with PRL > 0um
     DRC doesn't flag at least one S1 >= 0.058~ <= 0.063um with PRL > 0.112um. And DRC flags forbidden space that has PRL > 0um with both S2
A: 
M2_S_14 {
@ Mxy line-end space in metal array >= 0.072um
@ Metal array definition:
@ 1. Mxy width (W): 0.046um <= W <= 0.054um
@ 2. Mxy length (L) >= 0.134um
@ 3. Searching distance (D) of Mxy line-end edge: 0.048um
@ 4. Mxy space (S1) 0.058um <= S1 <= 0.076um for both long sides
@ 5. Mxy PRL > 0um for short side (L1)
@ 6. Line end space (S2) of both neighboring Mxy: 0.058um <= S2 <= 0.076um with PRL > 0um
@ DRC doesn't flag at least one S1 >= 0.058~ <= 0.063um with PRL > 0.112um. And DRC flags forbidden space that has PRL > 0um with both S2
 distance_D_M = EXPAND EDGE M2_line_end_046_054_prl_gt_L_all INSIDE BY 0.048
 distance_D_W = (distance_D_M AND M2) COIN EDGE M2_line_end_046_054_prl_gt_L_all // W edge
 distance_D_W_edge = EXT [distance_D_W] M2 >= 0.058 <= 0.076 ABUT<90 OPPOSITE
 distance_D_W_058_076 = distance_D_W TOUCH EDGE distance_D_W_edge
 // for 58~76 region
 distance_D_seg_twin = (EXPAND EDGE distance_D_W_058_076 INSIDE BY 0.112+0.048 EXTEND BY 0.054-0.046) AND (INT M2 >= 0.046 <= 0.054 OPPOSITE REGION) // include jogs
 distance_D_seg_twin_l_sides = (distance_D_seg_twin NOT TOUCH EDGE distance_D_W_058_076) NOT INSIDE EDGE M2
 distance_D_seg_twin_l_sides_real = distance_D_seg_twin_l_sides NOT TOUCH EDGE (INT [distance_D_seg_twin_l_sides] distance_D_W_058_076 <= 0.112 + 0.048 ABUT<90 OPPOSITE)
 // 
 distance_D_side_058_076_edges = EXT [distance_D_seg_twin_l_sides_real] >= 0.058 <= 0.076 ABUT<90 OPPOSITE
 distance_D_side_058_076 = INT distance_D_side_058_076_edges >= 0.046 <= 0.054 ABUT<90 OPPOSITE REGION
 // 
 distance_D_seg_midd_part = M2 AND (EXPAND EDGE distance_D_W_058_076 INSIDE BY 0.112 + 0.048 EXTEND BY -0.01)
 distance_D_seg_side_part = distance_D_seg_twin NOT distance_D_seg_midd_part
 distance_D_seg_side_part_c = distance_D_seg_side_part INTERACT distance_D_side_058_076
 distance_D_seg_midd_part_c = distance_D_seg_midd_part INTERACT distance_D_seg_side_part_c >= 2
 distance_D_seg_twin_058_076_c = (distance_D_seg_twin INTERACT distance_D_side_058_076) INTERACT distance_D_seg_midd_part_c
 // 
 distance_D_seg_twin_opp = INT distance_D_seg_twin_058_076_c <= 0.112 + 0.048 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 distance_D_seg_twin_opp_ew = DFM PROPERTY distance_D_seg_twin_opp distance_D_seg_twin_058_076_c OVERLAP ABUT ALSO MULTI [max_ew = ew(distance_D_seg_twin_opp)] >= 0.134 [cal_ew = (property_ref(max_ew) == ew(distance_D_seg_twin_opp)) ? 1 : 0] > 0
 // 
 distance_D_sp1 = distance_D_seg_twin_058_076_c NOT COIN EDGE (DFM COPY distance_D_seg_twin_opp_ew EDGE)
 distance_D_sp2 = (EXPAND EDGE distance_D_sp1 INSIDE BY 0.002 CORNER FILL) INTERACT distance_D_side_058_076
 distance_D_sp3 = distance_D_W_058_076 COIN EDGE (distance_D_seg_twin_058_076_c INTERACT distance_D_sp2 >= 2)
 // 
 distance_D_sp_forbidden = EXT distance_D_sp3 M2 < 0.072 ABUT<90 OPPOSITE REGION
 distance_D_sp_forbidden_ove = EXPAND EDGE (distance_D_W_058_076 TOUCH EDGE distance_D_sp_forbidden) OUTSIDE BY 0.005
 distance_D_sp_forbidden_all = EXTENTS (OR distance_D_sp_forbidden distance_D_sp_forbidden_ove)
 distance_D_sp_forbidden_side = distance_D_sp_forbidden_all NOT TOUCH EDGE M2
 distance_D_sp_forbidden_side_prl = EXT (distance_D_sp_forbidden_side) M2 >= 0.058 <= 0.076 ABUT<90 OPPOSITE
 distance_D_sp_forbidden_side_prl_both = distance_D_sp_forbidden_all WITH EDGE distance_D_sp_forbidden_side_prl >= 2
 err1 = distance_D_sp_forbidden AND distance_D_sp_forbidden_side_prl_both // flag error region has prl with the beside error region
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between two Mxy when one or both Mxy enclosure of long side edge of RVy-1 is < 0.007um, Mxy is the metal layer directly above RVy-1
    DRC flag the space between Mxy and the long sides of RVy-1. >= 0.035um
A: 
M2_S_15 {
@ Space between two Mxy when one or both Mxy enclosure of long side edge of RVy-1 is < 0.007um, Mxy is the metal layer directly above RVy-1
@ DRC flag the space between Mxy and the long sides of RVy-1. >= 0.035um
 err1_c = ENC RV1_L [M2] < 0.007 ABUT<90 OPPOSITE
 err1 = EXT err1_c M2 < 0.035 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between two Mxy when one or both Mxy enclosure of long side edge of RVy-1 are < 0.003um, Mxy is the metal layer directly above RVy-1
    DRC flag the space between Mxy and the long sides of RVy-1. >= 0.044um
A: 
M2_S_16 {
@ Space between two Mxy when one or both Mxy enclosure of long side edge of RVy-1 are < 0.003um, Mxy is the metal layer directly above RVy-1
@ DRC flag the space between Mxy and the long sides of RVy-1. >= 0.044um
 err1_c = ENC RV1_L [M2] < 0.003 ABUT<90 OPPOSITE
 err1 = EXT err1_c M2 < 0.044 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy and 45-degree bent Mxy, DRC check 45-degree direction >= 0.152um
A: 
M2_S_17 {
@ Space between Mxy and 45-degree bent Mxy, DRC check 45-degree direction >= 0.152um
 err1 = EXT M2 M2_45_skew_edges < 0.152 ABUT<90 OPPOSITE2 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy and INST, space = 0 is allowed >= 0.08um
A: 
M2_S_18 {
@ Space between Mxy and INST, space = 0 is allowed >= 0.08um
 err1 = EXT M2 INST < 0.08 ABUT>0<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//M3

Q: Recommend Mxy space to reduce the short possibility, except MOMDMY region >= 0.044um
A: 
M3_S_1_DFM1 {
@ Recommend Mxy space to reduce the short possibility, except MOMDMY region >= 0.044um
 err1 = EXT M3 < 0.044 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE MOMDMY
}
 
chk_M3_070 = M3 WITH WIDTH > 0.07
chk_M3_088 = chk_M3_070 WITH WIDTH > 0.088
chk_M3_112 = chk_M3_088 WITH WIDTH > 0.112
chk_M3_180 = chk_M3_112 WITH WIDTH > 0.180
chk_M3_270 = chk_M3_180 WITH WIDTH > 0.270

Q:  Recommended Mxy space when either one Mxy width > 0.07um. >= 0.072um
A: 
M3_S_2_DFM1 {
@ Recommended Mxy space when either one Mxy width > 0.07um. >= 0.072um
 err1 = EXT chk_M3_070 M3 < 0.072 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  
M3_S_3_DFM1 {
@ Recommended Mxy space when either one Mxy width > 0.088um. >= 0.081um
 err1 = EXT chk_M3_088 M3 < 0.081 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Recommended Mxy space when either one Mxy width > 0.112um, except EFUSE region >= 0.106um
A: 
M3_S_4_DFM1 {
@ Recommended Mxy space when either one Mxy width > 0.112um, except EFUSE region >= 0.106um
 err1 = EXT chk_M3_112 M3 < 0.106 ABUT<90 REGION
 err1 NOT INSIDE EFUSE
}

Q:  Recommended Mxy space when either one Mxy width > 0.18um, except EFUSE region >= 0.126um
A: 
M3_S_5_DFM1 {
@ Recommended Mxy space when either one Mxy width > 0.18um, except EFUSE region >= 0.126um
 err1 = EXT chk_M3_180 M3 < 0.126 ABUT<90 REGION
 err1 NOT INSIDE EFUSE
}

Q:  Recommended Mxy space when either one Mxy width > 0.27um. >= 0.144um
A: 
M3_S_6_DFM1 {
@ Recommended Mxy space when either one Mxy width > 0.27um. >= 0.144um
 err1 = EXT chk_M3_270 M3 < 0.144 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy line and line-end (W < 0.046um, PRL > -0.022um) >= 0.070um
A: 
M3_S_9a_DFM1 {
@ Space between Mxy line and line-end (W < 0.046um, PRL > -0.022um) >= 0.070um
 err1 = EXT M3 M3_end_0.046 < 0.070 ABUT<90 OPPOSITE EXTENDED 0.022 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy line and line-end (0.046 < W <= 0.051um, PRL > -0.022um) >= 0.063um
A: 
M3_S_9b_DFM1 {
@ Space between Mxy line and line-end (0.046 < W <= 0.051um, PRL > -0.022um) >= 0.063um
 err1 = EXT M3 M3_end_0.046_0.051 < 0.063 ABUT<90 OPPOSITE EXTENDED 0.022 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Recommended space between Mxy line-end (width <= 0.051um) and line-end (width < 0.048um) when PRL > -0.022um. >= 0.081um
A: 
M3_S_10_DFM1 {
@ Recommended space between Mxy line-end (width <= 0.051um) and line-end (width < 0.048um) when PRL > -0.022um. >= 0.081um
 err1 = EXT M3_end_0.052 M3_end_0.048 < 0.081 ABUT<90 OPPOSITE EXTENDED 0.022 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between two Mxy, except LOGO region >= 0.032um
A: 
M3_S_1 {
@ Space between two Mxy, except LOGO region >= 0.032um
 err1 = EXT M3 < 0.032 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE LOGO
}

Q:  Space between Mxy when one or both Mxy width >= 0.071um and the PRL >= 0.14um. = 0.041~0.062, >= 0.072um
A: 
M3_S_2 {
@ Space between Mxy when one or both Mxy width >= 0.071um and the PRL >= 0.14um. = 0.041~0.062, >= 0.072um
 met_wid_all = M3 WITH WIDTH >= 0.071
 met_err_RAW = (EXT [met_wid_all] M3 < 0.041 ABUT<90 OPPOSITE MEASURE ALL) OR EDGE (EXT [met_wid_all] M3 >= 0.063 < 0.072 ABUT<90 OPPOSITE MEASURE ALL)
 met_jog_ALL = (CONVEX EDGE M3 == 1) NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M3
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] > 0.140-GLOBAL_TOLERANCE
 met_err_EGE = met_err_RAW TOUCH EDGE met_err_PRL
 err1 = (EXT met_err_EGE M3 < 0.041 ABUT<90 OPPOSITE REGION MEASURE ALL) OR (EXT met_err_EGE M3 >= 0.063 < 0.072 ABUT<90 OPPOSITE REGION MEASURE ALL)
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy when one or both width >= 0.09um and PRL >= 0.14um. = 0.041~0.062, >= 0.081um
A: 
M3_S_3 {
@ Space between Mxy when one or both width >= 0.09um and PRL >= 0.14um. = 0.041~0.062, >= 0.081um
 met_wid_all = M3 WITH WIDTH >= 0.09
 met_err_RAW = (EXT [met_wid_all] M3 < 0.041 ABUT<90 OPPOSITE MEASURE ALL) OR EDGE (EXT [met_wid_all] M3 >= 0.063 < 0.081 ABUT<90 OPPOSITE MEASURE ALL)
 met_jog_ALL = (CONVEX EDGE M3 == 1) NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M3
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] > 0.140-GLOBAL_TOLERANCE
 met_err_EGE = met_err_RAW TOUCH EDGE met_err_PRL
 err1 = (EXT met_err_EGE M3 < 0.041 ABUT<90 OPPOSITE REGION MEASURE ALL) OR (EXT met_err_EGE M3 >= 0.063 < 0.081 ABUT<90 OPPOSITE REGION MEASURE ALL)
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy when one or both width >= 0.114um and PRL >= 0.14um, except LOGO region = 0.041~0.062, >= 0.106um
A: 
M3_S_4 {
@ Space between Mxy when one or both width >= 0.114um and PRL >= 0.14um, except LOGO region = 0.041~0.062, >= 0.106um
 met_wid_all = M3 WITH WIDTH >= 0.114
 met_err_RAW = (EXT [met_wid_all] M3 < 0.041 ABUT<90 OPPOSITE MEASURE ALL) OR EDGE (EXT [met_wid_all] M3 >= 0.063 < 0.106 ABUT<90 OPPOSITE MEASURE ALL)
 met_jog_ALL = (CONVEX EDGE M3 == 1) NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M3
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] > 0.140-GLOBAL_TOLERANCE
 met_err_EGE = met_err_RAW TOUCH EDGE met_err_PRL
 err1 = (EXT met_err_EGE M3 < 0.041 ABUT<90 OPPOSITE REGION MEASURE ALL) OR (EXT met_err_EGE M3 >= 0.063 < 0.106 ABUT<90 OPPOSITE REGION MEASURE ALL)
 err1 NOT INSIDE LOGO
}

Q:  Space between Mxy when one or both width >= 0.181um and PRL >= 0.19um. >= 0.125um
A: 
M3_S_5 {
@ Space between Mxy when one or both width >= 0.181um and PRL >= 0.19um. >= 0.125um
 met_wid_all = M3 WITH WIDTH >= 0.181
 met_err_RAW = EXT M3 met_wid_all < 0.125 OPPOSITE REGION MEASURE ALL
 met_err_CRN = EXT (ANGLE M3 > 44 < 46) met_wid_all < 0.125 OPPOSITE1 REGION MEASURE ALL
 err1 = met_err_RAW ENCLOSE RECTANGLE 0.001 0.19 ORTHOGONAL ONLY
 err2 = met_err_CRN ENCLOSE RECTANGLE 0.032 0.19
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy when one or both width >= 0.272um and PRL >= 0.288um. >= 0.143um
A: 
M3_S_6 {
@ Space between Mxy when one or both width >= 0.272um and PRL >= 0.288um. >= 0.143um
 met_wid_all = M3 WITH WIDTH >= 0.272
 met_err_RAW = EXT M3 met_wid_all < 0.143 OPPOSITE REGION MEASURE ALL
 met_err_CRN = EXT (ANGLE M3 > 44 < 46) met_wid_all < 0.143 OPPOSITE1 REGION MEASURE ALL
 err1 = met_err_RAW ENCLOSE RECTANGLE 0.001 0.288 ORTHOGONAL ONLY
 err2 = met_err_CRN ENCLOSE RECTANGLE 0.032 0.288
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:   Space between Mxy when one or both width >= 0.542um, except LOGO region >= 0.188um
A: 
M3_S_7 {
@ Space between Mxy when one or both width >= 0.542um, except LOGO region >= 0.188um
 chk_Mn = M3 WITH WIDTH >= 0.542
 err1 = EXT M3 chk_Mn < 0.188 ABUT<90 REGION
 err1 NOT INSIDE LOGO
}

Q:  Space between Mxy when one or both width >= 1.352um, except LOGO region >= 0.304um
A: 
M3_S_8 {
@ Space between Mxy when one or both width >= 1.352um, except LOGO region >= 0.304um
 chk_Mn = (M3 WITH WIDTH >= 0.542) WITH WIDTH >= 1.352
 err1 = EXT M3 chk_Mn < 0.304 ABUT<90 REGION
 err1 NOT INSIDE LOGO
}

Q:  Space between Mxy line and line-end (W <= 0.051um) when PRL >= -0.021um. >= 0.049um
A: 
M3_S_9 {
@ Space between Mxy line and line-end (W <= 0.051um) when PRL >= -0.021um. >= 0.049um
 err1 = EXT M3_line M3_end_0.052 < 0.049 ABUT<90 OPPOSITE EXTENDED 0.021+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy line-end (0.032um <= width <= 0.051um) and line-end (0.032um <= width <= 0.047um) when PRL >= -0.021um. >= 0.058um
A: 
M3_S_10 {
@ Space between Mxy line-end (0.032um <= width <= 0.051um) and line-end (0.032um <= width <= 0.047um) when PRL >= -0.021um. >= 0.058um
 err1 = EXT M3_end_0.032_0.051 M3_end_0.032_0.047 < 0.058 ABUT<90 OPPOSITE EXTENDED 0.021+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy line-end (0.032um <= width <= 0.051um) and line-end (0.048um <= width <= 0.051um) when PRL >= -0.021um. >= 0.055um
A: 
M3_S_11 {
@ Space between Mxy line-end (0.032um <= width <= 0.051um) and line-end (0.048um <= width <= 0.051um) when PRL >= -0.021um. >= 0.055um
 err1 = EXT M3_end_0.032_0.051 M3_end_0.048_0.051 < 0.055 ABUT<90 OPPOSITE EXTENDED 0.021+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy and dense Mxy line-end (0.032um >= W <= 0.047um), when PRL > -0.022um. Dense Mxy line end definition:
     (W+S1) < 0.09um, other metal must be in the region R, T and D is the extension from metal line end, T <= 0.021um, D <= 0.051um, S1 should be the space between separate metal
     (Except small jog with edge length <= 0.031um) >= 0.07um
A: 
M3_S_12 {
@ Space between Mxy and dense Mxy line-end (0.032um >= W <= 0.047um), when PRL > -0.022um. Dense Mxy line end definition:
@ (W+S1) < 0.09um, other metal must be in the region R, T and D is the extension from metal line end, T <= 0.021um, D <= 0.051um, S1 should be the space between separate metal
@ (Except small jog with edge length <= 0.031um) >= 0.07um
 end_check_TMP = CONVEX EDGE M3 ANGLE1 == 90 LENGTH1 >= 0.001 ANGLE2 == 90 LENGTH2 >= 0.001 WITH LENGTH < 0.047+GLOBAL_TOLERANCE
 end_space_TMP = EXT end_check_TMP M3 < 0.07 ABUT<90 OPPOSITE EXTENDED 0.021+GLOBAL_TOLERANCE REGION
 end_space_EGE = end_check_TMP TOUCH EDGE end_space_TMP
 end_inner_EXD = EXPAND EDGE end_space_EGE INSIDE BY 0.051+GLOBAL_TOLERANCE OUTSIDE BY 0.021+GLOBAL_TOLERANCE
 end_sides_EGE = (end_inner_EXD TOUCH EDGE M3) NOT COIN EDGE end_check_TMP
 // 
 end_sides_ERR = EXT end_sides_EGE M3 < 0.09-0.024 OPPOSITE
 end_width_ERR = INT end_inner_EXD < 0.047+GLOBAL_TOLERANCE OPPOSITE EXCLUDE SHIELDED
 end_sides_CHK = DFM PROPERTY end_sides_EGE end_sides_ERR end_width_ERR OVERLAP ABUT ALSO MULTI [-= MIN(EW(end_sides_ERR)) + MIN(EW(end_width_ERR))] < 0.09
 end_check_EXD = (end_inner_EXD AND M3) WITH EDGE end_sides_CHK
 end_check = end_space_EGE TOUCH EDGE end_check_EXD
 err1 = EXT end_check M3 < 0.07 ABUT<90 OPPOSITE EXTENDED 0.021+GLOBAL_TOLERANCE REGION
 err2 = err1 NOT WITH EDGE (LENGTH M3_end <= 0.031)
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy and dense Mxy line-end (0.048um <= W <= 0.051um), when PRL > -0.022um. Dense Mxy line end definition:
     (W+S1) < 0.09um, other metal must be in the region R, T and D is the extension from metal line end, T <= 0.021um, D <= 0.051um, S1 should be the space between separate metal
     (Except small jog with edge length <= 0.031um) >= 0.056um
A: 
M3_S_13 {
@ Space between Mxy and dense Mxy line-end (0.048um <= W <= 0.051um), when PRL > -0.022um. Dense Mxy line end definition:
@ (W+S1) < 0.09um, other metal must be in the region R, T and D is the extension from metal line end, T <= 0.021um, D <= 0.051um, S1 should be the space between separate metal
@ (Except small jog with edge length <= 0.031um) >= 0.056um
 end_check_TMP = CONVEX EDGE M3 ANGLE1 == 90 LENGTH1 >= 0.001 ANGLE2 == 90 LENGTH2 >= 0.001 WITH LENGTH >= 0.048 <= 0.051
 end_space_TMP = EXT end_check_TMP M3 < 0.056 ABUT<90 OPPOSITE EXTENDED 0.022 REGION
 end_space_EGE = end_check_TMP TOUCH EDGE end_space_TMP
 end_inner_EXD = EXPAND EDGE end_space_EGE INSIDE BY 0.051+GLOBAL_TOLERANCE OUTSIDE BY 0.021+GLOBAL_TOLERANCE
 end_sides_EGE = (end_inner_EXD TOUCH EDGE M3) NOT COIN EDGE end_check_TMP
 // 
 end_sides_ERR = EXT end_sides_EGE M3 < 0.058 OPPOSITE
 end_width_ERR = INT end_inner_EXD >= 0.048 <= 0.051 OPPOSITE EXCLUDE SHIELDED
 end_sides_CHK = DFM PROPERTY end_sides_EGE end_sides_ERR end_width_ERR OVERLAP ABUT ALSO MULTI [-= MIN(EW(end_sides_ERR)) + MIN(EW(end_width_ERR))] < 0.09
 end_check_EXD = (end_inner_EXD AND M3) WITH EDGE end_sides_CHK
 end_check = end_space_EGE TOUCH EDGE end_check_EXD
 err1 = EXT end_check M3 < 0.056 ABUT<90 OPPOSITE EXTENDED 0.022 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
M3_line_end_046_054_edges = CONVEX EDGE M3 == 2 WITH LENGTH >= 0.046 <= 0.054
M3_line_end_046_054_prl_gt_L = INT (M3_line_end_046_054_edges) M3 < 0.134 OPPOSITE EXCLUDE SHIELDED
M3_line_end_046_054_prl_gt_L_all = M3_line_end_046_054_edges TOUCH EDGE M3_line_end_046_054_prl_gt_L

Q:  Mxy line-end space in metal array >= 0.072um
     Metal array definition:
     1. Mxy width (W): 0.046um <= W <= 0.054um
     2. Mxy length (L) >= 0.134um
     3. Searching distance (D) of Mxy line-end edge: 0.048um
     4. Mxy space (S1) 0.058um <= S1 <= 0.076um for both long sides
     5. Mxy PRL > 0um for short side (L1)
     6. Line end space (S2) of both neighboring Mxy: 0.058um <= S2 <= 0.076um with PRL > 0um
     DRC doesn't flag at least one S1 >= 0.058~ <= 0.063um with PRL > 0.112um. And DRC flags forbidden space that has PRL > 0um with both S2
A: 
M3_S_14 {
@ Mxy line-end space in metal array >= 0.072um
@ Metal array definition:
@ 1. Mxy width (W): 0.046um <= W <= 0.054um
@ 2. Mxy length (L) >= 0.134um
@ 3. Searching distance (D) of Mxy line-end edge: 0.048um
@ 4. Mxy space (S1) 0.058um <= S1 <= 0.076um for both long sides
@ 5. Mxy PRL > 0um for short side (L1)
@ 6. Line end space (S2) of both neighboring Mxy: 0.058um <= S2 <= 0.076um with PRL > 0um
@ DRC doesn't flag at least one S1 >= 0.058~ <= 0.063um with PRL > 0.112um. And DRC flags forbidden space that has PRL > 0um with both S2
 distance_D_M = EXPAND EDGE M3_line_end_046_054_prl_gt_L_all INSIDE BY 0.048
 distance_D_W = (distance_D_M AND M3) COIN EDGE M3_line_end_046_054_prl_gt_L_all // W edge
 distance_D_W_edge = EXT [distance_D_W] M3 >= 0.058 <= 0.076 ABUT<90 OPPOSITE
 distance_D_W_058_076 = distance_D_W TOUCH EDGE distance_D_W_edge
 // for 58~76 region
 distance_D_seg_twin = (EXPAND EDGE distance_D_W_058_076 INSIDE BY 0.112+0.048 EXTEND BY 0.054-0.046) AND (INT M3 >= 0.046 <= 0.054 OPPOSITE REGION) // include jogs
 distance_D_seg_twin_l_sides = (distance_D_seg_twin NOT TOUCH EDGE distance_D_W_058_076) NOT INSIDE EDGE M3
 distance_D_seg_twin_l_sides_real = distance_D_seg_twin_l_sides NOT TOUCH EDGE (INT [distance_D_seg_twin_l_sides] distance_D_W_058_076 <= 0.112 + 0.048 ABUT<90 OPPOSITE)
 // 
 distance_D_side_058_076_edges = EXT [distance_D_seg_twin_l_sides_real] >= 0.058 <= 0.076 ABUT<90 OPPOSITE
 distance_D_side_058_076 = INT distance_D_side_058_076_edges >= 0.046 <= 0.054 ABUT<90 OPPOSITE REGION
 // 
 distance_D_seg_midd_part = M3 AND (EXPAND EDGE distance_D_W_058_076 INSIDE BY 0.112 + 0.048 EXTEND BY -0.01)
 distance_D_seg_side_part = distance_D_seg_twin NOT distance_D_seg_midd_part
 distance_D_seg_side_part_c = distance_D_seg_side_part INTERACT distance_D_side_058_076
 distance_D_seg_midd_part_c = distance_D_seg_midd_part INTERACT distance_D_seg_side_part_c >= 2
 distance_D_seg_twin_058_076_c = (distance_D_seg_twin INTERACT distance_D_side_058_076) INTERACT distance_D_seg_midd_part_c
 // 
 distance_D_seg_twin_opp = INT distance_D_seg_twin_058_076_c <= 0.112 + 0.048 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 distance_D_seg_twin_opp_ew = DFM PROPERTY distance_D_seg_twin_opp distance_D_seg_twin_058_076_c OVERLAP ABUT ALSO MULTI [max_ew = ew(distance_D_seg_twin_opp)] >= 0.134 [cal_ew = (property_ref(max_ew) == ew(distance_D_seg_twin_opp)) ? 1 : 0] > 0
 // 
 distance_D_sp1 = distance_D_seg_twin_058_076_c NOT COIN EDGE (DFM COPY distance_D_seg_twin_opp_ew EDGE)
 distance_D_sp2 = (EXPAND EDGE distance_D_sp1 INSIDE BY 0.002 CORNER FILL) INTERACT distance_D_side_058_076
 distance_D_sp3 = distance_D_W_058_076 COIN EDGE (distance_D_seg_twin_058_076_c INTERACT distance_D_sp2 >= 2)
 // 
 distance_D_sp_forbidden = EXT distance_D_sp3 M3 < 0.072 ABUT<90 OPPOSITE REGION
 distance_D_sp_forbidden_ove = EXPAND EDGE (distance_D_W_058_076 TOUCH EDGE distance_D_sp_forbidden) OUTSIDE BY 0.005
 distance_D_sp_forbidden_all = EXTENTS (OR distance_D_sp_forbidden distance_D_sp_forbidden_ove)
 distance_D_sp_forbidden_side = distance_D_sp_forbidden_all NOT TOUCH EDGE M3
 distance_D_sp_forbidden_side_prl = EXT (distance_D_sp_forbidden_side) M3 >= 0.058 <= 0.076 ABUT<90 OPPOSITE
 distance_D_sp_forbidden_side_prl_both = distance_D_sp_forbidden_all WITH EDGE distance_D_sp_forbidden_side_prl >= 2
 err1 = distance_D_sp_forbidden AND distance_D_sp_forbidden_side_prl_both // flag error region has prl with the beside error region
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between two Mxy when one or both Mxy enclosure of long side edge of RVy-1 is < 0.007um, Mxy is the metal layer directly above RVy-1
     DRC flag the space between Mxy and the long sides of RVy-1. >= 0.035um
A: 
M3_S_15 {
@ Space between two Mxy when one or both Mxy enclosure of long side edge of RVy-1 is < 0.007um, Mxy is the metal layer directly above RVy-1
@ DRC flag the space between Mxy and the long sides of RVy-1. >= 0.035um
 err1_c = ENC RV2_L [M3] < 0.007 ABUT<90 OPPOSITE
 err1 = EXT err1_c M3 < 0.035 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between two Mxy when one or both Mxy enclosure of long side edge of RVy-1 are < 0.003um, Mxy is the metal layer directly above RVy-1
     DRC flag the space between Mxy and the long sides of RVy-1. >= 0.044um
A: 
M3_S_16 {
@ Space between two Mxy when one or both Mxy enclosure of long side edge of RVy-1 are < 0.003um, Mxy is the metal layer directly above RVy-1
@ DRC flag the space between Mxy and the long sides of RVy-1. >= 0.044um
 err1_c = ENC RV2_L [M3] < 0.003 ABUT<90 OPPOSITE
 err1 = EXT err1_c M3 < 0.044 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy and 45-degree bent Mxy, DRC check 45-degree direction >= 0.152um
A: 
M3_S_17 {
@ Space between Mxy and 45-degree bent Mxy, DRC check 45-degree direction >= 0.152um
 err1 = EXT M3 M3_45_skew_edges < 0.152 ABUT<90 OPPOSITE2 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Mxy and INST, space = 0 is allowed >= 0.08um
A: 
M3_S_18 {
@ Space between Mxy and INST, space = 0 is allowed >= 0.08um
 err1 = EXT M3 INST < 0.08 ABUT>0<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 

//Vy1

Q: Space between two (Vy or RVy), except Vy.S.1a >= 0.069um
A: 
Vy1_S_1 {
@ Space between two (Vy or RVy), except Vy.S.1a >= 0.069um
 err1 = EXT V1_SR < 0.069 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between two square Vy when PRL > -0.032um, except V1 in INST region, DRC only flag the point-to-point space when PRL <= 0. >= 0.082um
A: 
Vy1_S_2 {
@ Space between two square Vy when PRL > -0.032um, except V1 in INST region, DRC only flag the point-to-point space when PRL <= 0. >= 0.082um
 err1 = EXT V1N < 0.082 ABUT<90 OPPOSITE EXTENDED 0.001 REGION
 err2_RAW = EXT V1N < 0.082 ABUT<90 CORNER TO CORNER
 err2_TMP = DFM PROPERTY err2_RAW [-= (EWXP(err2_RAW) < 0.032 || EWYP(err2_RAW) < 0.032) ? 1 : 0] > 0
 err2 = DFM COPY err2_TMP REGION
 // 
 err1 NOT INSIDE INST
 err2 NOT INSIDE INST
}

Q:  Space between square Vy and RVy >= 0.082um
A: 
Vy1_S_3 {
@ Space between square Vy and RVy >= 0.082um
 err1 = EXT V1N RV1 < 0.082 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Vy and Vy-1 (including V0) at different net and PRL > 0um. >= 0.038um
     When:
     Mxy+1/1.25xMy enclosure of Vy > 0um
A: 
Vy1_S_4 {
@ Space between Vy and Vy-1 (including V0) at different net and PRL > 0um. >= 0.038um
@ When:
@ Mxy+1/1.25xMy enclosure of Vy > 0um
 // (include V0)
 chk_via = (V1 AND (V1N INSIDE M2)) NOT COIN EDGE M2
 err1 = EXT chk_via V0 < 0.038 ABUT<90 OPPOSITE REGION NOT CONNECTED
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Vy and Mxy (including M1) at different net, except V1 in INST region >= 0.037um
     When:
     1. Mxy (including M1) enclosure of Vy < 0.003um
     2. Mxy+1/1.25xMy width > 0.038um
A: 
V1_S_5 {
@ Space between Vy and Mxy (including M1) at different net, except V1 in INST region >= 0.037um
@ When:
@ 1. Mxy (including M1) enclosure of Vy < 0.003um
@ 2. Mxy+1/1.25xMy width > 0.038um
 y1 = V1 AND (V1N NOT OUTSIDE (M2 WITH WIDTH > 0.038))
 y2 = EXT [y1] M1 < 0.037 ABUT<90 MEASURE ALL NOT CONNECTED
 y3 = ENC [y2] M1 < 0.003 ABUT<90 OPPOSITE
 err1 = EXT (y1 COIN EDGE y3) M1 < 0.037 ABUT<90 MEASURE ALL NOT CONNECTED REGION
 // 
 err1 NOT INSIDE INST
}

Q:  Projection space between Vy and the Mxy+1/1.25xMy concave corner >= 0.029um
     When:
     1. Mxy+1/1.25xMy width < 0.035um, form one edge of concave corner
     2. Vy enclosure by Mxy+1/1.25xMy <= 0.002um at opposite side of Mxy+1/1.25xMy concave corner
     3. The length of another edge of concave corner > 0.005um
    Via inside the cross region with vertex enclosure <= 0.001um is not allowed
A: 
Vy1_S_6 {
@ Projection space between Vy and the Mxy+1/1.25xMy concave corner >= 0.029um
@ When:
@ 1. Mxy+1/1.25xMy width < 0.035um, form one edge of concave corner
@ 2. Vy enclosure by Mxy+1/1.25xMy <= 0.002um at opposite side of Mxy+1/1.25xMy concave corner
@ 3. The length of another edge of concave corner > 0.005um
@ Via inside the cross region with vertex enclosure <= 0.001um is not allowed
 // for via not totally inside cross region
 min_enc_met_side = M2 TOUCH EDGE (ENC V1N [M2] <= 0.002 ABUT<90 OPPOSITE)
 min_wid_met_side = M2 TOUCH EDGE (INT min_enc_met_side [M2_convex_lt_two_edges] < 0.035 OPPOSITE)
 min_wid_met_corn = EXT min_wid_met_side (LENGTH M2_convex_lt_two_edges > 0.005) < 0.001 ABUT INTERSECTING ONLY REGION
 min_wid_met_side_c = min_wid_met_side TOUCH EDGE min_wid_met_corn
 min_wid_met_corn_c = M2 TOUCH EDGE min_wid_met_corn
 min_wid_met_side_opp = M2 TOUCH EDGE (INT min_wid_met_side_c [M2] < 0.035 OPPOSITE)
 min_wid_met_area_opp = INT min_wid_met_side_c M2 < 0.035 OPPOSITE REGION
 // 
 min_enc_via_s = ENC [V1N] min_wid_met_side_opp <= 0.002 ABUT<90 OPPOSITE
 min_enc_via_c = V1N WITH EDGE min_enc_via_s
 min_met_corn = min_wid_met_corn_c COIN EDGE (M2 ENCLOSE min_enc_via_c)
 via_err_edge_outer = EXT [min_enc_via_c] min_met_corn < 0.029 ABUT<90 OPPOSITE EXTENDED 0.035-0.032+GLOBAL_TOLERANCE MEASURE ALL
 via_err_edge_inner = EXT [min_enc_via_c] min_wid_met_corn < 0.029 ABUT<90 OPPOSITE EXTENDED 0.035-0.032+GLOBAL_TOLERANCE EXCLUDE SHIELDED
 via_err_edge_all = OR EDGE via_err_edge_outer via_err_edge_inner
 err1 = min_enc_via_c WITH EDGE via_err_edge_all
 err1 NOT INSIDE SealR_NOT_BULK
 // 
 min_wid_met_all = INT M2 M2_convex_lt_two_edges < 0.035 OPPOSITE REGION
 // SETLAYER min_wid_met_rvs = DRC:1 NOT M2
 // SETLAYER err2 = (V1N INTERACT min_wid_met_all SINGULAR ALSO) INTERACT min_wid_met_rvs SINGULAR ONLY // point touch via
 err2 = ENC (V1N INTERACT min_wid_met_all SINGULAR ALSO) M2 < 0.0005 SINGULAR REGION
 err2 NOT INSIDE SealR_NOT_BULK
 // 
 met_corner_corss = (EXT M2_convex_lt_two_edges M2 < 0.001 ABUT==90 INTERSECTING ONLY REGION) COIN EDGE min_wid_met_all
 via_inside_corss = ((V1N NOT WITH EDGE (ENC [V1N] M2 < 0.001 ABUT>0<90 SINGULAR)) NOT WITH EDGE via_err_edge_all) NOT INSIDE min_wid_met_all
 via_inside_corss_enc = EXT [via_inside_corss] met_corner_corss <= 0.001 PROJ==0 PARA ONLY OPPOSITE EXTENDED 0.002
 err3 = via_inside_corss INTERACT (INT via_inside_corss_enc <= 0.032 OPPOSITE REGION) // via inside cross must be enclosed by the short side of metal (width< 0.035) >= 0.001
 err3 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Vy bar (width = 0.1/0.45um) and (Vy or RVy) >= 0.34um
A: 
Vy1_S_8 {
@ Space between Vy bar (width = 0.1/0.45um) and (Vy or RVy) >= 0.34um
 err1 = EXT (OR V1_BAR_100_all V1_BAR_450_all) V1_SR < 0.34 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between two Vy bar (width = 0.1/0.45um), DRC only check the space between parallel edge when the Vy bar is inside MARKS >= 0.55um
A: 
Vy1_S_9 {
@ Space between two Vy bar (width = 0.1/0.45um), DRC only check the space between parallel edge when the Vy bar is inside MARKS >= 0.55um
 // SETLAYER waive_shape = EXT (OR V1_BAR_100_all V1_BAR_450_all) < 0.55 ABUT<90 SINGULAR REGION INTERSECTING ONLY
 err1 = EXT ((OR V1_BAR_100_all V1_BAR_450_all) INTERACT MARKS_MARKG) < 0.55 ANGLED!=1 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//Vy2

Q: Space between two (Vy or RVy), except Vy.S.1a >= 0.069um
A: 
Vy2_S_1 {
@ Space between two (Vy or RVy), except Vy.S.1a >= 0.069um
 err1 = EXT V2_SR < 0.069 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between two square Vy when PRL > -0.032um, except V1 in INST region, DRC only flag the point-to-point space when PRL <= 0. >= 0.082um
A: 
Vy2_S_2 {
@ Space between two square Vy when PRL > -0.032um, except V1 in INST region, DRC only flag the point-to-point space when PRL <= 0. >= 0.082um
 err1 = EXT V2N < 0.082 ABUT<90 OPPOSITE EXTENDED 0.001 REGION
 err2_RAW = EXT V2N < 0.082 ABUT<90 CORNER TO CORNER
 err2_TMP = DFM PROPERTY err2_RAW [-= (EWXP(err2_RAW) < 0.032 || EWYP(err2_RAW) < 0.032) ? 1 : 0] > 0
 err2 = DFM COPY err2_TMP REGION
 // 
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between square Vy and RVy >= 0.082um
A: 
Vy2_S_3 {
@ Space between square Vy and RVy >= 0.082um
 err1 = EXT V2N RV2 < 0.082 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between Vy and Vy-1 (including V0) at different net and PRL > 0um. >= 0.038um
    When:
    Mxy+1/1.25xMy enclosure of Vy > 0um
A: 
Vy2_S_4 {
@ Space between Vy and Vy-1 (including V0) at different net and PRL > 0um. >= 0.038um
@ When:
@ Mxy+1/1.25xMy enclosure of Vy > 0um
 // (include V0)
 chk_via = (V2 AND (V2N INSIDE M3)) NOT COIN EDGE M3
 err1 = EXT chk_via V1 < 0.038 ABUT<90 OPPOSITE REGION NOT CONNECTED
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between Vy and Mxy (including M1) at different net, except V1 in INST region >= 0.037um
    When:
    1. Mxy (including M1) enclosure of Vy < 0.003um
    2. Mxy+1/1.25xMy width > 0.038um
A: 
Vy2_S_5 {
@ Space between Vy and Mxy (including M1) at different net, except V1 in INST region >= 0.037um
@ When:
@ 1. Mxy (including M1) enclosure of Vy < 0.003um
@ 2. Mxy+1/1.25xMy width > 0.038um
 y1 = V2 AND (V2N NOT OUTSIDE (M3 WITH WIDTH > 0.038))
 y2 = EXT [y1] M2 < 0.037 ABUT<90 MEASURE ALL NOT CONNECTED
 y3 = ENC [y2] M2 < 0.003 ABUT<90 OPPOSITE
 err1 = EXT (y1 COIN EDGE y3) M2 < 0.037 ABUT<90 MEASURE ALL NOT CONNECTED REGION
 // 
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Projection space between Vy and the Mxy+1/1.25xMy concave corner >= 0.029um
     When:
    1. Mxy+1/1.25xMy width < 0.035um, form one edge of concave corner
    2. Vy enclosure by Mxy+1/1.25xMy <= 0.002um at opposite side of Mxy+1/1.25xMy concave corner
    3. The length of another edge of concave corner > 0.005um
    Via inside the cross region with vertex enclosure <= 0.001um is not allowed
A: 
Vy2_S_6 {
@ Projection space between Vy and the Mxy+1/1.25xMy concave corner >= 0.029um
@ When:
@ 1. Mxy+1/1.25xMy width < 0.035um, form one edge of concave corner
@ 2. Vy enclosure by Mxy+1/1.25xMy <= 0.002um at opposite side of Mxy+1/1.25xMy concave corner
@ 3. The length of another edge of concave corner > 0.005um
@ Via inside the cross region with vertex enclosure <= 0.001um is not allowed
 // for via not totally inside cross region
 min_enc_met_side = M3 TOUCH EDGE (ENC V2N [M3] <= 0.002 ABUT<90 OPPOSITE)
 min_wid_met_side = M3 TOUCH EDGE (INT min_enc_met_side [M3_convex_lt_two_edges] < 0.035 OPPOSITE)
 min_wid_met_corn = EXT min_wid_met_side (LENGTH M3_convex_lt_two_edges > 0.005) < 0.001 ABUT INTERSECTING ONLY REGION
 min_wid_met_side_c = min_wid_met_side TOUCH EDGE min_wid_met_corn
 min_wid_met_corn_c = M3 TOUCH EDGE min_wid_met_corn
 min_wid_met_side_opp = M3 TOUCH EDGE (INT min_wid_met_side_c [M3] < 0.035 OPPOSITE)
 min_wid_met_area_opp = INT min_wid_met_side_c M3 < 0.035 OPPOSITE REGION
 // 
 min_enc_via_s = ENC [V2N] min_wid_met_side_opp <= 0.002 ABUT<90 OPPOSITE
 min_enc_via_c = V2N WITH EDGE min_enc_via_s
 min_met_corn = min_wid_met_corn_c COIN EDGE (M3 ENCLOSE min_enc_via_c)
 via_err_edge_outer = EXT [min_enc_via_c] min_met_corn < 0.029 ABUT<90 OPPOSITE EXTENDED 0.035-0.032+GLOBAL_TOLERANCE MEASURE ALL
 via_err_edge_inner = EXT [min_enc_via_c] min_wid_met_corn < 0.029 ABUT<90 OPPOSITE EXTENDED 0.035-0.032+GLOBAL_TOLERANCE EXCLUDE SHIELDED
 via_err_edge_all = OR EDGE via_err_edge_outer via_err_edge_inner
 err1 = min_enc_via_c WITH EDGE via_err_edge_all
 err1 NOT INSIDE SealR_NOT_BULK
 // 
 min_wid_met_all = INT M3 M3_convex_lt_two_edges < 0.035 OPPOSITE REGION
 // SETLAYER min_wid_met_rvs = DRC:1 NOT M3
 // SETLAYER err2 = (V2N INTERACT min_wid_met_all SINGULAR ALSO) INTERACT min_wid_met_rvs SINGULAR ONLY // point touch via
 err2 = ENC (V2N INTERACT min_wid_met_all SINGULAR ALSO) M3 < 0.0005 SINGULAR REGION
 err2 NOT INSIDE SealR_NOT_BULK
 // 
 met_corner_corss = (EXT M3_convex_lt_two_edges M3 < 0.001 ABUT==90 INTERSECTING ONLY REGION) COIN EDGE min_wid_met_all
 via_inside_corss = ((V2N NOT WITH EDGE (ENC [V2N] M3 < 0.001 ABUT>0<90 SINGULAR)) NOT WITH EDGE via_err_edge_all) NOT INSIDE min_wid_met_all
 via_inside_corss_enc = EXT [via_inside_corss] met_corner_corss <= 0.001 PROJ==0 PARA ONLY OPPOSITE EXTENDED 0.002
 err3 = via_inside_corss INTERACT (INT via_inside_corss_enc <= 0.032 OPPOSITE REGION) // via inside cross must be enclosed by the short side of metal (width< 0.035) >= 0.001
 err3 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Vy bar (width = 0.1/0.45um) and (Vy or RVy) >= 0.34um
A: 
Vy2_S_8 {
@ Space between Vy bar (width = 0.1/0.45um) and (Vy or RVy) >= 0.34um
 err1 = EXT (OR V2_BAR_100_all V2_BAR_450_all) V2_SR < 0.34 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between two Vy bar (width = 0.1/0.45um), DRC only check the space between parallel edge when the Vy bar is inside MARKS >= 0.55um
A: 
Vy2_S_9 {
@ Space between two Vy bar (width = 0.1/0.45um), DRC only check the space between parallel edge when the Vy bar is inside MARKS >= 0.55um
 // SETLAYER waive_shape = EXT (OR V2_BAR_100_all V2_BAR_450_all) < 0.55 ABUT<90 SINGULAR REGION INTERSECTING ONLY
 err1 = EXT ((OR V2_BAR_100_all V2_BAR_450_all) INTERACT MARKS_MARKG) < 0.55 ANGLED!=1 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//Vy3

Q: Space between two (Vy or RVy) when under 1.25xMy >= 0.066um
A: 
Vy3_S_1a {
@ Space between two (Vy or RVy) when under 1.25xMy >= 0.066um
 err1 = EXT V3_SR < 0.066 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:   Space between two square Vy when PRL > -0.032um, except V1 in INST region, DRC only flag the point-to-point space when PRL <= 0. >= 0.082um
A: 
Vy3_S_2 {
@ Space between two square Vy when PRL > -0.032um, except V1 in INST region, DRC only flag the point-to-point space when PRL <= 0. >= 0.082um
 err1 = EXT V3N < 0.082 ABUT<90 OPPOSITE EXTENDED 0.001 REGION
 err2_RAW = EXT V3N < 0.082 ABUT<90 CORNER TO CORNER
 err2_TMP = DFM PROPERTY err2_RAW [-= (EWXP(err2_RAW) < 0.032 || EWYP(err2_RAW) < 0.032) ? 1 : 0] > 0
 err2 = DFM COPY err2_TMP REGION
 // 
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between square Vy and RVy >= 0.082um
A: 
Vy3_S_3 {
@ Space between square Vy and RVy >= 0.082um
 err1 = EXT V3N RV3 < 0.082 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Vy and Vy-1 (including V0) at different net and PRL > 0um. >= 0.038um
     When:
     Mxy+1/1.25xMy enclosure of Vy > 0um
A: 
Vy3_S_4 {
@ Space between Vy and Vy-1 (including V0) at different net and PRL > 0um. >= 0.038um
@ When:
@ Mxy+1/1.25xMy enclosure of Vy > 0um
 // (include V0)
 chk_via = (V3 AND (V3N INSIDE M4)) NOT COIN EDGE M4
 err1 = EXT chk_via V2 < 0.038 ABUT<90 OPPOSITE REGION NOT CONNECTED
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Vy and Mxy (including M1) at different net, except V1 in INST region >= 0.037um
    When:
    1. Mxy (including M1) enclosure of Vy < 0.003um
    2. Mxy+1/1.25xMy width > 0.038um
A: 
Vy3_S_5 {
@ Space between Vy and Mxy (including M1) at different net, except V1 in INST region >= 0.037um
@ When:
@ 1. Mxy (including M1) enclosure of Vy < 0.003um
@ 2. Mxy+1/1.25xMy width > 0.038um
 y1 = V3 AND (V3N NOT OUTSIDE (M4 WITH WIDTH > 0.038))
 y2 = EXT [y1] M3 < 0.037 ABUT<90 MEASURE ALL NOT CONNECTED
 y3 = ENC [y2] M3 < 0.003 ABUT<90 OPPOSITE
 err1 = EXT (y1 COIN EDGE y3) M3 < 0.037 ABUT<90 MEASURE ALL NOT CONNECTED REGION
 // 
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Projection space between Vy and the Mxy+1/1.25xMy concave corner >= 0.029um
     When:
    1. Mxy+1/1.25xMy width < 0.035um, form one edge of concave corner
    2. Vy enclosure by Mxy+1/1.25xMy <= 0.002um at opposite side of Mxy+1/1.25xMy concave corner
    3. The length of another edge of concave corner > 0.005um
    Via inside the cross region with vertex enclosure <= 0.001um is not allowed
A: 
Vy3_S_6 {
@ Projection space between Vy and the Mxy+1/1.25xMy concave corner >= 0.029um
@ When:
@ 1. Mxy+1/1.25xMy width < 0.035um, form one edge of concave corner
@ 2. Vy enclosure by Mxy+1/1.25xMy <= 0.002um at opposite side of Mxy+1/1.25xMy concave corner
@ 3. The length of another edge of concave corner > 0.005um
@ Via inside the cross region with vertex enclosure <= 0.001um is not allowed
 // for via not totally inside cross region
 min_enc_met_side = M4 TOUCH EDGE (ENC V3N [M4] <= 0.002 ABUT<90 OPPOSITE)
 min_wid_met_side = M4 TOUCH EDGE (INT min_enc_met_side [M4_convex_lt_two_edges] < 0.035 OPPOSITE)
 min_wid_met_corn = EXT min_wid_met_side (LENGTH M4_convex_lt_two_edges > 0.005) < 0.001 ABUT INTERSECTING ONLY REGION
 min_wid_met_side_c = min_wid_met_side TOUCH EDGE min_wid_met_corn
 min_wid_met_corn_c = M4 TOUCH EDGE min_wid_met_corn
 min_wid_met_side_opp = M4 TOUCH EDGE (INT min_wid_met_side_c [M4] < 0.035 OPPOSITE)
 min_wid_met_area_opp = INT min_wid_met_side_c M4 < 0.035 OPPOSITE REGION
 // 
 min_enc_via_s = ENC [V3N] min_wid_met_side_opp <= 0.002 ABUT<90 OPPOSITE
 min_enc_via_c = V3N WITH EDGE min_enc_via_s
 min_met_corn = min_wid_met_corn_c COIN EDGE (M4 ENCLOSE min_enc_via_c)
 via_err_edge_outer = EXT [min_enc_via_c] min_met_corn < 0.029 ABUT<90 OPPOSITE EXTENDED 0.035-0.032+GLOBAL_TOLERANCE MEASURE ALL
 via_err_edge_inner = EXT [min_enc_via_c] min_wid_met_corn < 0.029 ABUT<90 OPPOSITE EXTENDED 0.035-0.032+GLOBAL_TOLERANCE EXCLUDE SHIELDED
 via_err_edge_all = OR EDGE via_err_edge_outer via_err_edge_inner
 err1 = min_enc_via_c WITH EDGE via_err_edge_all
 err1 NOT INSIDE SealR_NOT_BULK
 // 
 min_wid_met_all = INT M4 M4_convex_lt_two_edges < 0.035 OPPOSITE REGION
 // SETLAYER min_wid_met_rvs = DRC:1 NOT M4
 // SETLAYER err2 = (V3N INTERACT min_wid_met_all SINGULAR ALSO) INTERACT min_wid_met_rvs SINGULAR ONLY // point touch via
 err2 = ENC (V3N INTERACT min_wid_met_all SINGULAR ALSO) M4 < 0.0005 SINGULAR REGION
 err2 NOT INSIDE SealR_NOT_BULK
 // 
 met_corner_corss = (EXT M4_convex_lt_two_edges M4 < 0.001 ABUT==90 INTERSECTING ONLY REGION) COIN EDGE min_wid_met_all
 via_inside_corss = ((V3N NOT WITH EDGE (ENC [V3N] M4 < 0.001 ABUT>0<90 SINGULAR)) NOT WITH EDGE via_err_edge_all) NOT INSIDE min_wid_met_all
 via_inside_corss_enc = EXT [via_inside_corss] met_corner_corss <= 0.001 PROJ==0 PARA ONLY OPPOSITE EXTENDED 0.002
 err3 = via_inside_corss INTERACT (INT via_inside_corss_enc <= 0.032 OPPOSITE REGION) // via inside cross must be enclosed by the short side of metal (width< 0.035) >= 0.001
 err3 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between two square Vy with PRL >= -0.089um. >= 0.099um
     When:
    1) Vy enclosure by 1.25xMy <= 0.008um at opposite side
    2) Space between Vy and 1.25xMy <= 0.052um with PRL >= -0.047um at opposite side
    DRC doesn't flag Vy meet 1) and 2) condition on both sides
A: 
Vy3_S_7 {
@ Space between two square Vy with PRL >= -0.089um. >= 0.099um
@ When:
@ 1) Vy enclosure by 1.25xMy <= 0.008um at opposite side
@ 2) Space between Vy and 1.25xMy <= 0.052um with PRL >= -0.047um at opposite side
@ DRC doesn't flag Vy meet 1) and 2) condition on both sides
 ncp_axis = ANGLE (ENC [V3N] M4 <= 0.008 ABUT<90 OPPOSITE) == 0
 // only exist along cp direction
 y1 = ANGLE (V3N TOUCH EDGE ncp_axis) == 0
 y2 = EXT [y1] M4 <= 0.052 ABUT<90 OPPOSITE EXTENDED 0.047+GLOBAL_TOLERANCE MEASURE ALL
 y3 = V3N TOUCH EDGE y2
 y4 = INT [V3N] y3 <= 0.032 ABUT<90 OPPOSITE
 err1 = EXT (y4 NOT TOUCH EDGE y2) V3_SR < 0.099 ABUT<90 OPPOSITE EXTENDED 0.089+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between Vy bar (width = 0.1/0.45um) and (Vy or RVy) >= 0.34um
A: 
Vy3_S_8 {
@ Space between Vy bar (width = 0.1/0.45um) and (Vy or RVy) >= 0.34um
 err1 = EXT (OR V3_BAR_100_all V3_BAR_450_all) V3_SR < 0.34 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between two Vy bar (width = 0.1/0.45um), DRC only check the space between parallel edge when the Vy bar is inside MARKS >= 0.55um
A: 
Vy3_S_9 {
@ Space between two Vy bar (width = 0.1/0.45um), DRC only check the space between parallel edge when the Vy bar is inside MARKS >= 0.55um
 // SETLAYER waive_shape = EXT (OR V3_BAR_100_all V3_BAR_450_all) < 0.55 ABUT<90 SINGULAR REGION INTERSECTING ONLY
 err1 = EXT ((OR V3_BAR_100_all V3_BAR_450_all) INTERACT MARKS_MARKG) < 0.55 ANGLED!=1 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//RVy1

Q: Space between RVy and (Vy-1 or RVy-1) (including V0 and RV0) at different net and PRL > 0um, when Mxy+1/1.25xMy enclosure of RVy > 0um. >= 0.037um
A: 
RVy1_S_1 {
@ Space between RVy and (Vy-1 or RVy-1) (including V0 and RV0) at different net and PRL > 0um, when Mxy+1/1.25xMy enclosure of RVy > 0um. >= 0.037um
 chk_via = (V1 INTERACT RV1) NOT COIN EDGE M2
 err1 = EXT chk_via V0 < 0.037 ABUT<90 OPPOSITE REGION NOT CONNECTED
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between RVy >= 0.082um
A: 
RVy1_S_1a {
@ Space between RVy >= 0.082um
 err1 = EXT RV1 < 0.082 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between RVy and Mxy (including M1) at different net >= 0.037um
    When:
    1. Mxy (including M1) enclosure of RVy < 0.003um
    2. Mxy+1/1.25xMy width > 0.038um
A: 
RVy1_S_2 {
@ Space between RVy and Mxy (including M1) at different net >= 0.037um
@ When:
@ 1. Mxy (including M1) enclosure of RVy < 0.003um
@ 2. Mxy+1/1.25xMy width > 0.038um
 y1 = V1 AND (RV1 NOT OUTSIDE (M2 WITH WIDTH > 0.038))
 y2 = EXT [y1] M1 < 0.037 ABUT<90 MEASURE ALL NOT CONNECTED
 y3 = ENC [y2] M1 < 0.003 ABUT<90 OPPOSITE
 err1 = EXT (y1 COIN EDGE y3) M1 < 0.037 ABUT<90 MEASURE ALL NOT CONNECTED REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between the short side of RVy and Vy when PRL > -0.032um. >= 0.108um
A: 
RVy1_S_4 {
@ Space between the short side of RVy and Vy when PRL > -0.032um. >= 0.108um
 err1 = EXT RV1_W V1_SR < 0.108 ABUT<90 OPPOSITE EXTENDED 0.032 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between the long side of RVy (PRL > 0um, with one Mxy+1/1.25xMy in between) >= 0.115um
A: 
RVy1_S_5 {
@ Space between the long side of RVy (PRL > 0um, with one Mxy+1/1.25xMy in between) >= 0.115um
 ERRS_AREA = EXT RV1_L < 0.115 ABUT<90 OPPOSITE REGION
 // Also check 072 Line to 080 Line
 ERRS_EDGE = EXT [RV1_L] < 0.115 ABUT<90 OPPOSITE
 ERRS_EDGE_EXP = EXPAND EDGE ERRS_EDGE INSIDE BY 0.001
 ERRS_BULK_MET = (ERRS_AREA OR ERRS_EDGE_EXP) AND M2
 err1_TMP = (ERRS_AREA OR ERRS_EDGE_EXP) INTERACT ERRS_BULK_MET >= 3
 err1 = ERRS_AREA AND err1_TMP
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//RVy2

Q: Space between RVy and (Vy-1 or RVy-1) (including V0 and RV0) at different net and PRL > 0um, when Mxy+1/1.25xMy enclosure of RVy > 0um. >= 0.037um
A: 
RVy2_S_1 {
@ Space between RVy and (Vy-1 or RVy-1) (including V0 and RV0) at different net and PRL > 0um, when Mxy+1/1.25xMy enclosure of RVy > 0um. >= 0.037um
 chk_via = (V2 INTERACT RV2) NOT COIN EDGE M3
 err1 = EXT chk_via V1 < 0.037 ABUT<90 OPPOSITE REGION NOT CONNECTED
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between RVy >= 0.082um
A: 
RVy2_S_1a {
@ Space between RVy >= 0.082um
 err1 = EXT RV2 < 0.082 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between RVy and Mxy (including M1) at different net >= 0.037um
     When:
     1. Mxy (including M1) enclosure of RVy < 0.003um
     2. Mxy+1/1.25xMy width > 0.038um
A: 
RVy2_S_2 {
@ Space between RVy and Mxy (including M1) at different net >= 0.037um
@ When:
@ 1. Mxy (including M1) enclosure of RVy < 0.003um
@ 2. Mxy+1/1.25xMy width > 0.038um
 y1 = V2 AND (RV2 NOT OUTSIDE (M3 WITH WIDTH > 0.038))
 y2 = EXT [y1] M2 < 0.037 ABUT<90 MEASURE ALL NOT CONNECTED
 y3 = ENC [y2] M2 < 0.003 ABUT<90 OPPOSITE
 err1 = EXT (y1 COIN EDGE y3) M2 < 0.037 ABUT<90 MEASURE ALL NOT CONNECTED REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between the short side of RVy and Vy when PRL > -0.032um. >= 0.108um
A: 
RVy2_S_4 {
@ Space between the short side of RVy and Vy when PRL > -0.032um. >= 0.108um
 err1 = EXT RV2_W V2_SR < 0.108 ABUT<90 OPPOSITE EXTENDED 0.032 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between the long side of RVy (PRL > 0um, with one Mxy+1/1.25xMy in between) >= 0.115um
A: 
RVy2_S_5 {
@ Space between the long side of RVy (PRL > 0um, with one Mxy+1/1.25xMy in between) >= 0.115um
 ERRS_AREA = EXT RV2_L < 0.115 ABUT<90 OPPOSITE REGION
 // Also check 072 Line to 080 Line
 ERRS_EDGE = EXT [RV2_L] < 0.115 ABUT<90 OPPOSITE
 ERRS_EDGE_EXP = EXPAND EDGE ERRS_EDGE INSIDE BY 0.001
 ERRS_BULK_MET = (ERRS_AREA OR ERRS_EDGE_EXP) AND M3
 err1_TMP = (ERRS_AREA OR ERRS_EDGE_EXP) INTERACT ERRS_BULK_MET >= 3
 err1 = ERRS_AREA AND err1_TMP
 err1 NOT INSIDE SealR_NOT_BULK
}

//RVy3

Q: Space between RVy and (Vy-1 or RVy-1) (including V0 and RV0) at different net and PRL > 0um, when Mxy+1/1.25xMy enclosure of RVy > 0um. >= 0.037um
A: 
RVy3_S_1 {
@ Space between RVy and (Vy-1 or RVy-1) (including V0 and RV0) at different net and PRL > 0um, when Mxy+1/1.25xMy enclosure of RVy > 0um. >= 0.037um
 chk_via = (V3 INTERACT RV3) NOT COIN EDGE M4
 err1 = EXT chk_via V2 < 0.037 ABUT<90 OPPOSITE REGION NOT CONNECTED
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between RVy >= 0.082um
A: 
RVy3_S_1a {
@ Space between RVy >= 0.082um
 err1 = EXT RV3 < 0.082 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between RVy and Mxy (including M1) at different net >= 0.037um
    When:
    1. Mxy (including M1) enclosure of RVy < 0.003um
    2. Mxy+1/1.25xMy width > 0.038um
A: 
RVy3_S_2 {
@ Space between RVy and Mxy (including M1) at different net >= 0.037um
@ When:
@ 1. Mxy (including M1) enclosure of RVy < 0.003um
@ 2. Mxy+1/1.25xMy width > 0.038um
 y1 = V3 AND (RV3 NOT OUTSIDE (M4 WITH WIDTH > 0.038))
 y2 = EXT [y1] M3 < 0.037 ABUT<90 MEASURE ALL NOT CONNECTED
 y3 = ENC [y2] M3 < 0.003 ABUT<90 OPPOSITE
 err1 = EXT (y1 COIN EDGE y3) M3 < 0.037 ABUT<90 MEASURE ALL NOT CONNECTED REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between two RVy with PRL > -0.09um. >= 0.099um
     When:
    1. RVy enclosure by 1.25xMy < 0.01um at opposite side
    2. Space between RVy and 1.25xMy <= 0.052um with PRL >= -0.046um at opposite side
    DRC doesn't flag RVy meet 1) and 2) condition on both sides
A: 
RVy3_S_3 {
@ Space between two RVy with PRL > -0.09um. >= 0.099um
@ When:
@ 1. RVy enclosure by 1.25xMy < 0.01um at opposite side
@ 2. Space between RVy and 1.25xMy <= 0.052um with PRL >= -0.046um at opposite side
@ DRC doesn't flag RVy meet 1) and 2) condition on both sides
 ncp_axis = ANGLE (ENC [RV3] M4 < 0.01 ABUT<90 OPPOSITE) == 0
 y1 = ANGLE (RV3 TOUCH EDGE ncp_axis) == 0
 y2 = EXT [y1] M4 <= 0.052 ABUT<90 OPPOSITE EXTENDED 0.046+GLOBAL_TOLERANCE MEASURE ALL
 y3 = RV3 TOUCH EDGE y2
 y4 = INT [RV3] y3 <= 0.032 ABUT<90 OPPOSITE
 err1 = EXT (y4 NOT TOUCH EDGE y2) V3_SR < 0.099 ABUT<90 OPPOSITE EXTENDED 0.09 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between the short side of RVy and Vy when PRL > -0.032um. >= 0.108um
A: 
RVy3_S_4 {
@ Space between the short side of RVy and Vy when PRL > -0.032um. >= 0.108um
 err1 = EXT RV3_W V3_SR < 0.108 ABUT<90 OPPOSITE EXTENDED 0.032 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between the long side of RVy (PRL > 0um, with one Mxy+1/1.25xMy in between) >= 0.115um
A: 
RVy3_S_5 {
@ Space between the long side of RVy (PRL > 0um, with one Mxy+1/1.25xMy in between) >= 0.115um
 ERRS_AREA = EXT RV3_L < 0.115 ABUT<90 OPPOSITE REGION
 // Also check 072 Line to 080 Line
 ERRS_EDGE = EXT [RV3_L] < 0.115 ABUT<90 OPPOSITE
 ERRS_EDGE_EXP = EXPAND EDGE ERRS_EDGE INSIDE BY 0.001
 ERRS_BULK_MET = (ERRS_AREA OR ERRS_EDGE_EXP) AND M4
 err1_TMP = (ERRS_AREA OR ERRS_EDGE_EXP) INTERACT ERRS_BULK_MET >= 3
 err1 = ERRS_AREA AND err1_TMP
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//125xmy4

Q: 1.25xMy space >= 0.040um
A: 
125xmy4_S_1 {
@ 1.25xMy space >= 0.040um
 err1 = EXT M4 < 0.04 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy when one or both 1.25xMy width >= 0.201um when PRL >= -0.139um. >= 0.139um
A: 
125xmy4_S_2 {
@ Space between 1.25xMy when one or both 1.25xMy width >= 0.201um when PRL >= -0.139um. >= 0.139um
 chk_Mn = M4 WITH WIDTH >= 0.201
 err1 = EXT M4 chk_Mn < 0.139 ABUT<90 OPPOSITE EXTENDED 0.139+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy when one or both 1.25xMy width >= 0.282um when PRL > 0.16um. >= 0.199um
A: 
125xmy4_S_3 {
@ Space between 1.25xMy when one or both 1.25xMy width >= 0.282um when PRL > 0.16um. >= 0.199um
 mets_RAW = (M4 WITH WIDTH >= 0.201) WITH WIDTH >= 0.282
 mets_sps_ERRS = EXT mets_RAW M4 < 0.199 ABUT<90 OPPOSITE
 mets_sps_AREA = EXT mets_RAW M4 < 0.199 ABUT<90 OPPOSITE REGION
 err1 = DFM PROPERTY mets_sps_AREA mets_sps_ERRS OVERLAP ABUT ALSO MULTI [-= EC(mets_sps_ERRS)] > 0.16
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy when one or both 1.25xMy width > 0.5um when PRL >= -0.199um. >= 0.199um
A: 
125xmy4_S_4 {
@ Space between 1.25xMy when one or both 1.25xMy width > 0.5um when PRL >= -0.199um. >= 0.199um
 chk_Mn = (M4 WITH WIDTH >= 0.201) WITH WIDTH > 0.5
 err1 = EXT M4 chk_Mn < 0.199 ABUT<90 OPPOSITE EXTENDED 0.199+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy when one or both 1.25xMy width > 1.35um when PRL > 1.35um. >= 0.448um
A: 
125xmy4_S_5 {
@ Space between 1.25xMy when one or both 1.25xMy width > 1.35um when PRL > 1.35um. >= 0.448um
 met_wid_all = M4 WITH WIDTH >= 1.35+GLOBAL_TOLERANCE
 met_err_RAW = EXT M4 met_wid_all < 0.448 OPPOSITE REGION MEASURE ALL
 met_err_CRN = EXT (ANGLE M4 > 44 < 46) met_wid_all < 0.448 OPPOSITE1 REGION MEASURE ALL
 err1 = met_err_RAW ENCLOSE RECTANGLE 0.001 1.351 ORTHOGONAL ONLY
 err2 = met_err_CRN ENCLOSE RECTANGLE 0.04 1.351
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy in CP direction when one or both 1.25xMy width = 0.04um. = 0.040, >= 0.07um
A: 
125xmy4_S_6 {
@ Space between 1.25xMy in CP direction when one or both 1.25xMy width = 0.04um. = 0.040, >= 0.07um
 err1_TMP = DFM SPACE M4 125xmy4_040 < 0.04 BY EXT VERTICAL
 err2_TMP = DFM SPACE M4 125xmy4_040 > 0.04 < 0.07 BY EXT VERTICAL
 // 
 waive_TMP = ANGLE 125xmy4_060 == 0
 waive_EDG = EXT waive_TMP 125xmy4_040 == 0.07 ABUT<90 OPPOSITE
 err1 = DFM COPY err1_TMP EDGE
 // NOT COIN EDGE (DFM COPY waive_EDG EDGE)
 err2 = DFM COPY err2_TMP EDGE
 // NOT COIN EDGE (DFM COPY waive_EDG EDGE)
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q:  Space between 1.25xMy in CP direction when one or both 1.25xMy width = 0.042um. = 0.048, >= 0.07um
A: 
125xmy4_S_6a {
@ Space between 1.25xMy in CP direction when one or both 1.25xMy width = 0.042um. = 0.048, >= 0.07um
 err1 = EXT M4_h_edges 125xmy4_042 < 0.048 ABUT<90 OPPOSITE REGION
 err2 = EXT M4_h_edges 125xmy4_042 > 0.048 < 0.07 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy in CP direction when one or both 1.25xMy width = 0.044um. = 0.046, >= 0.07um
A: 
125xmy4_S_7 {
@ Space between 1.25xMy in CP direction when one or both 1.25xMy width = 0.044um. = 0.046, >= 0.07um
 err1 = EXT M4_h_edges 125xmy4_044 < 0.046 ABUT<90 OPPOSITE REGION
 err2 = EXT M4_h_edges 125xmy4_044 > 0.046 < 0.07 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy in CP direction when one or both 1.25xMy width = 0.046um. = 0.046, >= 0.07um
A: 
125xmy4_S_7a {
@ Space between 1.25xMy in CP direction when one or both 1.25xMy width = 0.046um. = 0.046, >= 0.07um
 err1 = EXT M4_h_edges 125xmy4_046 < 0.046 ABUT<90 OPPOSITE REGION
 err2 = EXT M4_h_edges 125xmy4_046 > 0.046 < 0.07 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy in CP direction when one or both 1.25xMy width = 0.06um) = 0.04, 0.046, >= 0.06um
A: 
125xmy4_S_8 {
@ Space between 1.25xMy in CP direction when one or both 1.25xMy width = 0.06um) = 0.04, 0.046, >= 0.06um
 waive_s_6a_chk = ANGLE 125xmy4_060 == 0
 waive_s_6a = DFM COPY (EXT waive_s_6a_chk 125xmy4_040 == 0.070 ABUT<90 OPPOSITE) EDGE
 bad_1 = DFM SPACE 125xmy4_060 M4 < 0.040 BY EXT VERTICAL
 bad_2 = DFM SPACE 125xmy4_060 M4 > 0.040 < 0.046 BY EXT VERTICAL
 bad_3 = DFM SPACE 125xmy4_060 M4 > 0.046 < 0.060 BY EXT VERTICAL
 err1 = DFM COPY bad_1 EDGE
 // NOT COIN EDGE waive_s_6a
 err2 = DFM COPY bad_2 EDGE
 // NOT COIN EDGE waive_s_6a
 err3 = DFM COPY bad_3 EDGE
 // NOT COIN EDGE waive_s_6a
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
 err3 NOT INSIDE EDGE SealR_NOT_BULK
}

Q:  Space between 1.25xMy in CP direction when one or both 1.25xMy width > 0.06um when PRL > 0.08um. >= 0.06um
A:
125xmy4_S_8a {
@ Space between 1.25xMy in CP direction when one or both 1.25xMy width > 0.06um when PRL > 0.08um. >= 0.06um
 met_wid_all = COPY 125xmy4_gt_060
 met_err_RAW = EXT [met_wid_all] M4_h_edges < 0.06 ABUT<90 OPPOSITE MEASURE ALL
 met_jog_ALL = (CONVEX EDGE M4 == 1) NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M4
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] > 0.08
 met_err_EGE = met_err_RAW TOUCH EDGE met_err_PRL
 err1 = EXT met_err_EGE M4 < 0.06 ABUT<90 OPPOSITE REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between 1.25xMy in CP direction, when one or both width = 0.06um, and the other side space < 0.06um. >= 0.079um
A:  
125xmy4_S_9 {
@ Space between 1.25xMy in CP direction, when one or both width = 0.06um, and the other side space < 0.06um. >= 0.079um
 mets_sps_060 = EXT [M4_060_h_edges] M4 < 0.06 ABUT<90 OPPOSITE
 mets_sps_080 = EXT [M4_060_h_edges] M4 < 0.079 ABUT<90 OPPOSITE
 err1 = INT mets_sps_060 mets_sps_080 == 0.06 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
M4_convex_90_270_edges_gt_040 = ANGLE (CONVEX EDGE M4 ANGLE1 == 90 ANGLE2 == 270 WITH LENGTH > 0.04) == 90
M4_width_eq_080 = M4 WITH WIDTH == 0.08

Q:  Space between 1.25xMy in CP direction when one or both 1.25xMy width >= 0.08um. >= 0.079um
     Except Z-shape corner
     Z-shape corner definition:
     Edge length > 0.04um between two consecutive 90-270 degree corners, corresponding width = 0.08um in NCP direction between 2 opposite edge length > 0.04um
A: 
125xmy4_S_10 {
@ Space between 1.25xMy in CP direction when one or both 1.25xMy width >= 0.08um. >= 0.079um
@ Except Z-shape corner
@ Z-shape corner definition:
@ Edge length > 0.04um between two consecutive 90-270 degree corners, corresponding width = 0.08um in NCP direction between 2 opposite edge length > 0.04um
 zfig_shape_s_side = ANGLE (LENGTH M4_convex_90_90_edges == 0.08) == 0
 zfig_shape = (M4_width_eq_080 INTERACT (INT M4_convex_90_270_edges_gt_040 == 0.08 ABUT<90 OPPOSITE REGION)) NOT WITH EDGE zfig_shape_s_side
 waive_shape = zfig_shape NOT COIN EDGE (INT [M4_h_edges] == 0.08 ABUT<90 OPPOSITE) // vertical width=0.08 need to flag
 // 
 check_edge = INT (M4_h_edges) < 0.08 ABUT<90 OPPOSITE
 check_shape = check_edge NOT COIN EDGE waive_shape
 err1 = EXT check_shape (M4 NOT COIN EDGE waive_shape) < 0.079 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy in CP direction when one or both width >= 0.121um, PRL > 0.08um. >= 0.099um
A: 
125xmy4_S_11 {
@ Space between 1.25xMy in CP direction when one or both width >= 0.121um, PRL > 0.08um. >= 0.099um
 mets_sps_100_ERRS = EXT 125xmy4_eqgt_121 M4_h_edges < 0.099 ABUT<90 OPPOSITE
 mets_sps_100_AREA = EXT 125xmy4_eqgt_121 M4_h_edges < 0.099 ABUT<90 OPPOSITE REGION
 err1 = DFM PROPERTY mets_sps_100_AREA mets_sps_100_ERRS OVERLAP ABUT ALSO MULTI [-= EC(mets_sps_100_ERRS)] > 0.08
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy (CP direction width > 0.16um and NCP direction width > 0.08um) and 1.25xMy edge (edge length > 0.08um in NCP direction) in CP direction >= 0.119um
A: 
125xmy4_S_12 {
@ Space between 1.25xMy (CP direction width > 0.16um and NCP direction width > 0.08um) and 1.25xMy edge (edge length > 0.08um in NCP direction) in CP direction >= 0.119um
 mets_L_sides = (INT (M4_h_edges) <= 0.16 ABUT<90 OPPOSITE EXCLUDE SHIELDED) COIN EDGE 125xmy4_gt_080
 mets_R_sides = LENGTH M4_h_edges > 0.08
 err1 = EXT mets_R_sides (mets_L_sides COIN EDGE mets_R_sides) < 0.119 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy in CP direction when one or both width >= 0.201um, PRL >= 0.121um. >= 0.144um
A: 
125xmy4_S_13 {
@ Space between 1.25xMy in CP direction when one or both width >= 0.201um, PRL >= 0.121um. >= 0.144um
 mets_RAW = M4 WITH WIDTH >= 0.201
 mets_sps_ERRS = EXT mets_RAW M4_h_edges < 0.144 ABUT<90 OPPOSITE
 mets_sps_AREA = EXT mets_RAW M4_h_edges < 0.144 ABUT<90 OPPOSITE REGION
 err1 = DFM PROPERTY mets_sps_AREA mets_sps_ERRS OVERLAP ABUT ALSO MULTI [-= EC(mets_sps_ERRS)] >= 0.121
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy in CP direction when one or both width >= 0.231um, PRL >= 0.121um. >= 0.159um
A: 
125xmy4_S_14 {
@ Space between 1.25xMy in CP direction when one or both width >= 0.231um, PRL >= 0.121um. >= 0.159um
 mets_RAW = (M4 WITH WIDTH >= 0.201) WITH WIDTH >= 0.231
 mets_sps_ERRS = EXT mets_RAW M4_h_edges < 0.159 ABUT<90 OPPOSITE
 mets_sps_AREA = EXT mets_RAW M4_h_edges < 0.159 ABUT<90 OPPOSITE REGION
 err1 = DFM PROPERTY mets_sps_AREA mets_sps_ERRS OVERLAP ABUT ALSO MULTI [-= EC(mets_sps_ERRS)] >= 0.121
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy and 1.25xMy line-end (width = 0.08um) in CP direction when PRL > -0.08um. >= 0.099um
A: 
125xmy4_S_15 {
@ Space between 1.25xMy and 1.25xMy line-end (width = 0.08um) in CP direction when PRL > -0.08um. >= 0.099um
 lend_RAW = LENGTH M4_convex_eq_two_edges == 0.08
 lend_CHK = ANGLE lend_RAW == 0
 err1 = EXT lend_CHK M4 < 0.099 ABUT<90 OPPOSITE EXTENDED 0.08 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy in NCP direction when one or both width = 0.08, 0.12um. >= 0.080um
A: 
125xmy4_S_16 {
@ Space between 1.25xMy in NCP direction when one or both width = 0.08, 0.12um. >= 0.080um
 mets_RAW = 125xmy4_080 OR 125xmy4_120
 mets_CHK = ANGLE mets_RAW == 90
 err1 = EXT mets_CHK M4 < 0.08 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy (0.16um <= NCP direction width < 0.2um and CP direction width > 0.08um) and 1.25xMy edge (edge length > 0.08um in CP direction) in NCP direction >= 0.099um
A: 
125xmy4_S_17 {
@ Space between 1.25xMy (0.16um <= NCP direction width < 0.2um and CP direction width > 0.08um) and 1.25xMy edge (edge length > 0.08um in CP direction) in NCP direction >= 0.099um
 mets_L_sides = (INT [M4_v_edges] >= 0.16 < 0.2 ABUT<90 OPPOSITE EXCLUDE SHIELDED) COIN EDGE 125xmy4_gt_080
 mets_R_sides = LENGTH M4_v_edges > 0.08
 err1 = EXT mets_R_sides (mets_L_sides COIN EDGE mets_R_sides) < 0.099 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy in NCP direction when one or both width > 0.12um, PRL >= 0.121um. >= 0.119um
A: 
125xmy4_S_18 {
@ Space between 1.25xMy in NCP direction when one or both width > 0.12um, PRL >= 0.121um. >= 0.119um
 err1_TMP = EXT 125xmy4_eqgt_121 M4_v_edges < 0.119 ABUT<90 OPPOSITE REGION
 err1 = err1_TMP ENCLOSE RECTANGLE 0.001 0.121 ORTHOGONAL ONLY
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy (NCP direction width >= 0.2um and CP direction width > 0.08um) and 1.25xMy edge (edge length > 0.08um in CP direction) in NCP direction >= 0.139um
A: 
125xmy4_S_19 {
@ Space between 1.25xMy (NCP direction width >= 0.2um and CP direction width > 0.08um) and 1.25xMy edge (edge length > 0.08um in CP direction) in NCP direction >= 0.139um
 mets_L_sides = (INT (M4_v_edges) < 0.2 ABUT<90 OPPOSITE EXCLUDE SHIELDED) COIN EDGE 125xmy4_gt_080
 mets_R_sides = LENGTH M4_v_edges > 0.08
 err1 = EXT mets_R_sides (mets_L_sides COIN EDGE mets_R_sides) < 0.139 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy in NCP direction when one or both width > 0.16um, PRL > 0.2um. >= 0.159um
A: 
125xmy4_S_20 {
@ Space between 1.25xMy in NCP direction when one or both width > 0.16um, PRL > 0.2um. >= 0.159um
 err1_TMP = EXT 125xmy4_gt_160 M4_v_edges < 0.159 ABUT<90 OPPOSITE REGION
 err1 = err1_TMP ENCLOSE RECTANGLE 0.001 0.20+GLOBAL_TOLERANCE ORTHOGONAL ONLY
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy and 1.25xMy line-end (width = 0.04/0.042um) in NCP direction when PRL > -0.04um. >= 0.089um
A: 
125xmy4_S_21 {
@ Space between 1.25xMy and 1.25xMy line-end (width = 0.04/0.042um) in NCP direction when PRL > -0.04um. >= 0.089um
 lend_RAW = LENGTH M4_convex_eq_two_edges >= 0.04 <= 0.042
 lend_CHK = ANGLE lend_RAW == 90
 err1 = EXT lend_CHK M4 < 0.089 ABUT<90 OPPOSITE EXTENDED 0.04 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy and 1.25xMy line-end (width = 0.044/0.046/0.06um) in NCP direction when PRL > -0.04um. >= 0.080um
A: 
125xmy4_S_21a {
@ Space between 1.25xMy and 1.25xMy line-end (width = 0.044/0.046/0.06um) in NCP direction when PRL > -0.04um. >= 0.080um
 lend_RAW_a = LENGTH M4_convex_eq_two_edges >= 0.044 <= 0.046
 lend_RAW_b = LENGTH M4_convex_eq_two_edges == 0.06
 lend_CHK = ANGLE (lend_RAW_a OR EDGE lend_RAW_b) == 90
 err1 = EXT lend_CHK M4 < 0.08 ABUT<90 OPPOSITE EXTENDED 0.04 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy and 1.25xMy line-end (0.06um < width <= 0.08um) in NCP direction when PRL > -0.08um. >= 0.080um
A: 
125xmy4_S_22 {
@ Space between 1.25xMy and 1.25xMy line-end (0.06um < width <= 0.08um) in NCP direction when PRL > -0.08um. >= 0.080um
 lend_RAW = LENGTH M4_convex_eq_two_edges > 0.06 <= 0.08
 lend_CHK = ANGLE lend_RAW == 90
 err1 = EXT lend_CHK M4 < 0.08 ABUT<90 OPPOSITE EXTENDED 0.08 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy line-end (width < 0.08um) and U-shape inner edge (edge length <= 0.149um between two concave corners) in NCP direction >= 0.149um
A: 
125xmy4_S_23 {
@ Space between 1.25xMy line-end (width < 0.08um) and U-shape inner edge (edge length <= 0.149um between two concave corners) in NCP direction >= 0.149um
 mets_U_sides = LENGTH M4_convex_270_270_edges <= 0.149
 err1 = EXT M4_end_080 mets_U_sides < 0.149 ABUT<90 OPPOSITE EXTENDED 0.04 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
125xMy4_GROUP_80 = SIZE (SIZE (SIZE 125xmy4_040 BY 0.02) BY -0.04) BY 0.02
125xMy4_GROUP_90_1 = SIZE (SIZE (SIZE 125xmy4_044 BY 0.023) BY -0.046) BY 0.023
125xMy4_GROUP_90_2 = SIZE (SIZE (SIZE 125xmy4_042 BY 0.024) BY -0.048) BY 0.024
125xMy4_GROUP_90 = OR 125xMy4_GROUP_90_1 125xMy4_GROUP_90_2

Q:  Space between 1.25xMy_Group_80 and 1.25xMy_Group_90 in CP direction when PRL > -0.08um. >= 0.199um
     1.25xMy_Group_80 definition: (((1.25xMy (width = 0.040um) su 0.020um) su -0.040um) su 0.020um)
     1.25xMy_Group_90 definition: 1) (((1.25xMy (width = 0.044um) su 0.023um) sd -0.046um) su 0.023um). 2) (((1.25xMy (width = 0.042um) su 0.024um) sd -0.048um) su 0.024um)
A: 
125xmy4_S_24a {
@ Space between 1.25xMy_Group_80 and 1.25xMy_Group_90 in CP direction when PRL > -0.08um. >= 0.199um
@ 1.25xMy_Group_80 definition: (((1.25xMy (width = 0.040um) su 0.020um) su -0.040um) su 0.020um)
@ 1.25xMy_Group_90 definition: 1) (((1.25xMy (width = 0.044um) su 0.023um) sd -0.046um) su 0.023um). 2) (((1.25xMy (width = 0.042um) su 0.024um) sd -0.048um) su 0.024um)
 line_080 = ANGLE 125xMy4_GROUP_80 == 0
 line_090 = ANGLE 125xMy4_GROUP_90 == 0
 err1 = EXT line_080 line_090 < 0.199 ABUT<90 OPPOSITE EXTENDED 0.08 REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy line-end of 1.25xMy_Group_80 and 1.25xMy line-end of 1.25xMy_Group_90 in NCP direction when PRL > -0.199um. >= 0.149um
A: 
125xmy4_S_24b {
@ Space between 1.25xMy line-end of 1.25xMy_Group_80 and 1.25xMy line-end of 1.25xMy_Group_90 in NCP direction when PRL > -0.199um. >= 0.149um
 lend_080 = ANGLE (M4_end NOT OUTSIDE EDGE 125xMy4_GROUP_80) == 90
 lend_090 = ANGLE (M4_end NOT OUTSIDE EDGE 125xMy4_GROUP_90) == 90
 err1 = EXT lend_080 lend_090 < 0.149 ABUT<90 OPPOSITE EXTENDED 0.199 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Corner projected space between 1.25xMy when -0.08um < PRL <= 0um. >= 0.08um
     Except line end-to-end (width <= 0.06um), Z-shape (edge length > 0.040um between two consecutive 90-270 degree corners, corresponding width = 0.08um in NCP direction between 2 opposite edge length > 0.040um, not including T-shape)
A: 
125xmy4_S_25 {
@ Corner projected space between 1.25xMy when -0.08um < PRL <= 0um. >= 0.08um
@ Except line end-to-end (width <= 0.06um), Z-shape (edge length > 0.040um between two consecutive 90-270 degree corners, corresponding width = 0.08um in NCP direction between 2 opposite edge length > 0.040um, not including T-shape)
 line_end = (CONVEX EDGE M4 ANGLE1 == 90 ANGLE2 == 90 WITH LENGTH <= 0.06) COIN EDGE M4_v_edges
 // 
 zfig_shape_s_side = ANGLE (LENGTH M4_convex_90_90_edges == 0.08) == 0
 zfig_shape = (M4_width_eq_080 INTERACT (INT M4_convex_90_270_edges_gt_040 == 0.08 ABUT<90 OPPOSITE REGION)) NOT WITH EDGE zfig_shape_s_side
 waive_shape = COPY zfig_shape
 // 
 corner_space_prl_lt_0 = EXT M4 < 0.08*1.414 CORNER TO CORNER
 corner_space_prl_eq_0 = EXT line_end M4 < 0.08 PROJ == 0
 corner_space_all_TMP = DFM COPY corner_space_prl_lt_0 corner_space_prl_eq_0
 corner_space_all = DFM PROPERTY corner_space_all_TMP line_end waive_shape OVERLAP ABUT ALSO MULTI 
 [-= (count(line_end) > 0 && count(waive_shape) == 0) ? 1 : 0] > 0 
 [-= (EWXP(corner_space_all_TMP) < 0.08 && EWYP(corner_space_all_TMP) < 0.08) ? 1 : 0] > 0
 err1_TMP = DFM PROPERTY corner_space_all line_end OVERLAP ABUT ALSO MULTI [-= (count(line_end) == 0 || count(line_end) < 2) ? 1 : 0] > 0
 err1 = DFM COPY err1_TMP REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Corner space between 1.25xMy in NCP direction when -0.04um < PRL <= 0um. >= 0.08um
A: 
125xmy4_S_25a {
@ Corner space between 1.25xMy in NCP direction when -0.04um < PRL <= 0um. >= 0.08um
 err1_RAW = EXT M4 < 0.08 ABUT<90 CORNER TO CORNER
 err1_TMP = DFM PROPERTY err1_RAW GLOBALXY [-= EWYP(err1_RAW)] < 0.04
 err1_SPE = EXT M4 M4_v_edges < 0.08 ABUT<90 REGION PROJ == 0
 err1 = (DFM COPY err1_TMP REGION) OR err1_SPE
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  At least one space between 1.25xMy edge (any adjacent edge of concave corner) and 1.25xMy >= 0.119um, except either condition as below
    1. Edge length between two concave corners < 0.12um
    2. Side edge length of concave corner < 0.042um
A: 
125xmy4_S_26 {
@ At least one space between 1.25xMy edge (any adjacent edge of concave corner) and 1.25xMy >= 0.119um, except either condition as below
@ 1. Edge length between two concave corners < 0.12um
@ 2. Side edge length of concave corner < 0.042um
 waive_edge_a = LENGTH M4_convex_270_270_edges < 0.120
 waive_edge_b = LENGTH M4_convex_lt_two_edges < 0.042
 check_edge = (LENGTH M4_convex_lt_two_edges >= 0.042) NOT COIN EDGE M4_45_skew_edges
 // 
 Y1 = EXT [M4] check_edge < 0.119 ABUT<90 OPPOSITE EXTENDED 0.119
 Y2 = INT [Y1] < 0.001 ABUT==90 INTERSECTING ONLY
 Y3 = EXT Y2 check_edge < 0.119 ABUT<90 OPPOSITE EXTENDED 0.119
 err1_TMP = EXT (DFM COPY Y3 EDGE) < 0.04 ABUT==90 INTERSECTING ONLY REGION EXTENTS
 err1 = (err1_TMP NOT WITH EDGE waive_edge_a) NOT WITH EDGE waive_edge_b
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy concave corner (both side edge length > 0.08um) and 1.25xMy line-end (width < 0.08um) >= 0.154um
A: 
125xmy4_S_27 {
@ Space between 1.25xMy concave corner (both side edge length > 0.08um) and 1.25xMy line-end (width < 0.08um) >= 0.154um
 mets_CHK = LENGTH M4_convex_lt_two_edges > 0.08
 mets_CRN = EXT [mets_CHK] < 0.0005 ABUT==90 INTERSECTING ONLY // resolution concern
 // 
 err1_RAW = EXT M4_convex_lt_two_edges M4_end_080 < 0.154 ABUT EXCLUDE SHIELDED
 err1_HAS = mets_CRN COIN EDGE M4_convex_lt_two_edges
 err1_TMP = DFM PROPERTY err1_RAW err1_HAS ABUT ALSO OVERLAP MULTI [-= count(err1_HAS)] > 0
 err1 = DFM COPY err1_TMP REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
M4_space_eq_040_h_edges = EXT [M4_h_edges] == 0.04 OPPOSITE
M4_space_eq_040_h_areas = EXT M4_h_edges == 0.04 OPPOSITE REGION
M4_space_eq_040_h_areas_h_edges = ANGLE M4_space_eq_040_h_areas == 0
M4_width_lt_080_h_edges = (INT [M4_h_edges] < 0.08 ABUT<90 OPPOSITE) COIN EDGE (M4 WITH WIDTH < 0.08)

Q:  Fobidden space between 1.25xMy (width = 0.04~0.046um and one side space = 0.04um) and 1.25xMy (width < 0.08um) in CP direction, except both side space of 1.25xMy (width < 0.08um) to 1.25xMy >= 0.1um. = 0.061~0.098, 0.131~0.178um
A: 
125xmy4_S_28 {
@ Fobidden space between 1.25xMy (width = 0.04~0.046um and one side space = 0.04um) and 1.25xMy (width < 0.08um) in CP direction, except both side space of 1.25xMy (width < 0.08um) to 1.25xMy >= 0.1um. = 0.061~0.098, 0.131~0.178um
 Mn_w040_w042 = WITH WIDTH M4 >= 0.04 <= 0.046
 Mn_w040_s040_h_edges = Mn_w040_w042 COIN EDGE M4_space_eq_040_h_edges
 Mn_w040_s040_h_edges_opp = INT Mn_w040_s040_h_edges [Mn_w040_w042] >= 0.04 <= 0.046 ABUT<90 OPPOSITE
 // not check W1 >= 0.08
 // 
 Mn_w080_s99_h_edges = EXT (M4_width_lt_080_h_edges) < 0.10 ABUT<90 OPPOSITE
 Mn_w080_s99_h_edges_both = INT [Mn_w080_s99_h_edges] < 0.08 ABUT<90 OPPOSITE
 Mn_w080_s99_h_edges_none = M4_width_lt_080_h_edges NOT COIN EDGE Mn_w080_s99_h_edges_both
 err1 = EXT Mn_w080_s99_h_edges_none Mn_w040_s040_h_edges_opp >= 0.131 <= 0.178 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err2 = EXT Mn_w080_s99_h_edges_none Mn_w040_s040_h_edges_opp >= 0.061 <= 0.098 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:  Fobidden space between 1.25xMy (width = 0.06~0.07um and one side space = 0.04um) and 1.25xMy (width < 0.08um) in CP direction, except both side space of 1.25xMy (width < 0.08um) to 1.25xMy >= 0.1um. = 0.11~0.158um
A: 
125xmy4_S_29 {
@ Fobidden space between 1.25xMy (width = 0.06~0.07um and one side space = 0.04um) and 1.25xMy (width < 0.08um) in CP direction, except both side space of 1.25xMy (width < 0.08um) to 1.25xMy >= 0.1um. = 0.11~0.158um
 Mn_w060_w070 = WITH WIDTH M4 >= 0.06 <= 0.07
 Mn_w060_s040_h_edges = Mn_w060_w070 COIN EDGE M4_space_eq_040_h_edges
 Mn_w060_s040_h_edges_opp = INT Mn_w060_s040_h_edges [Mn_w060_w070] >= 0.06 <= 0.07 ABUT<90 OPPOSITE
 // not check W1 >= 0.08
 // 
 Mn_w080_s99_h_edges = EXT (M4_width_lt_080_h_edges) < 0.10 ABUT<90 OPPOSITE
 Mn_w080_s99_h_edges_both = INT [Mn_w080_s99_h_edges] < 0.08 ABUT<90 OPPOSITE
 Mn_w080_s99_h_edges_none = M4_width_lt_080_h_edges NOT COIN EDGE Mn_w080_s99_h_edges_both
 err1 = EXT Mn_w080_s99_h_edges_none Mn_w060_s040_h_edges_opp >= 0.110 <= 0.158 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy and 45-degree bent 1.25xMy, DRC check 45-degree direction >= 0.396um
A: 
125xmy4_S_30 {
@ Space between 1.25xMy and 45-degree bent 1.25xMy, DRC check 45-degree direction >= 0.396um
 err1 = EXT M4 M4_45_skew_edges < 0.396 ABUT<90 OPPOSITE2 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//125xm6

Q: 1.25xMn space >= 0.04um
A: 
125xm6_S_1 {
@ 1.25xMn space >= 0.04um
 err1 = EXT M6 < 0.04 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn when one or both width >= 0.201um when PRL >= -0.139um. >= 0.139um
A: 
125xm6_S_2 {
@ Space between 1.25xMn when one or both width >= 0.201um when PRL >= -0.139um. >= 0.139um
 chk_Mn = M6 WITH WIDTH >= 0.201
 err1 = EXT M6 chk_Mn < 0.139 ABUT<90 OPPOSITE EXTENDED 0.139+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn when one or both width >= 0.282um when PRL > 0.16um. >= 0.199um
A: 
125xm6_S_3 {
@ Space between 1.25xMn when one or both width >= 0.282um when PRL > 0.16um. >= 0.199um
 mets_RAW = (M6 WITH WIDTH >= 0.201) WITH WIDTH >= 0.282
 mets_sps_ERRS = EXT mets_RAW M6 < 0.199 ABUT<90 OPPOSITE
 mets_sps_AREA = EXT mets_RAW M6 < 0.199 ABUT<90 OPPOSITE REGION
 err1 = DFM PROPERTY mets_sps_AREA mets_sps_ERRS OVERLAP ABUT ALSO MULTI [-= EC(mets_sps_ERRS)] > 0.16
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn when one or both width > 0.5um when PRL >= -0.199um. >= 0.199um
A: 
125xm6_S_4 {
@ Space between 1.25xMn when one or both width > 0.5um when PRL >= -0.199um. >= 0.199um
 chk_Mn = (M6 WITH WIDTH >= 0.201) WITH WIDTH > 0.5
 err1 = EXT M6 chk_Mn < 0.199 ABUT<90 OPPOSITE EXTENDED 0.199+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn when one or both width > 1.35um when PRL > 1.35um. >= 0.448um
A: 
125xm6_S_5 {
@ Space between 1.25xMn when one or both width > 1.35um when PRL > 1.35um. >= 0.448um
 met_wid_all = M6 WITH WIDTH >= 1.35+GLOBAL_TOLERANCE
 met_err_RAW = EXT M6 met_wid_all < 0.448 OPPOSITE REGION MEASURE ALL
 met_err_CRN = EXT (ANGLE M6 > 44 < 46) met_wid_all < 0.448 OPPOSITE1 REGION MEASURE ALL
 err1 = met_err_RAW ENCLOSE RECTANGLE 0.001 1.351 ORTHOGONAL ONLY
 err2 = met_err_CRN ENCLOSE RECTANGLE 0.04 1.351
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:   Space between 1.25xMn in CP direction when one or both width = 0.04um. = 0.04, >= 0.07um
A: 
125xm6_S_6 {
@ Space between 1.25xMn in CP direction when one or both width = 0.04um. = 0.04, >= 0.07um
 err1_TMP = DFM SPACE M6 125xm6_040 < 0.04 BY EXT VERTICAL
 err2_TMP = DFM SPACE M6 125xm6_040 > 0.04 < 0.07 BY EXT VERTICAL
 // 
 waive_TMP = ANGLE 125xm6_060 == 0
 waive_EDG = EXT waive_TMP 125xm6_040 == 0.07 ABUT<90 OPPOSITE
 err1 = DFM COPY err1_TMP EDGE
 // NOT COIN EDGE (DFM COPY waive_EDG EDGE)
 err2 = DFM COPY err2_TMP EDGE
 // NOT COIN EDGE (DFM COPY waive_EDG EDGE)
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q:  Space between 1.25xMn in CP direction when one or both width = 0.042um. = 0.048, >= 0.07um
A: 
125xm6_S_6a {
@ Space between 1.25xMn in CP direction when one or both width = 0.042um. = 0.048, >= 0.07um
 err1 = EXT M6_h_edges 125xm6_042 < 0.048 ABUT<90 OPPOSITE REGION
 err2 = EXT M6_h_edges 125xm6_042 > 0.048 < 0.07 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn in CP direction when one or both width = 0.044um. = 0.046, >= 0.07um
A: 
125xm6_S_7 {
@ Space between 1.25xMn in CP direction when one or both width = 0.044um. = 0.046, >= 0.07um
 err1 = EXT M6_h_edges 125xm6_044 < 0.046 ABUT<90 OPPOSITE REGION
 err2 = EXT M6_h_edges 125xm6_044 > 0.046 < 0.07 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn in CP direction when one or both width = 0.046um. = 0.046um, >= 0.07um
A: 
125xm6_S_7a {
@ Space between 1.25xMn in CP direction when one or both width = 0.046um. = 0.046um, >= 0.07um
 err1 = EXT M6_h_edges 125xm6_046 < 0.046 ABUT<90 OPPOSITE REGION
 err2 = EXT M6_h_edges 125xm6_046 > 0.046 < 0.07 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn in CP direction when one or both width = 0.06um. = 0.04, 0.046, >= 0.06um
A: 
125xm6_S_8 {
@ Space between 1.25xMn in CP direction when one or both width = 0.06um. = 0.04, 0.046, >= 0.06um
 waive_s_6a_chk = ANGLE 125xm6_060 == 0
 waive_s_6a = DFM COPY (EXT waive_s_6a_chk 125xm6_040 == 0.070 ABUT<90 OPPOSITE) EDGE
 bad_1 = DFM SPACE 125xm6_060 M6 < 0.040 BY EXT VERTICAL
 bad_2 = DFM SPACE 125xm6_060 M6 > 0.040 < 0.046 BY EXT VERTICAL
 bad_3 = DFM SPACE 125xm6_060 M6 > 0.046 < 0.060 BY EXT VERTICAL
 err1 = DFM COPY bad_1 EDGE
 // NOT COIN EDGE waive_s_6a
 err2 = DFM COPY bad_2 EDGE
 // NOT COIN EDGE waive_s_6a
 err3 = DFM COPY bad_3 EDGE
 // NOT COIN EDGE waive_s_6a
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
 err3 NOT INSIDE EDGE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn in CP direction when one or both width > 0.06um when PRL > 0.08um. >= 0.06um
A: 
125xm6_S_8a {
@ Space between 1.25xMn in CP direction when one or both width > 0.06um when PRL > 0.08um. >= 0.06um
 met_wid_all = COPY 125xm6_gt_060
 met_err_RAW = EXT [met_wid_all] M6_h_edges < 0.06 ABUT<90 OPPOSITE MEASURE ALL
 met_jog_ALL = (CONVEX EDGE M6 == 1) NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M6
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] > 0.08
 met_err_EGE = met_err_RAW TOUCH EDGE met_err_PRL
 err1 = EXT met_err_EGE M6 < 0.06 ABUT<90 OPPOSITE REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn in CP direction, when one or both width = 0.06um, and the other side space < 0.06um. >= 0.079um
A: 
125xm6_S_9 {
@ Space between 1.25xMn in CP direction, when one or both width = 0.06um, and the other side space < 0.06um. >= 0.079um
 mets_sps_060 = EXT [M6_060_h_edges] M6 < 0.06 ABUT<90 OPPOSITE
 mets_sps_080 = EXT [M6_060_h_edges] M6 < 0.079 ABUT<90 OPPOSITE
 err1 = INT mets_sps_060 mets_sps_080 == 0.06 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
M6_convex_90_270_edges_gt_040 = ANGLE (CONVEX EDGE M6 ANGLE1 == 90 ANGLE2 == 270 WITH LENGTH > 0.04) == 90
M6_width_eq_080 = M6 WITH WIDTH == 0.08

Q:  Space between 1.25xMn in CP direction when one or both width >= 0.08um. >= 0.079um
     Except Z shape and flag shape:
     (1) Z-shape definition: edge length > 0.040um between two consecutive 90-270 degree corners, corresponding width = 0.08um in NCP direction between two opposite edge length > 0.04um, not including T-shape
     (2) Flag-shape definition: edge length > 0.04um between two consecutive 90-270 degree corners, the opposite edge length > 0.08um between two consecutive 90-90 degree corners, corresponding width = 0.08um in NCP direction between these two opposite edge, and the other corresponding width > 0.04um in CP direction
A: 
125xm6_S_10 {
@ Space between 1.25xMn in CP direction when one or both width >= 0.08um. >= 0.079um
@ Except Z shape and flag shape:
@ (1) Z-shape definition: edge length > 0.040um between two consecutive 90-270 degree corners, corresponding width = 0.08um in NCP direction between two opposite edge length > 0.04um, not including T-shape
@ (2) Flag-shape definition: edge length > 0.04um between two consecutive 90-270 degree corners, the opposite edge length > 0.08um between two consecutive 90-90 degree corners, corresponding width = 0.08um in NCP direction between these two opposite edge, and the other corresponding width > 0.04um in CP direction
 flag_shape_l_side = LENGTH M6_convex_90_90_edges > 0.08
 flag_shape_s_side = ANGLE (LENGTH M6_convex_90_90_edges == 0.08) == 0
 flag_shape = (M6_width_eq_080 INTERACT (INT M6_convex_90_270_edges_gt_040 flag_shape_l_side == 0.08 ABUT<90 OPPOSITE REGION)) WITH EDGE flag_shape_s_side
 zfig_shape = (M6_width_eq_080 INTERACT (INT M6_convex_90_270_edges_gt_040 == 0.08 ABUT<90 OPPOSITE REGION)) NOT WITH EDGE flag_shape_s_side
 waive_shape = (OR zfig_shape flag_shape) NOT COIN EDGE (INT [M6_h_edges] == 0.08 ABUT<90 OPPOSITE) // vertical width=0.08 need to flag
 // 
 check_edge = INT (M6_h_edges) < 0.08 ABUT<90 OPPOSITE
 check_shape = check_edge NOT COIN EDGE waive_shape
 err1 = EXT check_shape (M6 NOT COIN EDGE waive_shape) < 0.079 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn in CP direction when one or both width >= 0.121um, PRL > 0.08um. >= 0.099um
A: 
125xm6_S_11 {
@ Space between 1.25xMn in CP direction when one or both width >= 0.121um, PRL > 0.08um. >= 0.099um
 mets_sps_100_ERRS = EXT 125xm6_eqgt_121 M6_h_edges < 0.099 ABUT<90 OPPOSITE
 mets_sps_100_AREA = EXT 125xm6_eqgt_121 M6_h_edges < 0.099 ABUT<90 OPPOSITE REGION
 err1 = DFM PROPERTY mets_sps_100_AREA mets_sps_100_ERRS OVERLAP ABUT ALSO MULTI [-= EC(mets_sps_100_ERRS)] > 0.08
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn (CP direction width > 0.16um and NCP direction width > 0.08um) and 1.25xMn edge (edge length > 0.08um in NCP direction) in CP direction >= 0.119um
A: 
125xm6_S_12 {
@ Space between 1.25xMn (CP direction width > 0.16um and NCP direction width > 0.08um) and 1.25xMn edge (edge length > 0.08um in NCP direction) in CP direction >= 0.119um
 mets_L_sides = (INT (M6_h_edges) <= 0.16 ABUT<90 OPPOSITE EXCLUDE SHIELDED) COIN EDGE 125xm6_gt_080
 mets_R_sides = LENGTH M6_h_edges > 0.08
 err1 = EXT mets_R_sides (mets_L_sides COIN EDGE mets_R_sides) < 0.119 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn in CP direction when one or both width >= 0.201um, PRL >= 0.121um. >= 0.144um
A: 
125xm6_S_13 {
@ Space between 1.25xMn in CP direction when one or both width >= 0.201um, PRL >= 0.121um. >= 0.144um
 mets_RAW = M6 WITH WIDTH >= 0.201
 mets_sps_ERRS = EXT mets_RAW M6_h_edges < 0.144 ABUT<90 OPPOSITE
 mets_sps_AREA = EXT mets_RAW M6_h_edges < 0.144 ABUT<90 OPPOSITE REGION
 err1 = DFM PROPERTY mets_sps_AREA mets_sps_ERRS OVERLAP ABUT ALSO MULTI [-= EC(mets_sps_ERRS)] >= 0.121
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn in CP direction when one or both width >= 0.231um, PRL >= 0.121um. >= 0.159um
A: 
125xm6_S_14 {
@ Space between 1.25xMn in CP direction when one or both width >= 0.231um, PRL >= 0.121um. >= 0.159um
 mets_RAW = (M6 WITH WIDTH >= 0.201) WITH WIDTH >= 0.231
 mets_sps_ERRS = EXT mets_RAW M6_h_edges < 0.159 ABUT<90 OPPOSITE
 mets_sps_AREA = EXT mets_RAW M6_h_edges < 0.159 ABUT<90 OPPOSITE REGION
 err1 = DFM PROPERTY mets_sps_AREA mets_sps_ERRS OVERLAP ABUT ALSO MULTI [-= EC(mets_sps_ERRS)] >= 0.121
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn and 1.25xMn line-end (width = 0.08um and both adiacent edge length > 0.09um) in CP direction when PRL > -0.08um. >= 0.099um
A: 
125xm6_S_15 {
@ Space between 1.25xMn and 1.25xMn line-end (width = 0.08um and both adiacent edge length > 0.09um) in CP direction when PRL > -0.08um. >= 0.099um
 lend_RAW = CONVEX EDGE M6 ANGLE1 == 90 LENGTH1 > 0.09 ANGLE2 == 90 LENGTH2 > 0.09 WITH LENGTH == 0.08
 lend_CHK = ANGLE lend_RAW == 0
 err1 = EXT lend_CHK M6 < 0.099 ABUT<90 OPPOSITE EXTENDED 0.08 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn in NCP direction when one or both width = 0.08um, 0.12um. >= 0.08um
A: 
125xm6_S_16 {
@ Space between 1.25xMn in NCP direction when one or both width = 0.08um, 0.12um. >= 0.08um
 mets_RAW = 125xm6_080 OR 125xm6_120
 mets_CHK = ANGLE mets_RAW == 90
 err1 = EXT mets_CHK M6 < 0.08 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn (0.16um <= NCP direction width < 0.2um and CP direction width > 0.08um) and 1.25xMn edge (edge length > 0.08um in CP direction) in NCP direction >= 0.099um
A: 
125xm6_S_17 {
@ Space between 1.25xMn (0.16um <= NCP direction width < 0.2um and CP direction width > 0.08um) and 1.25xMn edge (edge length > 0.08um in CP direction) in NCP direction >= 0.099um
 mets_L_sides = (INT [M6_v_edges] >= 0.16 < 0.2 ABUT<90 OPPOSITE EXCLUDE SHIELDED) COIN EDGE 125xm6_gt_080
 mets_R_sides = LENGTH M6_v_edges > 0.08
 err1 = EXT mets_R_sides (mets_L_sides COIN EDGE mets_R_sides) < 0.099 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn in NCP direction when one or both width > 0.12um, PRL >= 0.121um. >= 0.119um
A: 
125xm6_S_18 {
@ Space between 1.25xMn in NCP direction when one or both width > 0.12um, PRL >= 0.121um. >= 0.119um
 err1_TMP = EXT 125xm6_eqgt_121 M6_v_edges < 0.119 ABUT<90 OPPOSITE REGION
 err1 = err1_TMP ENCLOSE RECTANGLE 0.001 0.121 ORTHOGONAL ONLY
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn (NCP direction width >= 0.2um and CP direction width > 0.08um) and 1.25xMn edge (edge length > 0.08um in CP direction) in NCP direction >= 0.139um
A: 
125xm6_S_19 {
@ Space between 1.25xMn (NCP direction width >= 0.2um and CP direction width > 0.08um) and 1.25xMn edge (edge length > 0.08um in CP direction) in NCP direction >= 0.139um
 mets_L_sides = (INT (M6_v_edges) < 0.2 ABUT<90 OPPOSITE EXCLUDE SHIELDED) COIN EDGE 125xm6_gt_080
 mets_R_sides = LENGTH M6_v_edges > 0.08
 err1 = EXT mets_R_sides (mets_L_sides COIN EDGE mets_R_sides) < 0.139 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn in NCP direction when one or both width > 0.16um when PRL > 0.2um. >= 0.159um
A: 
125xm6_S_20 {
@ Space between 1.25xMn in NCP direction when one or both width > 0.16um when PRL > 0.2um. >= 0.159um
 err1_TMP = EXT 125xm6_gt_160 M6_v_edges < 0.159 ABUT<90 OPPOSITE REGION
 err1 = err1_TMP ENCLOSE RECTANGLE 0.001 0.20+GLOBAL_TOLERANCE ORTHOGONAL ONLY
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn and 1.25xMn line-end (width = 0.04/0.042um) in NCP direction when PRL > -0.04um. >= 0.099um
A: 
125xm6_S_21 {
@ Space between 1.25xMn and 1.25xMn line-end (width = 0.04/0.042um) in NCP direction when PRL > -0.04um. >= 0.099um
 lend_RAW = LENGTH M6_convex_eq_two_edges >= 0.04 <= 0.042
 lend_CHK = ANGLE lend_RAW == 90
 err1 = EXT lend_CHK M6 < 0.099 ABUT<90 OPPOSITE EXTENDED 0.04 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn and 1.25xMn line-end (width = 0.044/0.046/0.06um) in NCP direction when PRL > -0.04um. >= 0.080um
A: 
125xm6_S_21a {
@ Space between 1.25xMn and 1.25xMn line-end (width = 0.044/0.046/0.06um) in NCP direction when PRL > -0.04um. >= 0.080um
 lend_RAW_a = LENGTH M6_convex_eq_two_edges >= 0.044 <= 0.046
 lend_RAW_b = LENGTH M6_convex_eq_two_edges == 0.06
 lend_CHK = ANGLE (lend_RAW_a OR EDGE lend_RAW_b) == 90
 err1 = EXT lend_CHK M6 < 0.08 ABUT<90 OPPOSITE EXTENDED 0.04 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn and 1.25xMn line-end (0.06um < width <= 0.08um) in NCP direction when PRL > -0.08um. >= 0.08um
A: 
125xm6_S_22 {
@ Space between 1.25xMn and 1.25xMn line-end (0.06um < width <= 0.08um) in NCP direction when PRL > -0.08um. >= 0.08um
 lend_RAW = LENGTH M6_convex_eq_two_edges > 0.06 <= 0.08
 lend_CHK = ANGLE lend_RAW == 90
 err1 = EXT lend_CHK M6 < 0.08 ABUT<90 OPPOSITE EXTENDED 0.08 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn line-end (width < 0.08um) and U-shape inner edge (edge length <= 0.149um between two concave corners) in NCP direction >= 0.149um
A: 
125xm6_S_23 {
@ Space between 1.25xMn line-end (width < 0.08um) and U-shape inner edge (edge length <= 0.149um between two concave corners) in NCP direction >= 0.149um
 mets_U_sides = LENGTH M6_convex_270_270_edges <= 0.149
 err1 = EXT M6_end_080 mets_U_sides < 0.149 ABUT<90 OPPOSITE EXTENDED 0.04 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
125xM6_GROUP_80 = SIZE (SIZE (SIZE 125xm6_040 BY 0.02) BY -0.04) BY 0.02
125xM6_GROUP_90_1 = SIZE (SIZE (SIZE 125xm6_044 BY 0.023) BY -0.046) BY 0.023
125xM6_GROUP_90_2 = SIZE (SIZE (SIZE 125xm6_042 BY 0.024) BY -0.048) BY 0.024
125xM6_GROUP_90 = OR 125xM6_GROUP_90_1 125xM6_GROUP_90_2

Q:  Space between 1.25xMn_Group_80 and 1.25xMn_Group_90 in CP direction when PRL > -0.08um. >= 0.199um
     1.25xMn_Group_80 definition: (((1.25xMn (width = 0.040um) SIZING 0.020um) SIZING -0.040um) SIZING 0.020um)
     1.25xMn_Group_90 definition: 1) (((1.25xMn (width = 0.044um) su 0.023um) sd -0.046um) su 0.023um). 2) (((1.25xMn (width = 0.042um) su 0.024um) sd -0.048um) su 0.024um)
A: 
125xm6_S_24a {
@ Space between 1.25xMn_Group_80 and 1.25xMn_Group_90 in CP direction when PRL > -0.08um. >= 0.199um
@ 1.25xMn_Group_80 definition: (((1.25xMn (width = 0.040um) SIZING 0.020um) SIZING -0.040um) SIZING 0.020um)
@ 1.25xMn_Group_90 definition: 1) (((1.25xMn (width = 0.044um) su 0.023um) sd -0.046um) su 0.023um). 2) (((1.25xMn (width = 0.042um) su 0.024um) sd -0.048um) su 0.024um)
 line_080 = ANGLE 125xM6_GROUP_80 == 0
 line_090 = ANGLE 125xM6_GROUP_90 == 0
 err1 = EXT line_080 line_090 < 0.199 ABUT<90 OPPOSITE EXTENDED 0.08 REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn line-end inside 1.25xMn_Group_80 and 1.25xMy line-end of 1.25xMn_Group_90 in NCP direction when PRL > -0.199um. >= 0.149um
A: 
125xm6_S_24b {
@ Space between 1.25xMn line-end inside 1.25xMn_Group_80 and 1.25xMy line-end of 1.25xMn_Group_90 in NCP direction when PRL > -0.199um. >= 0.149um
 lend_080 = ANGLE (M6_end NOT OUTSIDE EDGE 125xM6_GROUP_80) == 90
 lend_090 = ANGLE (M6_end NOT OUTSIDE EDGE 125xM6_GROUP_90) == 90
 err1 = EXT lend_080 lend_090 < 0.149 ABUT<90 OPPOSITE EXTENDED 0.199 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Corner projected space between 1.25xMn when -0.08um < PRL <= 0um. >= 0.08um
     Except line end-to-end (width <= 0.06um), Z-shape, and flag-shape:
     Definition of Z-shape /flag-shape:
    1) Z-shape: edge length > 0.040um between two consecutive 90-270 degree corners, corresponding width = 0.08um in NCP direction between 2 opposite edge length > 0.040um, not including T-shape
    2) flag-shape: edge length > 0.04um between two consecutive 90-270 degree corners, the opposite edge length > 0.08um between two consecutive 90-90 degree corners, corresponding width = 0.08um in NCP direction between these 2 opposite edge, and the other corresponding width > 0.04um in CP direction
A: 
125xm6_S_25 {
@ Corner projected space between 1.25xMn when -0.08um < PRL <= 0um. >= 0.08um
@ Except line end-to-end (width <= 0.06um), Z-shape, and flag-shape:
@ Definition of Z-shape /flag-shape:
@ 1) Z-shape: edge length > 0.040um between two consecutive 90-270 degree corners, corresponding width = 0.08um in NCP direction between 2 opposite edge length > 0.040um, not including T-shape
@ 2) flag-shape: edge length > 0.04um between two consecutive 90-270 degree corners, the opposite edge length > 0.08um between two consecutive 90-90 degree corners, corresponding width = 0.08um in NCP direction between these 2 opposite edge, and the other corresponding width > 0.04um in CP direction
 line_end = (CONVEX EDGE M6 ANGLE1 == 90 ANGLE2 == 90 WITH LENGTH <= 0.06) COIN EDGE M6_v_edges
 // 
 flag_shape_l_side = LENGTH M6_convex_90_90_edges > 0.08
 flag_shape_s_side = ANGLE (LENGTH M6_convex_90_90_edges == 0.08) == 0
 flag_shape = (M6_width_eq_080 INTERACT (INT M6_convex_90_270_edges_gt_040 flag_shape_l_side == 0.08 ABUT<90 OPPOSITE REGION)) WITH EDGE flag_shape_s_side
 zfig_shape = (M6_width_eq_080 INTERACT (INT M6_convex_90_270_edges_gt_040 == 0.08 ABUT<90 OPPOSITE REGION)) NOT WITH EDGE flag_shape_s_side
 waive_shape = OR zfig_shape flag_shape
 // 
 corner_space_prl_lt_0 = EXT M6 < 0.08*1.414 CORNER TO CORNER
 corner_space_prl_eq_0 = EXT line_end M6 < 0.08 PROJ == 0
 corner_space_all_TMP = DFM COPY corner_space_prl_lt_0 corner_space_prl_eq_0
 corner_space_all = DFM PROPERTY corner_space_all_TMP line_end waive_shape OVERLAP ABUT ALSO MULTI 
 [-= (count(line_end) > 0 && count(waive_shape) == 0) ? 1 : 0] > 0 
 [-= (EWXP(corner_space_all_TMP) < 0.08 && EWYP(corner_space_all_TMP) < 0.08) ? 1 : 0] > 0
 err1_TMP = DFM PROPERTY corner_space_all line_end OVERLAP ABUT ALSO MULTI [-= (count(line_end) == 0 || count(line_end) < 2) ? 1 : 0] > 0
 err1 = DFM COPY err1_TMP REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Corner space between two 1.25xMn in NCP direction when -0.04um < PRL <= 0um. >= 0.08um
A: 
125xm6_S_25a {
@ Corner space between two 1.25xMn in NCP direction when -0.04um < PRL <= 0um. >= 0.08um
 err1_RAW = EXT M6 < 0.08 ABUT<90 CORNER TO CORNER
 err1_TMP = DFM PROPERTY err1_RAW GLOBALXY [-= EWYP(err1_RAW)] < 0.04
 err1_SPE = EXT M6 M6_v_edges < 0.08 ABUT<90 REGION PROJ == 0
 err1 = (DFM COPY err1_TMP REGION) OR err1_SPE
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  At least one space between 1.25xMn edge (any adjacent edge of concave corner) and 1.25xMn >= 0.119um, except either condition as below
     1. Edge length between two concave corners < 0.12um
     2. Side edge length of concave corner < 0.042um
A: 
125xm6_S_26 {
@ At least one space between 1.25xMn edge (any adjacent edge of concave corner) and 1.25xMn >= 0.119um, except either condition as below
@ 1. Edge length between two concave corners < 0.12um
@ 2. Side edge length of concave corner < 0.042um
 waive_edge_a = LENGTH M6_convex_270_270_edges < 0.120
 waive_edge_b = LENGTH M6_convex_lt_two_edges < 0.042
 check_edge = (LENGTH M6_convex_lt_two_edges >= 0.042) NOT COIN EDGE M6_45_skew_edges
 // 
 Y1 = EXT [M6] check_edge < 0.119 ABUT<90 OPPOSITE EXTENDED 0.119
 Y2 = INT [Y1] < 0.001 ABUT==90 INTERSECTING ONLY
 Y3 = EXT Y2 check_edge < 0.119 ABUT<90 OPPOSITE EXTENDED 0.119
 err1_TMP = EXT (DFM COPY Y3 EDGE) < 0.04 ABUT==90 INTERSECTING ONLY REGION EXTENTS
 err1 = (err1_TMP NOT WITH EDGE waive_edge_a) NOT WITH EDGE waive_edge_b
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMy concave corner (both side edge length > 0.08um) and 1.25xMy line-end (width < 0.08um) >= 0.154um
A: 
125xm6_S_27 {
@ Space between 1.25xMy concave corner (both side edge length > 0.08um) and 1.25xMy line-end (width < 0.08um) >= 0.154um
 mets_CHK = LENGTH M6_convex_lt_two_edges > 0.08
 mets_CRN = EXT [mets_CHK] < 0.0005 ABUT==90 INTERSECTING ONLY // resolution concern
 // 
 err1_RAW = EXT M6_convex_lt_two_edges M6_end_080 < 0.154 ABUT EXCLUDE SHIELDED
 err1_HAS = mets_CRN COIN EDGE M6_convex_lt_two_edges
 err1_TMP = DFM PROPERTY err1_RAW err1_HAS ABUT ALSO OVERLAP MULTI [-= count(err1_HAS)] > 0
 err1 = DFM COPY err1_TMP REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
M6_space_eq_040_h_edges = EXT [M6_h_edges] == 0.04 OPPOSITE
M6_space_eq_040_h_areas = EXT M6_h_edges == 0.04 OPPOSITE REGION
M6_space_eq_040_h_areas_h_edges = ANGLE M6_space_eq_040_h_areas == 0
M6_width_lt_080_h_edges = (INT [M6_h_edges] < 0.08 ABUT<90 OPPOSITE) COIN EDGE (M6 WITH WIDTH < 0.08)

Q:  Forbidden the space between 1.25xMn (width = 0.04~0.046um and one side space = 0.04um) and 1.25xMn (width < 0.08um (W1)) in CP direction, except both side space of 1.25xMy (width < 0.08um) to 1.25xMy >= 0.1um. = 0.061~0.098, 0.131~0.178um
A: 
125xm6_S_28 {
@ Forbidden the space between 1.25xMn (width = 0.04~0.046um and one side space = 0.04um) and 1.25xMn (width < 0.08um (W1)) in CP direction, except both side space of 1.25xMy (width < 0.08um) to 1.25xMy >= 0.1um. = 0.061~0.098, 0.131~0.178um
 Mn_w040_w042 = WITH WIDTH M6 >= 0.04 <= 0.046
 Mn_w040_s040_h_edges = Mn_w040_w042 COIN EDGE M6_space_eq_040_h_edges
 Mn_w040_s040_h_edges_opp = INT Mn_w040_s040_h_edges [Mn_w040_w042] >= 0.04 <= 0.046 ABUT<90 OPPOSITE
 // not check W1 >= 0.08
 // 
 Mn_w080_s99_h_edges = EXT (M6_width_lt_080_h_edges) < 0.10 ABUT<90 OPPOSITE
 Mn_w080_s99_h_edges_both = INT [Mn_w080_s99_h_edges] < 0.08 ABUT<90 OPPOSITE
 Mn_w080_s99_h_edges_none = M6_width_lt_080_h_edges NOT COIN EDGE Mn_w080_s99_h_edges_both
 err1 = EXT Mn_w080_s99_h_edges_none Mn_w040_s040_h_edges_opp >= 0.131 <= 0.178 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err2 = EXT Mn_w080_s99_h_edges_none Mn_w040_s040_h_edges_opp >= 0.061 <= 0.098 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:  Fobidden space between 1.25xMy (width = 0.06~0.07um and one side space = 0.04um) and 1.25xMy (width < 0.08um) in CP direction, except both side space of 1.25xMy (width < 0.08um) to 1.25xMy >= 0.1um. = 0.11~0.158um
A: 
125xm6_S_29 {
@ Fobidden space between 1.25xMy (width = 0.06~0.07um and one side space = 0.04um) and 1.25xMy (width < 0.08um) in CP direction, except both side space of 1.25xMy (width < 0.08um) to 1.25xMy >= 0.1um. = 0.11~0.158um
 Mn_w060_w070 = WITH WIDTH M6 >= 0.06 <= 0.07
 Mn_w060_s040_h_edges = Mn_w060_w070 COIN EDGE M6_space_eq_040_h_edges
 Mn_w060_s040_h_edges_opp = INT Mn_w060_s040_h_edges [Mn_w060_w070] >= 0.06 <= 0.07 ABUT<90 OPPOSITE
 // not check W1 >= 0.08
 // 
 Mn_w080_s99_h_edges = EXT (M6_width_lt_080_h_edges) < 0.10 ABUT<90 OPPOSITE
 Mn_w080_s99_h_edges_both = INT [Mn_w080_s99_h_edges] < 0.08 ABUT<90 OPPOSITE
 Mn_w080_s99_h_edges_none = M6_width_lt_080_h_edges NOT COIN EDGE Mn_w080_s99_h_edges_both
 err1 = EXT Mn_w080_s99_h_edges_none Mn_w060_s040_h_edges_opp >= 0.110 <= 0.158 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn and 45-degree bent 1.25xMn, DRC check 45-degree direction >= 0.396um
A: 
125xm6_S_30 {
@ Space between 1.25xMn and 45-degree bent 1.25xMn, DRC check 45-degree direction >= 0.396um
 err1 = EXT M6 M6_45_skew_edges < 0.396 ABUT<90 OPPOSITE2 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//125xm5

Q: 1.25xMn space >= 0.04um
A: 
125xm5_S_1 {
@ 1.25xMn space >= 0.04um
 err1 = EXT M5 < 0.04 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn when one or both width >= 0.201um when PRL >= -0.139um. >= 0.139um
A: 
125xm5_S_2 {
@ Space between 1.25xMn when one or both width >= 0.201um when PRL >= -0.139um. >= 0.139um
 chk_Mn = M5 WITH WIDTH >= 0.201
 err1 = EXT M5 chk_Mn < 0.139 ABUT<90 OPPOSITE EXTENDED 0.139+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn when one or both width >= 0.282um when PRL > 0.16um. >= 0.199um
A: 
125xm5_S_3 {
@ Space between 1.25xMn when one or both width >= 0.282um when PRL > 0.16um. >= 0.199um
 mets_RAW = (M5 WITH WIDTH >= 0.201) WITH WIDTH >= 0.282
 mets_sps_ERRS = EXT mets_RAW M5 < 0.199 ABUT<90 OPPOSITE
 mets_sps_AREA = EXT mets_RAW M5 < 0.199 ABUT<90 OPPOSITE REGION
 err1 = DFM PROPERTY mets_sps_AREA mets_sps_ERRS OVERLAP ABUT ALSO MULTI [-= EC(mets_sps_ERRS)] > 0.16
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn when one or both width > 0.5um when PRL >= -0.199um. >= 0.199um
A: 
125xm5_S_4 {
@ Space between 1.25xMn when one or both width > 0.5um when PRL >= -0.199um. >= 0.199um
 chk_Mn = (M5 WITH WIDTH >= 0.201) WITH WIDTH > 0.5
 err1 = EXT M5 chk_Mn < 0.199 ABUT<90 OPPOSITE EXTENDED 0.199+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn when one or both width > 1.35um when PRL > 1.35um. >= 0.448um
A: 
125xm5_S_5 {
@ Space between 1.25xMn when one or both width > 1.35um when PRL > 1.35um. >= 0.448um
 met_wid_all = M5 WITH WIDTH >= 1.35+GLOBAL_TOLERANCE
 met_err_RAW = EXT M5 met_wid_all < 0.448 OPPOSITE REGION MEASURE ALL
 met_err_CRN = EXT (ANGLE M5 > 44 < 46) met_wid_all < 0.448 OPPOSITE1 REGION MEASURE ALL
 err1 = met_err_RAW ENCLOSE RECTANGLE 0.001 1.351 ORTHOGONAL ONLY
 err2 = met_err_CRN ENCLOSE RECTANGLE 0.04 1.351
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn in CP direction when one or both width = 0.04um. = 0.04, >= 0.07um
A: 
125xm5_S_6 {
@ Space between 1.25xMn in CP direction when one or both width = 0.04um. = 0.04, >= 0.07um
 err1_TMP = DFM SPACE M5 125xm5_040 < 0.04 BY EXT HORIZONTAL
 err2_TMP = DFM SPACE M5 125xm5_040 > 0.04 < 0.07 BY EXT HORIZONTAL
 // 
 waive_TMP = ANGLE 125xm5_060 == 90
 waive_EDG = EXT waive_TMP 125xm5_040 == 0.07 ABUT<90 OPPOSITE
 err1 = DFM COPY err1_TMP EDGE
 // NOT COIN EDGE (DFM COPY waive_EDG EDGE)
 err2 = DFM COPY err2_TMP EDGE
 // NOT COIN EDGE (DFM COPY waive_EDG EDGE)
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q:  Space between 1.25xMn in CP direction when one or both width = 0.042um. = 0.048, >= 0.07um
A: 
125xm5_S_6a {
@ Space between 1.25xMn in CP direction when one or both width = 0.042um. = 0.048, >= 0.07um
 err1 = EXT M5_v_edges 125xm5_042 < 0.048 ABUT<90 OPPOSITE REGION
 err2 = EXT M5_v_edges 125xm5_042 > 0.048 < 0.07 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn in CP direction when one or both width = 0.044um. = 0.046, >= 0.07um
A: 
125xm5_S_7 {
@ Space between 1.25xMn in CP direction when one or both width = 0.044um. = 0.046, >= 0.07um
 err1 = EXT M5_v_edges 125xm5_044 < 0.046 ABUT<90 OPPOSITE REGION
 err2 = EXT M5_v_edges 125xm5_044 > 0.046 < 0.07 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn in CP direction when one or both width = 0.046um. = 0.046um, >= 0.07um
A: 
125xm5_S_7a {
@ Space between 1.25xMn in CP direction when one or both width = 0.046um. = 0.046um, >= 0.07um
 err1 = EXT M5_v_edges 125xm5_046 < 0.046 ABUT<90 OPPOSITE REGION
 err2 = EXT M5_v_edges 125xm5_046 > 0.046 < 0.07 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn in CP direction when one or both width = 0.06um. = 0.04, 0.046, >= 0.06um
A: 
125xm5_S_8 {
@ Space between 1.25xMn in CP direction when one or both width = 0.06um. = 0.04, 0.046, >= 0.06um
 waive_s_6a_chk = ANGLE 125xm5_060 == 90
 waive_s_6a = DFM COPY (EXT waive_s_6a_chk 125xm5_040 == 0.070 ABUT<90 OPPOSITE) EDGE
 bad_1 = DFM SPACE 125xm5_060 M5 < 0.040 BY EXT HORIZONTAL
 bad_2 = DFM SPACE 125xm5_060 M5 > 0.040 < 0.046 BY EXT HORIZONTAL
 bad_3 = DFM SPACE 125xm5_060 M5 > 0.046 < 0.060 BY EXT HORIZONTAL
 err1 = DFM COPY bad_1 EDGE
 // NOT COIN EDGE waive_s_6a
 err2 = DFM COPY bad_2 EDGE
 // NOT COIN EDGE waive_s_6a
 err3 = DFM COPY bad_3 EDGE
 // NOT COIN EDGE waive_s_6a
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
 err3 NOT INSIDE EDGE SealR_NOT_BULK
}

Q:  Space between 1.25xMn in CP direction when one or both width > 0.06um when PRL > 0.08um. >= 0.06um
A: 
125xm5_S_8a {
@ Space between 1.25xMn in CP direction when one or both width > 0.06um when PRL > 0.08um. >= 0.06um
 met_wid_all = COPY 125xm5_gt_060
 met_err_RAW = EXT [met_wid_all] M5_v_edges < 0.06 ABUT<90 OPPOSITE MEASURE ALL
 met_jog_ALL = (CONVEX EDGE M5 == 1) NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M5
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] > 0.08
 met_err_EGE = met_err_RAW TOUCH EDGE met_err_PRL
 err1 = EXT met_err_EGE M5 < 0.06 ABUT<90 OPPOSITE REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn in CP direction, when one or both width = 0.06um, and the other side space < 0.06um. >= 0.079um
A: 
125xm5_S_9 {
@ Space between 1.25xMn in CP direction, when one or both width = 0.06um, and the other side space < 0.06um. >= 0.079um
 mets_sps_060 = EXT [M5_060_v_edges] M5 < 0.06 ABUT<90 OPPOSITE
 mets_sps_080 = EXT [M5_060_v_edges] M5 < 0.079 ABUT<90 OPPOSITE
 err1 = INT mets_sps_060 mets_sps_080 == 0.06 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
M5_convex_90_270_edges_gt_040 = ANGLE (CONVEX EDGE M5 ANGLE1 == 90 ANGLE2 == 270 WITH LENGTH > 0.04) == 0
M5_width_eq_080 = M5 WITH WIDTH == 0.08

Q:  Space between 1.25xMn in CP direction when one or both width >= 0.08um. >= 0.079um
     Except Z shape and flag shape:
    (1) Z-shape definition: edge length > 0.040um between two consecutive 90-270 degree corners, corresponding width = 0.08um in NCP direction between two opposite edge length > 0.04um, not including T-shape
    (2) Flag-shape definition: edge length > 0.04um between two consecutive 90-270 degree corners, the opposite edge length > 0.08um between two consecutive 90-90 degree corners, corresponding width = 0.08um in NCP direction between these two opposite edge, and the other corresponding width > 0.04um in CP direction
A: 
125xm5_S_10 {
@ Space between 1.25xMn in CP direction when one or both width >= 0.08um. >= 0.079um
@ Except Z shape and flag shape:
@ (1) Z-shape definition: edge length > 0.040um between two consecutive 90-270 degree corners, corresponding width = 0.08um in NCP direction between two opposite edge length > 0.04um, not including T-shape
@ (2) Flag-shape definition: edge length > 0.04um between two consecutive 90-270 degree corners, the opposite edge length > 0.08um between two consecutive 90-90 degree corners, corresponding width = 0.08um in NCP direction between these two opposite edge, and the other corresponding width > 0.04um in CP direction
 flag_shape_l_side = LENGTH M5_convex_90_90_edges > 0.08
 flag_shape_s_side = ANGLE (LENGTH M5_convex_90_90_edges == 0.08) == 90
 flag_shape = (M5_width_eq_080 INTERACT (INT M5_convex_90_270_edges_gt_040 flag_shape_l_side == 0.08 ABUT<90 OPPOSITE REGION)) WITH EDGE flag_shape_s_side
 zfig_shape = (M5_width_eq_080 INTERACT (INT M5_convex_90_270_edges_gt_040 == 0.08 ABUT<90 OPPOSITE REGION)) NOT WITH EDGE flag_shape_s_side
 waive_shape = (OR zfig_shape flag_shape) NOT COIN EDGE (INT [M5_v_edges] == 0.08 ABUT<90 OPPOSITE) // horizontal width=0.08 need to flag
 // 
 check_edge = INT (M5_v_edges) < 0.08 ABUT<90 OPPOSITE
 check_shape = check_edge NOT COIN EDGE waive_shape
 err1 = EXT check_shape (M5 NOT COIN EDGE waive_shape) < 0.079 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn in CP direction when one or both width >= 0.121um, PRL > 0.08um. >= 0.099um
A: 
125xm5_S_11 {
@ Space between 1.25xMn in CP direction when one or both width >= 0.121um, PRL > 0.08um. >= 0.099um
 mets_sps_100_ERRS = EXT 125xm5_eqgt_121 M5_v_edges < 0.099 ABUT<90 OPPOSITE
 mets_sps_100_AREA = EXT 125xm5_eqgt_121 M5_v_edges < 0.099 ABUT<90 OPPOSITE REGION
 err1 = DFM PROPERTY mets_sps_100_AREA mets_sps_100_ERRS OVERLAP ABUT ALSO MULTI [-= EC(mets_sps_100_ERRS)] > 0.08
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn (CP direction width > 0.16um and NCP direction width > 0.08um) and 1.25xMn edge (edge length > 0.08um in NCP direction) in CP direction >= 0.119um
A: 
125xm5_S_12 {
@ Space between 1.25xMn (CP direction width > 0.16um and NCP direction width > 0.08um) and 1.25xMn edge (edge length > 0.08um in NCP direction) in CP direction >= 0.119um
 mets_L_sides = (INT (M5_v_edges) <= 0.16 ABUT<90 OPPOSITE EXCLUDE SHIELDED) COIN EDGE 125xm5_gt_080
 mets_R_sides = LENGTH M5_v_edges > 0.08
 err1 = EXT mets_R_sides (mets_L_sides COIN EDGE mets_R_sides) < 0.119 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn in CP direction when one or both width >= 0.201um, PRL >= 0.121um. >= 0.144um
A: 
125xm5_S_13 {
@ Space between 1.25xMn in CP direction when one or both width >= 0.201um, PRL >= 0.121um. >= 0.144um
 mets_RAW = M5 WITH WIDTH >= 0.201
 mets_sps_ERRS = EXT mets_RAW M5_v_edges < 0.144 ABUT<90 OPPOSITE
 mets_sps_AREA = EXT mets_RAW M5_v_edges < 0.144 ABUT<90 OPPOSITE REGION
 err1 = DFM PROPERTY mets_sps_AREA mets_sps_ERRS OVERLAP ABUT ALSO MULTI [-= EC(mets_sps_ERRS)] >= 0.121
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn in CP direction when one or both width >= 0.231um, PRL >= 0.121um. >= 0.159um
A: 
125xm5_S_14 {
@ Space between 1.25xMn in CP direction when one or both width >= 0.231um, PRL >= 0.121um. >= 0.159um
 mets_RAW = (M5 WITH WIDTH >= 0.201) WITH WIDTH >= 0.231
 mets_sps_ERRS = EXT mets_RAW M5_v_edges < 0.159 ABUT<90 OPPOSITE
 mets_sps_AREA = EXT mets_RAW M5_v_edges < 0.159 ABUT<90 OPPOSITE REGION
 err1 = DFM PROPERTY mets_sps_AREA mets_sps_ERRS OVERLAP ABUT ALSO MULTI [-= EC(mets_sps_ERRS)] >= 0.121
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn and 1.25xMn line-end (width = 0.08um and both adiacent edge length > 0.09um) in CP direction when PRL > -0.08um. >= 0.099um
A: 
125xm5_S_15 {
@ Space between 1.25xMn and 1.25xMn line-end (width = 0.08um and both adiacent edge length > 0.09um) in CP direction when PRL > -0.08um. >= 0.099um
 lend_RAW = CONVEX EDGE M5 ANGLE1 == 90 LENGTH1 > 0.09 ANGLE2 == 90 LENGTH2 > 0.09 WITH LENGTH == 0.08
 lend_CHK = ANGLE lend_RAW == 90
 err1 = EXT lend_CHK M5 < 0.099 ABUT<90 OPPOSITE EXTENDED 0.08 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn in NCP direction when one or both width = 0.08um, 0.12um. >= 0.08um
A: 
125xm5_S_16 {
@ Space between 1.25xMn in NCP direction when one or both width = 0.08um, 0.12um. >= 0.08um
 mets_RAW = 125xm5_080 OR 125xm5_120
 mets_CHK = ANGLE mets_RAW == 0
 err1 = EXT mets_CHK M5 < 0.08 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn (0.16um <= NCP direction width < 0.2um and CP direction width > 0.08um) and 1.25xMn edge (edge length > 0.08um in CP direction) in NCP direction >= 0.099um
A: 
125xm5_S_17 {
@ Space between 1.25xMn (0.16um <= NCP direction width < 0.2um and CP direction width > 0.08um) and 1.25xMn edge (edge length > 0.08um in CP direction) in NCP direction >= 0.099um
 mets_L_sides = (INT [M5_h_edges] >= 0.16 < 0.2 ABUT<90 OPPOSITE EXCLUDE SHIELDED) COIN EDGE 125xm5_gt_080
 mets_R_sides = LENGTH M5_h_edges > 0.08
 err1 = EXT mets_R_sides (mets_L_sides COIN EDGE mets_R_sides) < 0.099 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn in NCP direction when one or both width > 0.12um, PRL >= 0.121um. >= 0.119um
A: 
125xm5_S_18 {
@ Space between 1.25xMn in NCP direction when one or both width > 0.12um, PRL >= 0.121um. >= 0.119um
 err1_TMP = EXT 125xm5_eqgt_121 M5_h_edges < 0.119 ABUT<90 OPPOSITE REGION
 err1 = err1_TMP ENCLOSE RECTANGLE 0.001 0.121 ORTHOGONAL ONLY
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn (NCP direction width >= 0.2um and CP direction width > 0.08um) and 1.25xMn edge (edge length > 0.08um in CP direction) in NCP direction >= 0.139um
A: 
125xm5_S_19 {
@ Space between 1.25xMn (NCP direction width >= 0.2um and CP direction width > 0.08um) and 1.25xMn edge (edge length > 0.08um in CP direction) in NCP direction >= 0.139um
 mets_L_sides = (INT (M5_h_edges) < 0.2 ABUT<90 OPPOSITE EXCLUDE SHIELDED) COIN EDGE 125xm5_gt_080
 mets_R_sides = LENGTH M5_h_edges > 0.08
 err1 = EXT mets_R_sides (mets_L_sides COIN EDGE mets_R_sides) < 0.139 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn in NCP direction when one or both width > 0.16um when PRL > 0.2um. >= 0.159um
A: 
125xm5_S_20 {
@ Space between 1.25xMn in NCP direction when one or both width > 0.16um when PRL > 0.2um. >= 0.159um
 err1_TMP = EXT 125xm5_gt_160 M5_h_edges < 0.159 ABUT<90 OPPOSITE REGION
 err1 = err1_TMP ENCLOSE RECTANGLE 0.001 0.20+GLOBAL_TOLERANCE ORTHOGONAL ONLY
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn and 1.25xMn line-end (width = 0.04/0.042um) in NCP direction when PRL > -0.04um. >= 0.099um
A: 
125xm5_S_21 {
@ Space between 1.25xMn and 1.25xMn line-end (width = 0.04/0.042um) in NCP direction when PRL > -0.04um. >= 0.099um
 lend_RAW = LENGTH M5_convex_eq_two_edges >= 0.04 <= 0.042
 lend_CHK = ANGLE lend_RAW == 0
 err1 = EXT lend_CHK M5 < 0.099 ABUT<90 OPPOSITE EXTENDED 0.04 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn and 1.25xMn line-end (width = 0.044/0.046/0.06um) in NCP direction when PRL > -0.04um. >= 0.080um
A: 
125xm5_S_21a {
@ Space between 1.25xMn and 1.25xMn line-end (width = 0.044/0.046/0.06um) in NCP direction when PRL > -0.04um. >= 0.080um
 lend_RAW_a = LENGTH M5_convex_eq_two_edges >= 0.044 <= 0.046
 lend_RAW_b = LENGTH M5_convex_eq_two_edges == 0.06
 lend_CHK = ANGLE (lend_RAW_a OR EDGE lend_RAW_b) == 0
 err1 = EXT lend_CHK M5 < 0.08 ABUT<90 OPPOSITE EXTENDED 0.04 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn and 1.25xMn line-end (0.06um < width <= 0.08um) in NCP direction when PRL > -0.08um. >= 0.08um
A: 
125xm5_S_22 {
@ Space between 1.25xMn and 1.25xMn line-end (0.06um < width <= 0.08um) in NCP direction when PRL > -0.08um. >= 0.08um
 lend_RAW = LENGTH M5_convex_eq_two_edges > 0.06 <= 0.08
 lend_CHK = ANGLE lend_RAW == 0
 err1 = EXT lend_CHK M5 < 0.08 ABUT<90 OPPOSITE EXTENDED 0.08 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn line-end (width < 0.08um) and U-shape inner edge (edge length <= 0.149um between two concave corners) in NCP direction >= 0.149um
A: 
125xm5_S_23 {
@ Space between 1.25xMn line-end (width < 0.08um) and U-shape inner edge (edge length <= 0.149um between two concave corners) in NCP direction >= 0.149um
 mets_U_sides = LENGTH M5_convex_270_270_edges <= 0.149
 err1 = EXT M5_end_080 mets_U_sides < 0.149 ABUT<90 OPPOSITE EXTENDED 0.04 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
125xM5_GROUP_80 = SIZE (SIZE (SIZE 125xm5_040 BY 0.02) BY -0.04) BY 0.02
125xM5_GROUP_90_1 = SIZE (SIZE (SIZE 125xm5_044 BY 0.023) BY -0.046) BY 0.023
125xM5_GROUP_90_2 = SIZE (SIZE (SIZE 125xm5_042 BY 0.024) BY -0.048) BY 0.024
125xM5_GROUP_90 = OR 125xM5_GROUP_90_1 125xM5_GROUP_90_2
 
Q: Space between 1.25xMn_Group_80 and 1.25xMn_Group_90 in CP direction when PRL > -0.08um. >= 0.199um
    1.25xMn_Group_80 definition: (((1.25xMn (width = 0.040um) SIZING 0.020um) SIZING -0.040um) SIZING 0.020um)
    1.25xMn_Group_90 definition: 1) (((1.25xMn (width = 0.044um) su 0.023um) sd -0.046um) su 0.023um). 2) (((1.25xMn (width = 0.042um) su 0.024um) sd -0.048um) su 0.024um)
A: 
125xm5_S_24a {
@ Space between 1.25xMn_Group_80 and 1.25xMn_Group_90 in CP direction when PRL > -0.08um. >= 0.199um
@ 1.25xMn_Group_80 definition: (((1.25xMn (width = 0.040um) SIZING 0.020um) SIZING -0.040um) SIZING 0.020um)
@ 1.25xMn_Group_90 definition: 1) (((1.25xMn (width = 0.044um) su 0.023um) sd -0.046um) su 0.023um). 2) (((1.25xMn (width = 0.042um) su 0.024um) sd -0.048um) su 0.024um)
 line_080 = ANGLE 125xM5_GROUP_80 == 90
 line_090 = ANGLE 125xM5_GROUP_90 == 90
 err1 = EXT line_080 line_090 < 0.199 ABUT<90 OPPOSITE EXTENDED 0.08 REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xMn line-end inside 1.25xMn_Group_80 and 1.25xMy line-end of 1.25xMn_Group_90 in NCP direction when PRL > -0.199um. >= 0.149um
A: 
125xm5_S_24b {
@ Space between 1.25xMn line-end inside 1.25xMn_Group_80 and 1.25xMy line-end of 1.25xMn_Group_90 in NCP direction when PRL > -0.199um. >= 0.149um
 lend_080 = ANGLE (M5_end NOT OUTSIDE EDGE 125xM5_GROUP_80) == 0
 lend_090 = ANGLE (M5_end NOT OUTSIDE EDGE 125xM5_GROUP_90) == 0
 err1 = EXT lend_080 lend_090 < 0.149 ABUT<90 OPPOSITE EXTENDED 0.199 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Corner projected space between 1.25xMn when -0.08um < PRL <= 0um. >= 0.08um
    Except line end-to-end (width <= 0.06um), Z-shape, and flag-shape:
    Definition of Z-shape /flag-shape:
    1) Z-shape: edge length > 0.040um between two consecutive 90-270 degree corners, corresponding width = 0.08um in NCP direction between two opposite edge length > 0.040um, not including T-shape
    2) flag-shape: edge length > 0.04um between two consecutive 90-270 degree corners, the opposite edge length > 0.08um between two consecutive 90-90 degree corners, corresponding width = 0.08um in NCP direction between these 2 opposite edge, and the other corresponding width > 0.04um in CP direction
A: 
125xm5_S_25 {
@ Corner projected space between 1.25xMn when -0.08um < PRL <= 0um. >= 0.08um
@ Except line end-to-end (width <= 0.06um), Z-shape, and flag-shape:
@ Definition of Z-shape /flag-shape:
@ 1) Z-shape: edge length > 0.040um between two consecutive 90-270 degree corners, corresponding width = 0.08um in NCP direction between two opposite edge length > 0.040um, not including T-shape
@ 2) flag-shape: edge length > 0.04um between two consecutive 90-270 degree corners, the opposite edge length > 0.08um between two consecutive 90-90 degree corners, corresponding width = 0.08um in NCP direction between these 2 opposite edge, and the other corresponding width > 0.04um in CP direction
 line_end = (CONVEX EDGE M5 ANGLE1 == 90 ANGLE2 == 90 WITH LENGTH <= 0.06) COIN EDGE M5_h_edges
 // 
 flag_shape_l_side = LENGTH M5_convex_90_90_edges > 0.08
 flag_shape_s_side = ANGLE (LENGTH M5_convex_90_90_edges == 0.08) == 90
 flag_shape = (M5_width_eq_080 INTERACT (INT M5_convex_90_270_edges_gt_040 flag_shape_l_side == 0.08 ABUT<90 OPPOSITE REGION)) WITH EDGE flag_shape_s_side
 zfig_shape = (M5_width_eq_080 INTERACT (INT M5_convex_90_270_edges_gt_040 == 0.08 ABUT<90 OPPOSITE REGION)) NOT WITH EDGE flag_shape_s_side
 waive_shape = OR zfig_shape flag_shape
 // 
 corner_space_prl_lt_0 = EXT M5 < 0.08*1.414 CORNER TO CORNER
 corner_space_prl_eq_0 = EXT line_end M5 < 0.08 PROJ == 0
 corner_space_all_TMP = DFM COPY corner_space_prl_lt_0 corner_space_prl_eq_0
 corner_space_all = DFM PROPERTY corner_space_all_TMP line_end waive_shape OVERLAP ABUT ALSO MULTI 
 [-= (count(line_end) > 0 && count(waive_shape) == 0) ? 1 : 0] > 0 
 [-= (EWXP(corner_space_all_TMP) < 0.08 && EWYP(corner_space_all_TMP) < 0.08) ? 1 : 0] > 0
 err1_TMP = DFM PROPERTY corner_space_all line_end OVERLAP ABUT ALSO MULTI [-= (count(line_end) == 0 || count(line_end) < 2) ? 1 : 0] > 0
 err1 = DFM COPY err1_TMP REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Corner space between two 1.25xMn in NCP direction when -0.04um < PRL <= 0um. >= 0.08um
A: 
125xm5_S_25a {
@ Corner space between two 1.25xMn in NCP direction when -0.04um < PRL <= 0um. >= 0.08um
 err1_RAW = EXT M5 < 0.08 ABUT<90 CORNER TO CORNER
 err1_TMP = DFM PROPERTY err1_RAW GLOBALXY [-= EWXP(err1_RAW)] < 0.04
 err1_SPE = EXT M5 M5_h_edges < 0.08 ABUT<90 REGION PROJ == 0
 err1 = (DFM COPY err1_TMP REGION) OR err1_SPE
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: At least one space between 1.25xMn edge (any adjacent edge of concave corner) and 1.25xMn >= 0.119um, except either condition as below:
    1. Edge length between two concave corners < 0.12um
    2. Side edge length of concave corner < 0.042um
A: 
125xm5_S_26 {
@ At least one space between 1.25xMn edge (any adjacent edge of concave corner) and 1.25xMn >= 0.119um, except either condition as below:
@ 1. Edge length between two concave corners < 0.12um
@ 2. Side edge length of concave corner < 0.042um
 waive_edge_a = LENGTH M5_convex_270_270_edges < 0.120
 waive_edge_b = LENGTH M5_convex_lt_two_edges < 0.042
 check_edge = (LENGTH M5_convex_lt_two_edges >= 0.042) NOT COIN EDGE M5_45_skew_edges
 // 
 Y1 = EXT [M5] check_edge < 0.119 ABUT<90 OPPOSITE EXTENDED 0.119
 Y2 = INT [Y1] < 0.001 ABUT==90 INTERSECTING ONLY
 Y3 = EXT Y2 check_edge < 0.119 ABUT<90 OPPOSITE EXTENDED 0.119
 err1_TMP = EXT (DFM COPY Y3 EDGE) < 0.04 ABUT==90 INTERSECTING ONLY REGION EXTENTS
 err1 = (err1_TMP NOT WITH EDGE waive_edge_a) NOT WITH EDGE waive_edge_b
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMy concave corner (both side edge length > 0.08um) and 1.25xMy line-end (width < 0.08um) >= 0.154um
A: 
125xm5_S_27 {
@ Space between 1.25xMy concave corner (both side edge length > 0.08um) and 1.25xMy line-end (width < 0.08um) >= 0.154um
 mets_CHK = LENGTH M5_convex_lt_two_edges > 0.08
 mets_CRN = EXT [mets_CHK] < 0.0005 ABUT==90 INTERSECTING ONLY // resolution concern
 // 
 err1_RAW = EXT M5_convex_lt_two_edges M5_end_080 < 0.154 ABUT EXCLUDE SHIELDED
 err1_HAS = mets_CRN COIN EDGE M5_convex_lt_two_edges
 err1_TMP = DFM PROPERTY err1_RAW err1_HAS ABUT ALSO OVERLAP MULTI [-= count(err1_HAS)] > 0
 err1 = DFM COPY err1_TMP REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
M5_space_eq_040_v_edges = EXT [M5_v_edges] == 0.04 OPPOSITE
M5_space_eq_040_v_areas = EXT M5_v_edges == 0.04 OPPOSITE REGION
M5_space_eq_040_v_areas_v_edges = ANGLE M5_space_eq_040_v_areas == 90
M5_width_lt_080_v_edges = (INT [M5_v_edges] < 0.08 ABUT<90 OPPOSITE) COIN EDGE (M5 WITH WIDTH < 0.08)
 
Q: Forbidden the space between 1.25xMn (width = 0.04~0.046um and one side space = 0.04um) and 1.25xMn (width < 0.08um (W1)) in CP direction, except both side space of 1.25xMy (width < 0.08um) to 1.25xMy >= 0.1um. = 0.061~0.098, 0.131~0.178um
A: 
125xm5_S_28 {
@ Forbidden the space between 1.25xMn (width = 0.04~0.046um and one side space = 0.04um) and 1.25xMn (width < 0.08um (W1)) in CP direction, except both side space of 1.25xMy (width < 0.08um) to 1.25xMy >= 0.1um. = 0.061~0.098, 0.131~0.178um
 Mn_w040_w042 = WITH WIDTH M5 >= 0.04 <= 0.046
 Mn_w040_s040_v_edges = Mn_w040_w042 COIN EDGE M5_space_eq_040_v_edges
 Mn_w040_s040_v_edges_opp = INT Mn_w040_s040_v_edges [Mn_w040_w042] >= 0.04 <= 0.046 ABUT<90 OPPOSITE
 // not check W1 >= 0.08
 // 
 Mn_w080_s99_v_edges = EXT (M5_width_lt_080_v_edges) < 0.10 ABUT<90 OPPOSITE
 Mn_w080_s99_v_edges_both = INT [Mn_w080_s99_v_edges] < 0.08 ABUT<90 OPPOSITE
 Mn_w080_s99_v_edges_none = M5_width_lt_080_v_edges NOT COIN EDGE Mn_w080_s99_v_edges_both
 err1 = EXT Mn_w080_s99_v_edges_none Mn_w040_s040_v_edges_opp >= 0.131 <= 0.178 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err2 = EXT Mn_w080_s99_v_edges_none Mn_w040_s040_v_edges_opp >= 0.061 <= 0.098 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}
 
Q: Fobidden space between 1.25xMy (width = 0.06~0.07um and one side space = 0.04um) and 1.25xMy (width < 0.08um) in CP direction, except both side space of 1.25xMy (width < 0.08um) to 1.25xMy >= 0.1um. = 0.11~0.158um
A: 
125xm5_S_29 {
@ Fobidden space between 1.25xMy (width = 0.06~0.07um and one side space = 0.04um) and 1.25xMy (width < 0.08um) in CP direction, except both side space of 1.25xMy (width < 0.08um) to 1.25xMy >= 0.1um. = 0.11~0.158um
 Mn_w060_w070 = WITH WIDTH M5 >= 0.06 <= 0.07
 Mn_w060_s040_v_edges = Mn_w060_w070 COIN EDGE M5_space_eq_040_v_edges
 Mn_w060_s040_v_edges_opp = INT Mn_w060_s040_v_edges [Mn_w060_w070] >= 0.06 <= 0.07 ABUT<90 OPPOSITE
 // not check W1 >= 0.08
 // 
 Mn_w080_s99_v_edges = EXT (M5_width_lt_080_v_edges) < 0.10 ABUT<90 OPPOSITE
 Mn_w080_s99_v_edges_both = INT [Mn_w080_s99_v_edges] < 0.08 ABUT<90 OPPOSITE
 Mn_w080_s99_v_edges_none = M5_width_lt_080_v_edges NOT COIN EDGE Mn_w080_s99_v_edges_both
 err1 = EXT Mn_w080_s99_v_edges_none Mn_w060_s040_v_edges_opp >= 0.110 <= 0.158 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn and 45-degree bent 1.25xMn, DRC check 45-degree direction >= 0.396um
A: 
125xm5_S_30 {
@ Space between 1.25xMn and 45-degree bent 1.25xMn, DRC check 45-degree direction >= 0.396um
 err1 = EXT M5 M5_45_skew_edges < 0.396 ABUT<90 OPPOSITE2 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//125xm7
Q: 1.25xMn space >= 0.04um
A: 
125xm7_S_1 {
@ 1.25xMn space >= 0.04um
 err1 = EXT M7 < 0.04 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn when one or both width >= 0.201um when PRL >= -0.139um. >= 0.139um
A: 
125xm7_S_2 {
@ Space between 1.25xMn when one or both width >= 0.201um when PRL >= -0.139um. >= 0.139um
 chk_Mn = M7 WITH WIDTH >= 0.201
 err1 = EXT M7 chk_Mn < 0.139 ABUT<90 OPPOSITE EXTENDED 0.139+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn when one or both width >= 0.282um when PRL > 0.16um. >= 0.199um
A: 
125xm7_S_3 {
@ Space between 1.25xMn when one or both width >= 0.282um when PRL > 0.16um. >= 0.199um
 mets_RAW = (M7 WITH WIDTH >= 0.201) WITH WIDTH >= 0.282
 mets_sps_ERRS = EXT mets_RAW M7 < 0.199 ABUT<90 OPPOSITE
 mets_sps_AREA = EXT mets_RAW M7 < 0.199 ABUT<90 OPPOSITE REGION
 err1 = DFM PROPERTY mets_sps_AREA mets_sps_ERRS OVERLAP ABUT ALSO MULTI [-= EC(mets_sps_ERRS)] > 0.16
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn when one or both width > 0.5um when PRL >= -0.199um. >= 0.199um
A: 
125xm7_S_4 {
@ Space between 1.25xMn when one or both width > 0.5um when PRL >= -0.199um. >= 0.199um
 chk_Mn = (M7 WITH WIDTH >= 0.201) WITH WIDTH > 0.5
 err1 = EXT M7 chk_Mn < 0.199 ABUT<90 OPPOSITE EXTENDED 0.199+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn when one or both width > 1.35um when PRL > 1.35um. >= 0.448um
A: 
125xm7_S_5 {
@ Space between 1.25xMn when one or both width > 1.35um when PRL > 1.35um. >= 0.448um
 met_wid_all = M7 WITH WIDTH >= 1.35+GLOBAL_TOLERANCE
 met_err_RAW = EXT M7 met_wid_all < 0.448 OPPOSITE REGION MEASURE ALL
 met_err_CRN = EXT (ANGLE M7 > 44 < 46) met_wid_all < 0.448 OPPOSITE1 REGION MEASURE ALL
 err1 = met_err_RAW ENCLOSE RECTANGLE 0.001 1.351 ORTHOGONAL ONLY
 err2 = met_err_CRN ENCLOSE RECTANGLE 0.04 1.351
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn in CP direction when one or both width = 0.04um. = 0.04, >= 0.07um
A: 
125xm7_S_6 {
@ Space between 1.25xMn in CP direction when one or both width = 0.04um. = 0.04, >= 0.07um
 err1_TMP = DFM SPACE M7 125xm7_040 < 0.04 BY EXT HORIZONTAL
 err2_TMP = DFM SPACE M7 125xm7_040 > 0.04 < 0.07 BY EXT HORIZONTAL
 // 
 waive_TMP = ANGLE 125xm7_060 == 90
 waive_EDG = EXT waive_TMP 125xm7_040 == 0.07 ABUT<90 OPPOSITE
 err1 = DFM COPY err1_TMP EDGE
 // NOT COIN EDGE (DFM COPY waive_EDG EDGE)
 err2 = DFM COPY err2_TMP EDGE
 // NOT COIN EDGE (DFM COPY waive_EDG EDGE)
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q:  Space between 1.25xMn in CP direction when one or both width = 0.042um. = 0.048, >= 0.07um
A: 
125xm7_S_6a {
@ Space between 1.25xMn in CP direction when one or both width = 0.042um. = 0.048, >= 0.07um
 err1 = EXT M7_v_edges 125xm7_042 < 0.048 ABUT<90 OPPOSITE REGION
 err2 = EXT M7_v_edges 125xm7_042 > 0.048 < 0.07 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn in CP direction when one or both width = 0.044um. = 0.046, >= 0.07um
A: 
125xm7_S_7 {
@ Space between 1.25xMn in CP direction when one or both width = 0.044um. = 0.046, >= 0.07um
 err1 = EXT M7_v_edges 125xm7_044 < 0.046 ABUT<90 OPPOSITE REGION
 err2 = EXT M7_v_edges 125xm7_044 > 0.046 < 0.07 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn in CP direction when one or both width = 0.046um. = 0.046um, >= 0.07um
A: 
125xm7_S_7a {
@ Space between 1.25xMn in CP direction when one or both width = 0.046um. = 0.046um, >= 0.07um
 err1 = EXT M7_v_edges 125xm7_046 < 0.046 ABUT<90 OPPOSITE REGION
 err2 = EXT M7_v_edges 125xm7_046 > 0.046 < 0.07 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn in CP direction when one or both width = 0.06um. = 0.04, 0.046, >= 0.06um
A: 
125xm7_S_8 {
@ Space between 1.25xMn in CP direction when one or both width = 0.06um. = 0.04, 0.046, >= 0.06um
 waive_s_6a_chk = ANGLE 125xm7_060 == 90
 waive_s_6a = DFM COPY (EXT waive_s_6a_chk 125xm7_040 == 0.070 ABUT<90 OPPOSITE) EDGE
 bad_1 = DFM SPACE 125xm7_060 M7 < 0.040 BY EXT HORIZONTAL
 bad_2 = DFM SPACE 125xm7_060 M7 > 0.040 < 0.046 BY EXT HORIZONTAL
 bad_3 = DFM SPACE 125xm7_060 M7 > 0.046 < 0.060 BY EXT HORIZONTAL
 err1 = DFM COPY bad_1 EDGE
 // NOT COIN EDGE waive_s_6a
 err2 = DFM COPY bad_2 EDGE
 // NOT COIN EDGE waive_s_6a
 err3 = DFM COPY bad_3 EDGE
 // NOT COIN EDGE waive_s_6a
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
 err3 NOT INSIDE EDGE SealR_NOT_BULK
}

Q:  Space between 1.25xMn in CP direction when one or both width > 0.06um when PRL > 0.08um. >= 0.06um
A: 
125xm7_S_8a {
@ Space between 1.25xMn in CP direction when one or both width > 0.06um when PRL > 0.08um. >= 0.06um
 met_wid_all = COPY 125xm7_gt_060
 met_err_RAW = EXT [met_wid_all] M7_v_edges < 0.06 ABUT<90 OPPOSITE MEASURE ALL
 met_jog_ALL = (CONVEX EDGE M7 == 1) NOT COIN EDGE met_err_RAW
 met_jog_EXP_a = EXPAND EDGE met_jog_ALL INSIDE BY 0.0005
 met_jog_EXP_b = EXPAND EDGE met_jog_ALL OUTSIDE BY 0.0005
 met_jog_TMP = (met_jog_ALL COIN EDGE (met_jog_EXP_a WITH EDGE met_err_RAW)) COIN EDGE (met_jog_EXP_b WITH EDGE met_err_RAW)
 met_jog_EXP = ((VERTEX (EXPAND EDGE met_jog_TMP OUTSIDE BY 0.001 EXTEND BY 0.001) == 4) OR (EXPAND EDGE met_err_RAW OUTSIDE BY 0.001)) NOT M7
 // 
 met_err_PRL = DFM PROPERTY met_jog_EXP met_err_RAW OVERLAP ABUT ALSO MULTI [-= LENGTH(met_err_RAW)] > 0.08
 met_err_EGE = met_err_RAW TOUCH EDGE met_err_PRL
 err1 = EXT met_err_EGE M7 < 0.06 ABUT<90 OPPOSITE REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn in CP direction, when one or both width = 0.06um, and the other side space < 0.06um. >= 0.079um
A: 
125xm7_S_9 {
@ Space between 1.25xMn in CP direction, when one or both width = 0.06um, and the other side space < 0.06um. >= 0.079um
 mets_sps_060 = EXT [M7_060_v_edges] M7 < 0.06 ABUT<90 OPPOSITE
 mets_sps_080 = EXT [M7_060_v_edges] M7 < 0.079 ABUT<90 OPPOSITE
 err1 = INT mets_sps_060 mets_sps_080 == 0.06 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
M7_convex_90_270_edges_gt_040 = ANGLE (CONVEX EDGE M7 ANGLE1 == 90 ANGLE2 == 270 WITH LENGTH > 0.04) == 0
M7_width_eq_080 = M7 WITH WIDTH == 0.08
 
Q: Space between 1.25xMn in CP direction when one or both width >= 0.08um. >= 0.079um
    Except Z shape and flag shape:
    (1) Z-shape definition: edge length > 0.040um between two consecutive 90-270 degree corners, corresponding width = 0.08um in NCP direction between two opposite edge length > 0.04um, not including T-shape
    (2) Flag-shape definition: edge length > 0.04um between two consecutive 90-270 degree corners, the opposite edge length > 0.08um between two consecutive 90-90 degree corners, corresponding width = 0.08um in NCP direction between these two opposite edge, and the other corresponding width > 0.04um in CP direction
A: 
125xm7_S_10 {
@ Space between 1.25xMn in CP direction when one or both width >= 0.08um. >= 0.079um
@ Except Z shape and flag shape:
@ (1) Z-shape definition: edge length > 0.040um between two consecutive 90-270 degree corners, corresponding width = 0.08um in NCP direction between two opposite edge length > 0.04um, not including T-shape
@ (2) Flag-shape definition: edge length > 0.04um between two consecutive 90-270 degree corners, the opposite edge length > 0.08um between two consecutive 90-90 degree corners, corresponding width = 0.08um in NCP direction between these two opposite edge, and the other corresponding width > 0.04um in CP direction
 flag_shape_l_side = LENGTH M7_convex_90_90_edges > 0.08
 flag_shape_s_side = ANGLE (LENGTH M7_convex_90_90_edges == 0.08) == 90
 flag_shape = (M7_width_eq_080 INTERACT (INT M7_convex_90_270_edges_gt_040 flag_shape_l_side == 0.08 ABUT<90 OPPOSITE REGION)) WITH EDGE flag_shape_s_side
 zfig_shape = (M7_width_eq_080 INTERACT (INT M7_convex_90_270_edges_gt_040 == 0.08 ABUT<90 OPPOSITE REGION)) NOT WITH EDGE flag_shape_s_side
 waive_shape = (OR zfig_shape flag_shape) NOT COIN EDGE (INT [M7_v_edges] == 0.08 ABUT<90 OPPOSITE) // horizontal width=0.08 need to flag
 // 
 check_edge = INT (M7_v_edges) < 0.08 ABUT<90 OPPOSITE
 check_shape = check_edge NOT COIN EDGE waive_shape
 err1 = EXT check_shape (M7 NOT COIN EDGE waive_shape) < 0.079 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn in CP direction when one or both width >= 0.121um, PRL > 0.08um. >= 0.099um
A: 
125xm7_S_11 {
@ Space between 1.25xMn in CP direction when one or both width >= 0.121um, PRL > 0.08um. >= 0.099um
 mets_sps_100_ERRS = EXT 125xm7_eqgt_121 M7_v_edges < 0.099 ABUT<90 OPPOSITE
 mets_sps_100_AREA = EXT 125xm7_eqgt_121 M7_v_edges < 0.099 ABUT<90 OPPOSITE REGION
 err1 = DFM PROPERTY mets_sps_100_AREA mets_sps_100_ERRS OVERLAP ABUT ALSO MULTI [-= EC(mets_sps_100_ERRS)] > 0.08
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn (CP direction width > 0.16um and NCP direction width > 0.08um) and 1.25xMn edge (edge length > 0.08um in NCP direction) in CP direction >= 0.119um
A: 
125xm7_S_12 {
@ Space between 1.25xMn (CP direction width > 0.16um and NCP direction width > 0.08um) and 1.25xMn edge (edge length > 0.08um in NCP direction) in CP direction >= 0.119um
 mets_L_sides = (INT (M7_v_edges) <= 0.16 ABUT<90 OPPOSITE EXCLUDE SHIELDED) COIN EDGE 125xm7_gt_080
 mets_R_sides = LENGTH M7_v_edges > 0.08
 err1 = EXT mets_R_sides (mets_L_sides COIN EDGE mets_R_sides) < 0.119 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn in CP direction when one or both width >= 0.201um, PRL >= 0.121um. >= 0.144um
A: 
125xm7_S_13 {
@ Space between 1.25xMn in CP direction when one or both width >= 0.201um, PRL >= 0.121um. >= 0.144um
 mets_RAW = M7 WITH WIDTH >= 0.201
 mets_sps_ERRS = EXT mets_RAW M7_v_edges < 0.144 ABUT<90 OPPOSITE
 mets_sps_AREA = EXT mets_RAW M7_v_edges < 0.144 ABUT<90 OPPOSITE REGION
 err1 = DFM PROPERTY mets_sps_AREA mets_sps_ERRS OVERLAP ABUT ALSO MULTI [-= EC(mets_sps_ERRS)] >= 0.121
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn in CP direction when one or both width >= 0.231um, PRL >= 0.121um. >= 0.159um
A: 
125xm7_S_14 {
@ Space between 1.25xMn in CP direction when one or both width >= 0.231um, PRL >= 0.121um. >= 0.159um
 mets_RAW = (M7 WITH WIDTH >= 0.201) WITH WIDTH >= 0.231
 mets_sps_ERRS = EXT mets_RAW M7_v_edges < 0.159 ABUT<90 OPPOSITE
 mets_sps_AREA = EXT mets_RAW M7_v_edges < 0.159 ABUT<90 OPPOSITE REGION
 err1 = DFM PROPERTY mets_sps_AREA mets_sps_ERRS OVERLAP ABUT ALSO MULTI [-= EC(mets_sps_ERRS)] >= 0.121
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn and 1.25xMn line-end (width = 0.08um and both adiacent edge length > 0.09um) in CP direction when PRL > -0.08um. >= 0.099um
A: 
125xm7_S_15 {
@ Space between 1.25xMn and 1.25xMn line-end (width = 0.08um and both adiacent edge length > 0.09um) in CP direction when PRL > -0.08um. >= 0.099um
 lend_RAW = CONVEX EDGE M7 ANGLE1 == 90 LENGTH1 > 0.09 ANGLE2 == 90 LENGTH2 > 0.09 WITH LENGTH == 0.08
 lend_CHK = ANGLE lend_RAW == 90
 err1 = EXT lend_CHK M7 < 0.099 ABUT<90 OPPOSITE EXTENDED 0.08 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn in NCP direction when one or both width = 0.08um, 0.12um. >= 0.08um
A: 
125xm7_S_16 {
@ Space between 1.25xMn in NCP direction when one or both width = 0.08um, 0.12um. >= 0.08um
 mets_RAW = 125xm7_080 OR 125xm7_120
 mets_CHK = ANGLE mets_RAW == 0
 err1 = EXT mets_CHK M7 < 0.08 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn (0.16um <= NCP direction width < 0.2um and CP direction width > 0.08um) and 1.25xMn edge (edge length > 0.08um in CP direction) in NCP direction >= 0.099um
A: 
125xm7_S_17 {
@ Space between 1.25xMn (0.16um <= NCP direction width < 0.2um and CP direction width > 0.08um) and 1.25xMn edge (edge length > 0.08um in CP direction) in NCP direction >= 0.099um
 mets_L_sides = (INT [M7_h_edges] >= 0.16 < 0.2 ABUT<90 OPPOSITE EXCLUDE SHIELDED) COIN EDGE 125xm7_gt_080
 mets_R_sides = LENGTH M7_h_edges > 0.08
 err1 = EXT mets_R_sides (mets_L_sides COIN EDGE mets_R_sides) < 0.099 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn in NCP direction when one or both width > 0.12um, PRL >= 0.121um. >= 0.119um
A: 
125xm7_S_18 {
@ Space between 1.25xMn in NCP direction when one or both width > 0.12um, PRL >= 0.121um. >= 0.119um
 err1_TMP = EXT 125xm7_eqgt_121 M7_h_edges < 0.119 ABUT<90 OPPOSITE REGION
 err1 = err1_TMP ENCLOSE RECTANGLE 0.001 0.121 ORTHOGONAL ONLY
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn (NCP direction width >= 0.2um and CP direction width > 0.08um) and 1.25xMn edge (edge length > 0.08um in CP direction) in NCP direction >= 0.139um
A: 
125xm7_S_19 {
@ Space between 1.25xMn (NCP direction width >= 0.2um and CP direction width > 0.08um) and 1.25xMn edge (edge length > 0.08um in CP direction) in NCP direction >= 0.139um
 mets_L_sides = (INT (M7_h_edges) < 0.2 ABUT<90 OPPOSITE EXCLUDE SHIELDED) COIN EDGE 125xm7_gt_080
 mets_R_sides = LENGTH M7_h_edges > 0.08
 err1 = EXT mets_R_sides (mets_L_sides COIN EDGE mets_R_sides) < 0.139 ABUT<90 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn in NCP direction when one or both width > 0.16um when PRL > 0.2um. >= 0.159um
A: 
125xm7_S_20 {
@ Space between 1.25xMn in NCP direction when one or both width > 0.16um when PRL > 0.2um. >= 0.159um
 err1_TMP = EXT 125xm7_gt_160 M7_h_edges < 0.159 ABUT<90 OPPOSITE REGION
 err1 = err1_TMP ENCLOSE RECTANGLE 0.001 0.20+GLOBAL_TOLERANCE ORTHOGONAL ONLY
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn and 1.25xMn line-end (width = 0.04/0.042um) in NCP direction when PRL > -0.04um. >= 0.099um
A: 
125xm7_S_21 {
@ Space between 1.25xMn and 1.25xMn line-end (width = 0.04/0.042um) in NCP direction when PRL > -0.04um. >= 0.099um
 lend_RAW = LENGTH M7_convex_eq_two_edges >= 0.04 <= 0.042
 lend_CHK = ANGLE lend_RAW == 0
 err1 = EXT lend_CHK M7 < 0.099 ABUT<90 OPPOSITE EXTENDED 0.04 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn and 1.25xMn line-end (width = 0.044/0.046/0.06um) in NCP direction when PRL > -0.04um. >= 0.080um
A: 
125xm7_S_21a {
@ Space between 1.25xMn and 1.25xMn line-end (width = 0.044/0.046/0.06um) in NCP direction when PRL > -0.04um. >= 0.080um
 lend_RAW_a = LENGTH M7_convex_eq_two_edges >= 0.044 <= 0.046
 lend_RAW_b = LENGTH M7_convex_eq_two_edges == 0.06
 lend_CHK = ANGLE (lend_RAW_a OR EDGE lend_RAW_b) == 0
 err1 = EXT lend_CHK M7 < 0.08 ABUT<90 OPPOSITE EXTENDED 0.04 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn and 1.25xMn line-end (0.06um < width <= 0.08um) in NCP direction when PRL > -0.08um. >= 0.08um
A: 
125xm7_S_22 {
@ Space between 1.25xMn and 1.25xMn line-end (0.06um < width <= 0.08um) in NCP direction when PRL > -0.08um. >= 0.08um
 lend_RAW = LENGTH M7_convex_eq_two_edges > 0.06 <= 0.08
 lend_CHK = ANGLE lend_RAW == 0
 err1 = EXT lend_CHK M7 < 0.08 ABUT<90 OPPOSITE EXTENDED 0.08 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn line-end (width < 0.08um) and U-shape inner edge (edge length <= 0.149um between two concave corners) in NCP direction >= 0.149um
A: 
125xm7_S_23 {
@ Space between 1.25xMn line-end (width < 0.08um) and U-shape inner edge (edge length <= 0.149um between two concave corners) in NCP direction >= 0.149um
 mets_U_sides = LENGTH M7_convex_270_270_edges <= 0.149
 err1 = EXT M7_end_080 mets_U_sides < 0.149 ABUT<90 OPPOSITE EXTENDED 0.04 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
125xM7_GROUP_80 = SIZE (SIZE (SIZE 125xm7_040 BY 0.02) BY -0.04) BY 0.02
125xM7_GROUP_90_1 = SIZE (SIZE (SIZE 125xm7_044 BY 0.023) BY -0.046) BY 0.023
125xM7_GROUP_90_2 = SIZE (SIZE (SIZE 125xm7_042 BY 0.024) BY -0.048) BY 0.024
125xM7_GROUP_90 = OR 125xM7_GROUP_90_1 125xM7_GROUP_90_2
 
Q: Space between 1.25xMn_Group_80 and 1.25xMn_Group_90 in CP direction when PRL > -0.08um. >= 0.199um
    1.25xMn_Group_80 definition: (((1.25xMn (width = 0.040um) SIZING 0.020um) SIZING -0.040um) SIZING 0.020um)
    1.25xMn_Group_90 definition: 1) (((1.25xMn (width = 0.044um) su 0.023um) sd -0.046um) su 0.023um). 2) (((1.25xMn (width = 0.042um) su 0.024um) sd -0.048um) su 0.024um)
A: 
125xm7_S_24a {
@ Space between 1.25xMn_Group_80 and 1.25xMn_Group_90 in CP direction when PRL > -0.08um. >= 0.199um
@ 1.25xMn_Group_80 definition: (((1.25xMn (width = 0.040um) SIZING 0.020um) SIZING -0.040um) SIZING 0.020um)
@ 1.25xMn_Group_90 definition: 1) (((1.25xMn (width = 0.044um) su 0.023um) sd -0.046um) su 0.023um). 2) (((1.25xMn (width = 0.042um) su 0.024um) sd -0.048um) su 0.024um)
 line_080 = ANGLE 125xM7_GROUP_80 == 90
 line_090 = ANGLE 125xM7_GROUP_90 == 90
 err1 = EXT line_080 line_090 < 0.199 ABUT<90 OPPOSITE EXTENDED 0.08 REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn line-end inside 1.25xMn_Group_80 and 1.25xMy line-end of 1.25xMn_Group_90 in NCP direction when PRL > -0.199um. >= 0.149um
A: 
125xm7_S_24b {
@ Space between 1.25xMn line-end inside 1.25xMn_Group_80 and 1.25xMy line-end of 1.25xMn_Group_90 in NCP direction when PRL > -0.199um. >= 0.149um
 lend_080 = ANGLE (M7_end NOT OUTSIDE EDGE 125xM7_GROUP_80) == 0
 lend_090 = ANGLE (M7_end NOT OUTSIDE EDGE 125xM7_GROUP_90) == 0
 err1 = EXT lend_080 lend_090 < 0.149 ABUT<90 OPPOSITE EXTENDED 0.199 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Corner projected space between 1.25xMn when -0.08um < PRL <= 0um. >= 0.08um
    Except line end-to-end (width <= 0.06um), Z-shape, and flag-shape:
    Definition of Z-shape /flag-shape:
    1) Z-shape: edge length > 0.040um between two consecutive 90-270 degree corners, corresponding width = 0.08um in NCP direction between two opposite edge length > 0.040um, not including T-shape
    2) flag-shape: edge length > 0.04um between two consecutive 90-270 degree corners, the opposite edge length > 0.08um between two consecutive 90-90 degree corners, corresponding width = 0.08um in NCP direction between these 2 opposite edge, and the other corresponding width > 0.04um in CP direction
A: 
125xm7_S_25 {
@ Corner projected space between 1.25xMn when -0.08um < PRL <= 0um. >= 0.08um
@ Except line end-to-end (width <= 0.06um), Z-shape, and flag-shape:
@ Definition of Z-shape /flag-shape:
@ 1) Z-shape: edge length > 0.040um between two consecutive 90-270 degree corners, corresponding width = 0.08um in NCP direction between two opposite edge length > 0.040um, not including T-shape
@ 2) flag-shape: edge length > 0.04um between two consecutive 90-270 degree corners, the opposite edge length > 0.08um between two consecutive 90-90 degree corners, corresponding width = 0.08um in NCP direction between these 2 opposite edge, and the other corresponding width > 0.04um in CP direction
 line_end = (CONVEX EDGE M7 ANGLE1 == 90 ANGLE2 == 90 WITH LENGTH <= 0.06) COIN EDGE M7_h_edges
 // 
 flag_shape_l_side = LENGTH M7_convex_90_90_edges > 0.08
 flag_shape_s_side = ANGLE (LENGTH M7_convex_90_90_edges == 0.08) == 90
 flag_shape = (M7_width_eq_080 INTERACT (INT M7_convex_90_270_edges_gt_040 flag_shape_l_side == 0.08 ABUT<90 OPPOSITE REGION)) WITH EDGE flag_shape_s_side
 zfig_shape = (M7_width_eq_080 INTERACT (INT M7_convex_90_270_edges_gt_040 == 0.08 ABUT<90 OPPOSITE REGION)) NOT WITH EDGE flag_shape_s_side
 waive_shape = OR zfig_shape flag_shape
 // 
 corner_space_prl_lt_0 = EXT M7 < 0.08*1.414 CORNER TO CORNER
 corner_space_prl_eq_0 = EXT line_end M7 < 0.08 PROJ == 0
 corner_space_all_TMP = DFM COPY corner_space_prl_lt_0 corner_space_prl_eq_0
 corner_space_all = DFM PROPERTY corner_space_all_TMP line_end waive_shape OVERLAP ABUT ALSO MULTI 
 [-= (count(line_end) > 0 && count(waive_shape) == 0) ? 1 : 0] > 0 
 [-= (EWXP(corner_space_all_TMP) < 0.08 && EWYP(corner_space_all_TMP) < 0.08) ? 1 : 0] > 0
 err1_TMP = DFM PROPERTY corner_space_all line_end OVERLAP ABUT ALSO MULTI [-= (count(line_end) == 0 || count(line_end) < 2) ? 1 : 0] > 0
 err1 = DFM COPY err1_TMP REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Corner space between two 1.25xMn in NCP direction when -0.04um < PRL <= 0um. >= 0.08um
A: 
125xm7_S_25a {
@ Corner space between two 1.25xMn in NCP direction when -0.04um < PRL <= 0um. >= 0.08um
 err1_RAW = EXT M7 < 0.08 ABUT<90 CORNER TO CORNER
 err1_TMP = DFM PROPERTY err1_RAW GLOBALXY [-= EWXP(err1_RAW)] < 0.04
 err1_SPE = EXT M7 M7_h_edges < 0.08 ABUT<90 REGION PROJ == 0
 err1 = (DFM COPY err1_TMP REGION) OR err1_SPE
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: At least one space between 1.25xMn edge (any adjacent edge of concave corner) and 1.25xMn >= 0.119um, except either condition as below:
    1. Edge length between two concave corners < 0.12um
    2. Side edge length of concave corner < 0.042um
A: 
125xm7_S_26 {
@ At least one space between 1.25xMn edge (any adjacent edge of concave corner) and 1.25xMn >= 0.119um, except either condition as below:
@ 1. Edge length between two concave corners < 0.12um
@ 2. Side edge length of concave corner < 0.042um
 waive_edge_a = LENGTH M7_convex_270_270_edges < 0.120
 waive_edge_b = LENGTH M7_convex_lt_two_edges < 0.042
 check_edge = (LENGTH M7_convex_lt_two_edges >= 0.042) NOT COIN EDGE M7_45_skew_edges
 // 
 Y1 = EXT [M7] check_edge < 0.119 ABUT<90 OPPOSITE EXTENDED 0.119
 Y2 = INT [Y1] < 0.001 ABUT==90 INTERSECTING ONLY
 Y3 = EXT Y2 check_edge < 0.119 ABUT<90 OPPOSITE EXTENDED 0.119
 err1_TMP = EXT (DFM COPY Y3 EDGE) < 0.04 ABUT==90 INTERSECTING ONLY REGION EXTENTS
 err1 = (err1_TMP NOT WITH EDGE waive_edge_a) NOT WITH EDGE waive_edge_b
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMy concave corner (both side edge length > 0.08um) and 1.25xMy line-end (width < 0.08um) >= 0.154um
A: 
125xm7_S_27 {
@ Space between 1.25xMy concave corner (both side edge length > 0.08um) and 1.25xMy line-end (width < 0.08um) >= 0.154um
 mets_CHK = LENGTH M7_convex_lt_two_edges > 0.08
 mets_CRN = EXT [mets_CHK] < 0.0005 ABUT==90 INTERSECTING ONLY // resolution concern
 // 
 err1_RAW = EXT M7_convex_lt_two_edges M7_end_080 < 0.154 ABUT EXCLUDE SHIELDED
 err1_HAS = mets_CRN COIN EDGE M7_convex_lt_two_edges
 err1_TMP = DFM PROPERTY err1_RAW err1_HAS ABUT ALSO OVERLAP MULTI [-= count(err1_HAS)] > 0
 err1 = DFM COPY err1_TMP REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
M7_space_eq_040_v_edges = EXT [M7_v_edges] == 0.04 OPPOSITE
M7_space_eq_040_v_areas = EXT M7_v_edges == 0.04 OPPOSITE REGION
M7_space_eq_040_v_areas_v_edges = ANGLE M7_space_eq_040_v_areas == 90
M7_width_lt_080_v_edges = (INT [M7_v_edges] < 0.08 ABUT<90 OPPOSITE) COIN EDGE (M7 WITH WIDTH < 0.08)
 
Q: Forbidden the space between 1.25xMn (width = 0.04~0.046um and one side space = 0.04um) and 1.25xMn (width < 0.08um (W1)) in CP direction, except both side space of 1.25xMy (width < 0.08um) to 1.25xMy >= 0.1um. = 0.061~0.098, 0.131~0.178um
A: 
125xm7_S_28 {
@ Forbidden the space between 1.25xMn (width = 0.04~0.046um and one side space = 0.04um) and 1.25xMn (width < 0.08um (W1)) in CP direction, except both side space of 1.25xMy (width < 0.08um) to 1.25xMy >= 0.1um. = 0.061~0.098, 0.131~0.178um
 Mn_w040_w042 = WITH WIDTH M7 >= 0.04 <= 0.046
 Mn_w040_s040_v_edges = Mn_w040_w042 COIN EDGE M7_space_eq_040_v_edges
 Mn_w040_s040_v_edges_opp = INT Mn_w040_s040_v_edges [Mn_w040_w042] >= 0.04 <= 0.046 ABUT<90 OPPOSITE
 Mn_w080_s99_v_edges = EXT (M7_width_lt_080_v_edges) < 0.10 ABUT<90 OPPOSITE
 Mn_w080_s99_v_edges_both = INT [Mn_w080_s99_v_edges] < 0.08 ABUT<90 OPPOSITE
 Mn_w080_s99_v_edges_none = M7_width_lt_080_v_edges NOT COIN EDGE Mn_w080_s99_v_edges_both
 err1 = EXT Mn_w080_s99_v_edges_none Mn_w040_s040_v_edges_opp >= 0.131 <= 0.178 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err2 = EXT Mn_w080_s99_v_edges_none Mn_w040_s040_v_edges_opp >= 0.061 <= 0.098 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}
 
Q: Fobidden space between 1.25xMy (width = 0.06~0.07um and one side space = 0.04um) and 1.25xMy (width < 0.08um) in CP direction, except both side space of 1.25xMy (width < 0.08um) to 1.25xMy >= 0.1um. = 0.11~0.158um
A: 
125xm7_S_29 {
@ Fobidden space between 1.25xMy (width = 0.06~0.07um and one side space = 0.04um) and 1.25xMy (width < 0.08um) in CP direction, except both side space of 1.25xMy (width < 0.08um) to 1.25xMy >= 0.1um. = 0.11~0.158um
 Mn_w060_w070 = WITH WIDTH M7 >= 0.06 <= 0.07
 Mn_w060_s040_v_edges = Mn_w060_w070 COIN EDGE M7_space_eq_040_v_edges
 Mn_w060_s040_v_edges_opp = INT Mn_w060_s040_v_edges [Mn_w060_w070] >= 0.06 <= 0.07 ABUT<90 OPPOSITE
 Mn_w080_s99_v_edges = EXT (M7_width_lt_080_v_edges) < 0.10 ABUT<90 OPPOSITE
 Mn_w080_s99_v_edges_both = INT [Mn_w080_s99_v_edges] < 0.08 ABUT<90 OPPOSITE
 Mn_w080_s99_v_edges_none = M7_width_lt_080_v_edges NOT COIN EDGE Mn_w080_s99_v_edges_both
 err1 = EXT Mn_w080_s99_v_edges_none Mn_w060_s040_v_edges_opp >= 0.110 <= 0.158 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xMn and 45-degree bent 1.25xMn, DRC check 45-degree direction >= 0.396um
A: 
125xm7_S_30 {
@ Space between 1.25xMn and 45-degree bent 1.25xMn, DRC check 45-degree direction >= 0.396um
 err1 = EXT M7 M7_45_skew_edges < 0.396 ABUT<90 OPPOSITE2 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//125xv4

Q: Space between two 1.25xVn >= 0.056um
A: 
125xv4_S_1 {
@ Space between two 1.25xVn >= 0.056um
 err1 = EXT V4_SR < 0.056 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between two 1.25xVn when PRL > -0.04um. >= 0.074um
A: 
125xv4_S_2 {
@ Space between two 1.25xVn when PRL > -0.04um. >= 0.074um
 err1 = EXT V4_SR < 0.074 ABUT<90 OPPOSITE EXTENDED 0.040 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xVn (1.25xVn enclosure by upper metal > 0um) and Vy/1.25xVn-1 at different net and PRL > 0um. >= 0.055um
A: 
125xv4_S_3 {
@ Space between 1.25xVn (1.25xVn enclosure by upper metal > 0um) and Vy/1.25xVn-1 at different net and PRL > 0um. >= 0.055um
 chk_via = (V4 INTERACT (V4N INSIDE M5)) NOT COIN EDGE M5
 err1 = EXT chk_via V3 < 0.055 ABUT<90 OPPOSITE REGION NOT CONNECTED
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between two square 1.25xVn with PRL > -0.119um. >= 0.119um
     When:
    1) 1.25xVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
    2) Space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
    DRC doesn't flag space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
A: 
125xv4_S_4_M4 {
@ Space between two square 1.25xVn with PRL > -0.119um. >= 0.119um
@ When:
@ 1) 1.25xVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
@ 2) Space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
@ DRC doesn't flag space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
 ncp_axis = ANGLE (ENC [V4N] M4 < 0.01 ABUT<90 OPPOSITE) == 0
 y1 = ANGLE (V4N TOUCH EDGE ncp_axis) == 0
 y2 = EXT [y1] M4 <= 0.052 ABUT<90 OPPOSITE EXTENDED 0.046+GLOBAL_TOLERANCE MEASURE ALL
 y3 = V4N TOUCH EDGE y2
 y4 = INT [V4N] y3 == 0.040 ABUT<90 OPPOSITE
 err1 = EXT (y4 NOT TOUCH EDGE y2) V4_SR < 0.119 ABUT<90 OPPOSITE EXTENDED 0.119 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between two square 1.25xVn with PRL > -0.119um. >= 0.119um
     When:
    1) 1.25xVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
    2) Space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
    DRC doesn't flag space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
A: 
125xv4_S_4_M5 {
@ Space between two square 1.25xVn with PRL > -0.119um. >= 0.119um
@ When:
@ 1) 1.25xVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
@ 2) Space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
@ DRC doesn't flag space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
 ncp_axis = ANGLE (ENC [V4N] M5 < 0.01 ABUT<90 OPPOSITE) == 90
 y1 = ANGLE (V4N TOUCH EDGE ncp_axis) == 90
 y2 = EXT [y1] M5 <= 0.052 ABUT<90 OPPOSITE EXTENDED 0.046+GLOBAL_TOLERANCE MEASURE ALL
 y3 = V4N TOUCH EDGE y2
 y4 = INT [V4N] y3 == 0.040 ABUT<90 OPPOSITE
 err1 = EXT (y4 NOT TOUCH EDGE y2) V4_SR < 0.119 ABUT<90 OPPOSITE EXTENDED 0.119 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xVn bar (width = 0.1/0.45um) and (1.25xVn or 1.25xRVn) >= 0.34um
A: 
125xv4_S_5 {
@ Space between 1.25xVn bar (width = 0.1/0.45um) and (1.25xVn or 1.25xRVn) >= 0.34um
 err1 = EXT (OR V4_BAR_100_all V4_BAR_450_all) V4_SR < 0.34 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xVn bar (width = 0.1/0.45um), DRC only check the space between parallel edge when the 1.25xVn bar is inside MARKS >= 0.55um
A: 
125xv4_S_6 {
@ Space between 1.25xVn bar (width = 0.1/0.45um), DRC only check the space between parallel edge when the 1.25xVn bar is inside MARKS >= 0.55um
 err1 = EXT ((OR V4_BAR_100_all V4_BAR_450_all) INTERACT MARKS_MARKG) < 0.55 SINGULAR ANGLED!=1 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//125xRv4
Q: Space between (1.25xVn or 1.25xRVn) and 1.25xRVn >= 0.074um
A: 
125xRv4_S_1a {
@ Space between (1.25xVn or 1.25xRVn) and 1.25xRVn >= 0.074um
 err1 = EXT RV4 V4_SR < 0.074 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between (1.25xVn or 1.25xRVn) and 1.25xRVn when PRL > -0.04um. >= 0.079um
A: 
125xRv4_S_1b {
@ Space between (1.25xVn or 1.25xRVn) and 1.25xRVn when PRL > -0.04um. >= 0.079um
 err1 = EXT RV4 V4_SR < 0.079 ABUT<90 OPPOSITE EXTENDED 0.04 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between the short side of 1.25xRVn and (1.25xVn or 1.25xRVn) when PRL > -0.04um. >= 0.089um
A: 
125xRv4_S_1c {
@ Space between the short side of 1.25xRVn and (1.25xVn or 1.25xRVn) when PRL > -0.04um. >= 0.089um
 err1 = EXT RV4_W V4_SR < 0.089 ABUT<90 OPPOSITE EXTENDED 0.04 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xRVn and (Vy or RVy) at different net and PRL > 0um, when 1.25xMn+1 enclosure of 1.25xRVn > 0um. >= 0.055um
A: 
125xRv4_S_2 {
@ Space between 1.25xRVn and (Vy or RVy) at different net and PRL > 0um, when 1.25xMn+1 enclosure of 1.25xRVn > 0um. >= 0.055um
 chk_via = (V4 INTERACT RV4) NOT COIN EDGE M5
 err1 = EXT chk_via V3 < 0.055 ABUT<90 OPPOSITE REGION NOT CONNECTED
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xRVn when PRL >= -0.119um. >= 0.119um
     When:
     1) 1.25xRVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
     2) Space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
     DRC doesn't flag space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
A: 
125xRv4_S_4_M4 {
@ Space between 1.25xRVn when PRL >= -0.119um. >= 0.119um
@ When:
@ 1) 1.25xRVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
@ 2) Space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
@ DRC doesn't flag space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
 ncp_axis = ANGLE (ENC [RV4] M4 < 0.01 ABUT<90 OPPOSITE) == 0
 y1 = ANGLE (RV4 TOUCH EDGE ncp_axis) == 0
 y2 = EXT [y1] M4 <= 0.052 ABUT<90 OPPOSITE EXTENDED 0.046+GLOBAL_TOLERANCE MEASURE ALL
 y3 = RV4 TOUCH EDGE y2
 y4 = INT [RV4] y3 == 0.040 ABUT<90 OPPOSITE
 err1 = EXT (y4 NOT TOUCH EDGE y2) V4_SR < 0.119 ABUT<90 OPPOSITE EXTENDED 0.119+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xRVn when PRL >= -0.119um. >= 0.119um
    When:
    1) 1.25xRVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
    2) Space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
    DRC doesn't flag space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
A: 
125xRv4_S_4_M5 {
@ Space between 1.25xRVn when PRL >= -0.119um. >= 0.119um
@ When:
@ 1) 1.25xRVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
@ 2) Space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
@ DRC doesn't flag space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
 ncp_axis = ANGLE (ENC [RV4] M5 < 0.01 ABUT<90 OPPOSITE) == 90
 y1 = ANGLE (RV4 TOUCH EDGE ncp_axis) == 90
 y2 = EXT [y1] M5 <= 0.052 ABUT<90 OPPOSITE EXTENDED 0.046+GLOBAL_TOLERANCE MEASURE ALL
 y3 = RV4 TOUCH EDGE y2
 y4 = INT [RV4] y3 == 0.040 ABUT<90 OPPOSITE
 err1 = EXT (y4 NOT TOUCH EDGE y2) V4_SR < 0.119 ABUT<90 OPPOSITE EXTENDED 0.119+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//125xv5

Q: Space between two 1.25xVn >= 0.056um
A: 
125xv5_S_1 {
@ Space between two 1.25xVn >= 0.056um
 err1 = EXT V5_SR < 0.056 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between two 1.25xVn when PRL > -0.04um. >= 0.074um
A: 
125xv5_S_2 {
@ Space between two 1.25xVn when PRL > -0.04um. >= 0.074um
 err1 = EXT V5_SR < 0.074 ABUT<90 OPPOSITE EXTENDED 0.040 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 1.25xVn (1.25xVn enclosure by upper metal > 0um) and Vy/1.25xVn-1 at different net and PRL > 0um. >= 0.055um
A: 
125xv5_S_3 {
@ Space between 1.25xVn (1.25xVn enclosure by upper metal > 0um) and Vy/1.25xVn-1 at different net and PRL > 0um. >= 0.055um
 chk_via = (V5 INTERACT (V5N INSIDE M6)) NOT COIN EDGE M6
 err1 = EXT chk_via V4 < 0.055 ABUT<90 OPPOSITE REGION NOT CONNECTED
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between two square 1.25xVn with PRL > -0.119um. >= 0.119um
    When:
    1) 1.25xVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
    2) Space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
    DRC doesn't flag space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
A: 
125xv5_S_4_M5 {
@ Space between two square 1.25xVn with PRL > -0.119um. >= 0.119um
@ When:
@ 1) 1.25xVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
@ 2) Space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
@ DRC doesn't flag space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
 ncp_axis = ANGLE (ENC [V5N] M5 < 0.01 ABUT<90 OPPOSITE) == 90
 y1 = ANGLE (V5N TOUCH EDGE ncp_axis) == 90
 y2 = EXT [y1] M5 <= 0.052 ABUT<90 OPPOSITE EXTENDED 0.046+GLOBAL_TOLERANCE MEASURE ALL
 y3 = V5N TOUCH EDGE y2
 y4 = INT [V5N] y3 == 0.040 ABUT<90 OPPOSITE
 err1 = EXT (y4 NOT TOUCH EDGE y2) V5_SR < 0.119 ABUT<90 OPPOSITE EXTENDED 0.119 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between two square 1.25xVn with PRL > -0.119um. >= 0.119um
    When:
    1) 1.25xVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
    2) Space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
    DRC doesn't flag space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
A: 
125xv5_S_4_M6 {
@ Space between two square 1.25xVn with PRL > -0.119um. >= 0.119um
@ When:
@ 1) 1.25xVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
@ 2) Space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
@ DRC doesn't flag space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
 ncp_axis = ANGLE (ENC [V5N] M6 < 0.01 ABUT<90 OPPOSITE) == 0
 y1 = ANGLE (V5N TOUCH EDGE ncp_axis) == 0
 y2 = EXT [y1] M6 <= 0.052 ABUT<90 OPPOSITE EXTENDED 0.046+GLOBAL_TOLERANCE MEASURE ALL
 y3 = V5N TOUCH EDGE y2
 y4 = INT [V5N] y3 == 0.040 ABUT<90 OPPOSITE
 err1 = EXT (y4 NOT TOUCH EDGE y2) V5_SR < 0.119 ABUT<90 OPPOSITE EXTENDED 0.119 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xVn bar (width = 0.1/0.45um) and (1.25xVn or 1.25xRVn) >= 0.34um
A: 
125xv5_S_5 {
@ Space between 1.25xVn bar (width = 0.1/0.45um) and (1.25xVn or 1.25xRVn) >= 0.34um
 err1 = EXT (OR V5_BAR_100_all V5_BAR_450_all) V5_SR < 0.34 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xVn bar (width = 0.1/0.45um), DRC only check the space between parallel edge when the 1.25xVn bar is inside MARKS >= 0.55um
A: 
125xv5_S_6 {
@ Space between 1.25xVn bar (width = 0.1/0.45um), DRC only check the space between parallel edge when the 1.25xVn bar is inside MARKS >= 0.55um
 err1 = EXT ((OR V5_BAR_100_all V5_BAR_450_all) INTERACT MARKS_MARKG) < 0.55 SINGULAR ANGLED!=1 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//125xRv5

Q: Space between (1.25xVn or 1.25xRVn) and 1.25xRVn >= 0.074um
A: 
125xRv5_S_1a {
@ Space between (1.25xVn or 1.25xRVn) and 1.25xRVn >= 0.074um
 err1 = EXT RV5 V5_SR < 0.074 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between (1.25xVn or 1.25xRVn) and 1.25xRVn when PRL > -0.04um. >= 0.079um
A: 
125xRv5_S_1b {
@ Space between (1.25xVn or 1.25xRVn) and 1.25xRVn when PRL > -0.04um. >= 0.079um
 err1 = EXT RV5 V5_SR < 0.079 ABUT<90 OPPOSITE EXTENDED 0.04 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between the short side of 1.25xRVn and (1.25xVn or 1.25xRVn) when PRL > -0.04um. >= 0.089um
A: 
125xRv5_S_1c {
@ Space between the short side of 1.25xRVn and (1.25xVn or 1.25xRVn) when PRL > -0.04um. >= 0.089um
 err1 = EXT RV5_W V5_SR < 0.089 ABUT<90 OPPOSITE EXTENDED 0.04 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xRVn and (1.25xRVn-1 or 1.25xVn-1) at different net and PRL > 0um, when 1.25xMn+1 enclosure of 1.25xRVn > 0um. >= 0.055um
A: 
125xRv5_S_3 {
@ Space between 1.25xRVn and (1.25xRVn-1 or 1.25xVn-1) at different net and PRL > 0um, when 1.25xMn+1 enclosure of 1.25xRVn > 0um. >= 0.055um
 chk_via = (V5 INTERACT RV5) NOT COIN EDGE M6
 err1 = EXT chk_via V4 < 0.055 ABUT<90 OPPOSITE REGION NOT CONNECTED
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xRVn when PRL >= -0.119um. >= 0.119um
    When:
    1) 1.25xRVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
    2) Space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
    DRC doesn't flag space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
A: 
125xRv5_S_4_M5 {
@ Space between 1.25xRVn when PRL >= -0.119um. >= 0.119um
@ When:
@ 1) 1.25xRVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
@ 2) Space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
@ DRC doesn't flag space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
 ncp_axis = ANGLE (ENC [RV5] M5 < 0.01 ABUT<90 OPPOSITE) == 90
 y1 = ANGLE (RV5 TOUCH EDGE ncp_axis) == 90
 y2 = EXT [y1] M5 <= 0.052 ABUT<90 OPPOSITE EXTENDED 0.046+GLOBAL_TOLERANCE MEASURE ALL
 y3 = RV5 TOUCH EDGE y2
 y4 = INT [RV5] y3 == 0.040 ABUT<90 OPPOSITE
 err1 = EXT (y4 NOT TOUCH EDGE y2) V5_SR < 0.119 ABUT<90 OPPOSITE EXTENDED 0.119+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xRVn when PRL >= -0.119um. >= 0.119um
    When:
    1) 1.25xRVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
    2) Space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
    DRC doesn't flag space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
A: 
125xRv5_S_4_M6 {
@ Space between 1.25xRVn when PRL >= -0.119um. >= 0.119um
@ When:
@ 1) 1.25xRVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
@ 2) Space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
@ DRC doesn't flag space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
 ncp_axis = ANGLE (ENC [RV5] M6 < 0.01 ABUT<90 OPPOSITE) == 0
 y1 = ANGLE (RV5 TOUCH EDGE ncp_axis) == 0
 y2 = EXT [y1] M6 <= 0.052 ABUT<90 OPPOSITE EXTENDED 0.046+GLOBAL_TOLERANCE MEASURE ALL
 y3 = RV5 TOUCH EDGE y2
 y4 = INT [RV5] y3 == 0.040 ABUT<90 OPPOSITE
 err1 = EXT (y4 NOT TOUCH EDGE y2) V5_SR < 0.119 ABUT<90 OPPOSITE EXTENDED 0.119+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//125xv6

 
Q: Space between two 1.25xVn >= 0.056um
A: 
125xv6_S_1 {
@ Space between two 1.25xVn >= 0.056um
 err1 = EXT V6_SR < 0.056 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between two 1.25xVn when PRL > -0.04um. >= 0.074um
A: 
125xv6_S_2 {
@ Space between two 1.25xVn when PRL > -0.04um. >= 0.074um
 err1 = EXT V6_SR < 0.074 ABUT<90 OPPOSITE EXTENDED 0.040 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xVn (1.25xVn enclosure by upper metal > 0um) and Vy/1.25xVn-1 at different net and PRL > 0um. >= 0.055um
A: 
125xv6_S_3 {
@ Space between 1.25xVn (1.25xVn enclosure by upper metal > 0um) and Vy/1.25xVn-1 at different net and PRL > 0um. >= 0.055um
 chk_via = (V6 INTERACT (V6N INSIDE M7)) NOT COIN EDGE M7
 err1 = EXT chk_via V5 < 0.055 ABUT<90 OPPOSITE REGION NOT CONNECTED
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between two square 1.25xVn with PRL > -0.119um. >= 0.119um
    When:
    1) 1.25xVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
    2) Space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
    DRC doesn't flag space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
A: 
125xv6_S_4_M6 {
@ Space between two square 1.25xVn with PRL > -0.119um. >= 0.119um
@ When:
@ 1) 1.25xVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
@ 2) Space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
@ DRC doesn't flag space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
 ncp_axis = ANGLE (ENC [V6N] M6 < 0.01 ABUT<90 OPPOSITE) == 0
 y1 = ANGLE (V6N TOUCH EDGE ncp_axis) == 0
 y2 = EXT [y1] M6 <= 0.052 ABUT<90 OPPOSITE EXTENDED 0.046+GLOBAL_TOLERANCE MEASURE ALL
 y3 = V6N TOUCH EDGE y2
 y4 = INT [V6N] y3 == 0.040 ABUT<90 OPPOSITE
 err1 = EXT (y4 NOT TOUCH EDGE y2) V6_SR < 0.119 ABUT<90 OPPOSITE EXTENDED 0.119 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between two square 1.25xVn with PRL > -0.119um. >= 0.119um
    When:
    1) 1.25xVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
    2) Space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
    DRC doesn't flag space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
A: 
125xv6_S_4_M7 {
@ Space between two square 1.25xVn with PRL > -0.119um. >= 0.119um
@ When:
@ 1) 1.25xVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
@ 2) Space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
@ DRC doesn't flag space between 1.25xVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
 ncp_axis = ANGLE (ENC [V6N] M7 < 0.01 ABUT<90 OPPOSITE) == 90
 y1 = ANGLE (V6N TOUCH EDGE ncp_axis) == 90
 y2 = EXT [y1] M7 <= 0.052 ABUT<90 OPPOSITE EXTENDED 0.046+GLOBAL_TOLERANCE MEASURE ALL
 y3 = V6N TOUCH EDGE y2
 y4 = INT [V6N] y3 == 0.040 ABUT<90 OPPOSITE
 err1 = EXT (y4 NOT TOUCH EDGE y2) V6_SR < 0.119 ABUT<90 OPPOSITE EXTENDED 0.119 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xVn bar (width = 0.1/0.45um) and (1.25xVn or 1.25xRVn) >= 0.34um
A: 
125xv6_S_5 {
@ Space between 1.25xVn bar (width = 0.1/0.45um) and (1.25xVn or 1.25xRVn) >= 0.34um
 err1 = EXT (OR V6_BAR_100_all V6_BAR_450_all) V6_SR < 0.34 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xVn bar (width = 0.1/0.45um), DRC only check the space between parallel edge when the 1.25xVn bar is inside MARKS >= 0.55um
A: 
125xv6_S_6 {
@ Space between 1.25xVn bar (width = 0.1/0.45um), DRC only check the space between parallel edge when the 1.25xVn bar is inside MARKS >= 0.55um
 err1 = EXT ((OR V6_BAR_100_all V6_BAR_450_all) INTERACT MARKS_MARKG) < 0.55 SINGULAR ANGLED!=1 OPPOSITE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 

//125xRv6

 
Q: Space between (1.25xVn or 1.25xRVn) and 1.25xRVn >= 0.074um
A: 
125xRv6_S_1a {
@ Space between (1.25xVn or 1.25xRVn) and 1.25xRVn >= 0.074um
 err1 = EXT RV6 V6_SR < 0.074 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between (1.25xVn or 1.25xRVn) and 1.25xRVn when PRL > -0.04um. >= 0.079um
A: 
125xRv6_S_1b {
@ Space between (1.25xVn or 1.25xRVn) and 1.25xRVn when PRL > -0.04um. >= 0.079um
 err1 = EXT RV6 V6_SR < 0.079 ABUT<90 OPPOSITE EXTENDED 0.04 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between the short side of 1.25xRVn and (1.25xVn or 1.25xRVn) when PRL > -0.04um. >= 0.089um
A: 
125xRv6_S_1c {
@ Space between the short side of 1.25xRVn and (1.25xVn or 1.25xRVn) when PRL > -0.04um. >= 0.089um
 err1 = EXT RV6_W V6_SR < 0.089 ABUT<90 OPPOSITE EXTENDED 0.04 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xRVn and (1.25xRVn-1 or 1.25xVn-1) at different net and PRL > 0um, when 1.25xMn+1 enclosure of 1.25xRVn > 0um. >= 0.055um
A: 
125xRv6_S_3 {
@ Space between 1.25xRVn and (1.25xRVn-1 or 1.25xVn-1) at different net and PRL > 0um, when 1.25xMn+1 enclosure of 1.25xRVn > 0um. >= 0.055um
 chk_via = (V6 INTERACT RV6) NOT COIN EDGE M7
 err1 = EXT chk_via V5 < 0.055 ABUT<90 OPPOSITE REGION NOT CONNECTED
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xRVn when PRL >= -0.119um. >= 0.119um
    When:
    1) 1.25xRVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
    2) Space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
    DRC doesn't flag space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
A: 
125xRv6_S_4_M6 {
@ Space between 1.25xRVn when PRL >= -0.119um. >= 0.119um
@ When:
@ 1) 1.25xRVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
@ 2) Space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
@ DRC doesn't flag space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
 ncp_axis = ANGLE (ENC [RV6] M6 < 0.01 ABUT<90 OPPOSITE) == 0
 y1 = ANGLE (RV6 TOUCH EDGE ncp_axis) == 0
 y2 = EXT [y1] M6 <= 0.052 ABUT<90 OPPOSITE EXTENDED 0.046+GLOBAL_TOLERANCE MEASURE ALL
 y3 = RV6 TOUCH EDGE y2
 y4 = INT [RV6] y3 == 0.040 ABUT<90 OPPOSITE
 err1 = EXT (y4 NOT TOUCH EDGE y2) V6_SR < 0.119 ABUT<90 OPPOSITE EXTENDED 0.119+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between 1.25xRVn when PRL >= -0.119um. >= 0.119um
    1) 1.25xRVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
    2) Space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
    DRC doesn't flag space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
A: 
125xRv6_S_4_M7 {
@ Space between 1.25xRVn when PRL >= -0.119um. >= 0.119um
@ When:
@ 1) 1.25xRVn enclosure by 1.25xMy/1.25xMn/1.25xMn+1 < 0.01um at opposite side
@ 2) Space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um at opposite side
@ DRC doesn't flag space between 1.25xRVn and 1.25xMy/1.25xMn/1.25xMn+1 <= 0.052um with PRL >= -0.046um on both sides
 ncp_axis = ANGLE (ENC [RV6] M7 < 0.01 ABUT<90 OPPOSITE) == 90
 y1 = ANGLE (RV6 TOUCH EDGE ncp_axis) == 90
 y2 = EXT [y1] M7 <= 0.052 ABUT<90 OPPOSITE EXTENDED 0.046+GLOBAL_TOLERANCE MEASURE ALL
 y3 = RV6 TOUCH EDGE y2
 y4 = INT [RV6] y3 == 0.040 ABUT<90 OPPOSITE
 err1 = EXT (y4 NOT TOUCH EDGE y2) V6_SR < 0.119 ABUT<90 OPPOSITE EXTENDED 0.119+GLOBAL_TOLERANCE REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 

//10xVT2

Q: Space between 10xTVns >= 0.306um
A: 
10xTV2_S_1 {
@ Space between 10xTVns >= 0.306um
 err1 = EXT TV2 < 0.306 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between 10xTVn and its neighboring 10xTVn(T) >= 0.484um
     The definition of neighboring 10xTVn(T)
     1) 10xTVn(T) is in a 10xTVn group
     2) The number of 10xTVn group is >= 4, there are at least 3 10xTVns neighboring to 10xTVn(T)
     3) The space between 10xTVn(T) to other 10xTVns in this group < 0.504um
A: 
10xTV2_S_2 {
@ Space between 10xTVn and its neighboring 10xTVn(T) >= 0.484um
@ The definition of neighboring 10xTVn(T)
@ 1) 10xTVn(T) is in a 10xTVn group
@ 2) The number of 10xTVn group is >= 4, there are at least 3 10xTVns neighboring to 10xTVn(T)
@ 3) The space between 10xTVn(T) to other 10xTVns in this group < 0.504um
 via_group = TV2 WITH NEIGHBOR >= 3 SPACE < 0.504
 err1 = EXT via_group TV2 < 0.484 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
//10xTM2

Q: Space between 10xTMns, except LOGO region >= 0.36um
A: 
10xTM2_S_1 {
@ Space between 10xTMns, except LOGO region >= 0.36um
 err1 = EXT TM2 < 0.36 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE LOGO
}
 
Q: Space between two 10xTMns when one or both 10xTMn widths are > 1.35um and PRL > 1.35um. >= 0.448um
A: 
10xTM2_S_2 {
@ Space between two 10xTMns when one or both 10xTMn widths are > 1.35um and PRL > 1.35um. >= 0.448um
 met_wid_all = TM2 WITH WIDTH >= 1.35+GLOBAL_TOLERANCE
 met_err_RAW = EXT TM2 met_wid_all < 0.448 OPPOSITE REGION MEASURE ALL
 met_err_CRN = EXT (ANGLE TM2 > 44 < 46) met_wid_all < 0.448 OPPOSITE1 REGION MEASURE ALL
 err1 = met_err_RAW ENCLOSE RECTANGLE 0.001 1.351 ORTHOGONAL ONLY
 err2 = met_err_CRN ENCLOSE RECTANGLE 0.36 1.351
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between two 10xTMns when one or both 10xTMn widths is > 4.08um and PRL > 4.08um. >= 1.33um
A: 
10xTM2_S_3 {
@ Space between two 10xTMns when one or both 10xTMn widths is > 4.08um and PRL > 4.08um. >= 1.33um
 met_wid_all = TM2 WITH WIDTH >= 4.08+GLOBAL_TOLERANCE
 met_err_RAW = EXT TM2 met_wid_all < 1.33 OPPOSITE REGION MEASURE ALL
 met_err_CRN = EXT (ANGLE TM2 > 44 < 46) met_wid_all < 1.33 OPPOSITE1 REGION MEASURE ALL
 err1 = met_err_RAW ENCLOSE RECTANGLE 0.001 4.081 ORTHOGONAL ONLY
 err2 = met_err_CRN ENCLOSE RECTANGLE 0.36 4.081
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}
 
//PA

Q: Space between two PA, except LOGO region >= 1.8um
A: 
PA_S_1 {
@ Space between two PA, except LOGO region >= 1.8um
 err1 = EXT PA < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE LOGO
}

//ALPA

Q: ALPA space, except LOGO region >= 1.8um
    DRC waive space in same polygon
    It allows 0.009um DRC checking tolerance in INDMY region
A: 
ALPA_S_1 {
@ ALPA space, except LOGO region >= 1.8um
@ DRC waive space in same polygon
@ It allows 0.009um DRC checking tolerance in INDMY region
 err1 = (EXT ALPA < 1.8 ABUT<90 SINGULAR REGION SPACE) NOT INSIDE LOGO
 err2 = (EXT ALPA ALPA_in_INDMY_skew_edge < 1.8-0.009 ABUT<90 OPPOSITE2 REGION SPACE) NOT INSIDE LOGO
 err3 = (EXT ALPA_in_INDMY_orth_edge < 1.8 ABUT<90 REGION SPACE) NOT INSIDE LOGO

 err1 NOT INSIDE INDMY
 err2 NOT OUTSIDE INDMY
 err3 NOT OUTSIDE INDMY
}

ALPA_W_gt_10 = WITH WIDTH ALPA > 10
ALRDL_W_gt_10 = WITH WIDTH ALRDL > 10
ALRDL_W_lt_10 = WITH WIDTH ALRDL <= 10

Q: Space between ALPA when one or both ALPA width larger than 10um, except ALPA.S.2. >= 2.69um
A: 
ALPA_S_1a {
@ Space between ALPA when one or both ALPA width larger than 10um, except ALPA.S.2. >= 2.69um
 err1 = EXT (ALPA COIN EDGE ALRDL_W_gt_10) < 2.69 ABUT<90 REGION
 err2 = EXT (ALPA COIN EDGE ALRDL_W_gt_10) (ALPA COIN EDGE ALRDL_W_lt_10) < 2.69 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

ALPA_in_MD_ov_3 = ALPA AND (SIZE MD BY 3)

Q: Space between (ALPA AND (MD sizing up 3um)) and (ALPA AND (MD sizing up 3um)) or ALRDL >= 2.25um
    DRC waive space in same polygon
    It allows 0.009um DRC checking tolerance in INDMY region
A: 
ALPA_S_2 {
@ Space between (ALPA AND (MD sizing up 3um)) and (ALPA AND (MD sizing up 3um)) or ALRDL >= 2.25um
@ DRC waive space in same polygon
@ It allows 0.009um DRC checking tolerance in INDMY region
 err1 = EXT ALPA_in_MD_ov_3 < 2.25 ABUT<90 SINGULAR REGION SPACE
 err2 = EXT ALPA_in_MD_ov_3 ALRDL < 2.25 ABUT<90 SINGULAR REGION MEASURE ALL
 err3 = EXT ALPA_in_MD_ov_3 < 2.25 ABUT<90 SINGULAR REGION ANGLED==0 SPACE
 err4 = EXT ALPA_in_MD_ov_3 ALRDL < 2.25 ABUT<90 SINGULAR REGION MEASURE ALL ANGLED==0
 err5 = EXT ALPA_in_MD_ov_3 (ANGLE ALPA_in_MD_ov_3 > 44 < 46) < 2.25-0.009 ABUT<90 OPPOSITE2 REGION SPACE
 err6 = EXT ALPA_in_MD_ov_3 (ANGLE ALRDL > 44 < 46) < 2.25-0.009 ABUT<90 OPPOSITE2 REGION MEASURE ALL
 err7 = EXT (ANGLE ALPA_in_MD_ov_3 > 44 < 46) ALRDL < 2.25-0.009 ABUT<90 OPPOSITE1 REGION MEASURE ALL

 err1 NOT INSIDE INDMY
 err2 NOT INSIDE INDMY
 err3 NOT OUTSIDE INDMY
 err4 NOT OUTSIDE INDMY
 err5 NOT OUTSIDE INDMY
 err6 NOT OUTSIDE INDMY
 err7 NOT OUTSIDE INDMY
}

Q: Space between ALPA and ALRDL with one or both width larger than 10um. >= 2.7um
A: 
ALPA_S_2a {
@ Space between ALPA and ALRDL with one or both width larger than 10um. >= 2.7um
 err1 = EXT (ALPA COIN EDGE ALPA_W_gt_10) (ALPA COIN EDGE ALRDL) < 2.7 ABUT>0<90 REGION
 err2 = EXT (ALPA COIN EDGE ALRDL_W_gt_10) ALPA < 2.7 ABUT>0<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between ALPA pad and Fuse window edge >= 44.5um
A: 
ALPA_S_3 {
@ Space between ALPA pad and Fuse window edge >= 44.5um
 err1 = EXT ALPA_PAD FUSE < 44.5 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

//MD

Q: MD space, except LOGO region >= 4.49um
A: 
MD_S_1 {
@ MD space, except LOGO region >= 4.49um
 err1 = (EXT MD < 4.49 ABUT<90 SINGULAR REGION) NOT MD_notch_space
 err1 NOT INSIDE LOGO
}

Q: Space between MD and PA (space = 0 is allowed), except LOGO region >= 1.52um
A: 
MD_S_2 {
@ Space between MD and PA (space = 0 is allowed), except LOGO region >= 1.52um
 err1 = EXT MD PA < 1.52 ABUT>0<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE LOGO
}

//OCCD

Q: Space between OCCDFH >= 4.5um
A: 
OCCD_S_1 {
@ Space between OCCDFH >= 4.5um
 err1 = EXT OCCDFH < 4.5 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: OCCD.S.2: Space between OCCDM1 >= 4.5um
    OCCD.S.4: Space between OCCDMn (n = 2~8, respectively) >= 4.5um
A: 
OCCD_S_2_4 {
@ OCCD.S.2: Space between OCCDM1 >= 4.5um
@ OCCD.S.4: Space between OCCDMn (n = 2~8, respectively) >= 4.5um
 err1 = EXT OCCDM1 < 4.5 ABUT<90 SINGULAR REGION
 err2 = EXT OCCDM2 < 4.5 ABUT<90 SINGULAR REGION
 err3 = EXT OCCDM3 < 4.5 ABUT<90 SINGULAR REGION
 err4 = EXT OCCDM4 < 4.5 ABUT<90 SINGULAR REGION
 err5 = EXT OCCDM5 < 4.5 ABUT<90 SINGULAR REGION
 err6 = EXT OCCDM6 < 4.5 ABUT<90 SINGULAR REGION
 err7 = EXT OCCDM7 < 4.5 ABUT<90 SINGULAR REGION
 err8 = EXT OCCDM8 < 4.5 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
 err6 NOT INSIDE SealR_NOT_BULK
 err7 NOT INSIDE SealR_NOT_BULK
 err8 NOT INSIDE SealR_NOT_BULK
}

Q: Space between OCCDFH and OCCDM1 >= 4.5um
A: 
OCCD_S_3 {
@ Space between OCCDFH and OCCDM1 >= 4.5um
 err1 = EXT OCCDFH OCCDM1 < 4.5 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between OCCDBn (n = 1~2, respectively) >= 4.5um
A: 
OCCD_S_5 {
@ Space between OCCDBn (n = 1~2, respectively) >= 4.5um
 err1 = EXT OCCDB1 < 4.5 ABUT<90 SINGULAR REGION
 err2 = EXT OCCDB2 < 4.5 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Recommended space between OCCDFH >= 140um
A: 
OCCD_S_6_R {
@ Recommended space between OCCDFH >= 140um
 err1 = EXT OCCDFH < 140 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: OCCD.S.7: Recommended space between OCCDM1 >= 140um
    OCCD.S.8: Recommended space between OCCDMn (n = 2~8, respectively) >= 140um
    OCCD.S.9: Recommended space between OCCDBn (n = 1~2, respectively) >= 140um
A: 
OCCD_S_7_8_9_R {
@ OCCD.S.7: Recommended space between OCCDM1 >= 140um
@ OCCD.S.8: Recommended space between OCCDMn (n = 2~8, respectively) >= 140um
@ OCCD.S.9: Recommended space between OCCDBn (n = 1~2, respectively) >= 140um
 err1 = EXT OCCDM1 < 140 ABUT<90 SINGULAR REGION
 err2 = EXT OCCDM2 < 140 ABUT<90 SINGULAR REGION
 err3 = EXT OCCDM3 < 140 ABUT<90 SINGULAR REGION
 err4 = EXT OCCDM4 < 140 ABUT<90 SINGULAR REGION
 err5 = EXT OCCDM5 < 140 ABUT<90 SINGULAR REGION
 err6 = EXT OCCDM6 < 140 ABUT<90 SINGULAR REGION
 err7 = EXT OCCDM7 < 140 ABUT<90 SINGULAR REGION
 err8 = EXT OCCDM8 < 140 ABUT<90 SINGULAR REGION
 err9 = EXT OCCDB1 < 140 ABUT<90 SINGULAR REGION
 err0 = EXT OCCDB2 < 140 ABUT<90 SINGULAR REGION

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
 err6 NOT INSIDE SealR_NOT_BULK
 err7 NOT INSIDE SealR_NOT_BULK
 err8 NOT INSIDE SealR_NOT_BULK
 err9 NOT INSIDE SealR_NOT_BULK
 err0 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_DNW {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH DNW < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_NW {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH NW < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_PSUB {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH PSUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_AA {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH AA < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_AR {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH AR < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_GT {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH GT < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_GT_P96 {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH GT_P96 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_P2 {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH P2 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_SN {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH SN < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_SP {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH SP < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_DG {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH DG < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_M0 {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH M0 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_M0G {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH M0G < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_M0C {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH M0C < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_V0 {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH V0 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_M1 {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH M1 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_LOGO {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH LOGO < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_INST {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH INST < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_MARKS {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH MARKS < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_MARKG {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH MARKG < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_NODMF {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH NODMF < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_OCOVL {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH OCOVL < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_DUMBA {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH DUMBA < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_DUMBP {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH DUMBP < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_ARDUB {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH ARDUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_P2DUB {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH P2DUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_M0DUB {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH M0DUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_M0CDUB {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH M0CDUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_M0GDUB {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH M0GDUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_V0DUB {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH V0DUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_M1DUB {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH M1DUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_EFUSE {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH EFUSE < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_RESNW {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH RESNW < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_RESP1 {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH RESP1 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_RESP2 {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH RESP2 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_ESDIO2 {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH ESDIO2 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_DSTR {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH DSTR < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_DIOMK2 {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH DIOMK2 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_DMPNP {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH DMPNP < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_VARMOS {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH VARMOS < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_LDBK {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH LDBK < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_INDMY {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH INDMY < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_FUSEMK1 {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH FUSEMK1 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A:  
OCCD_S_10_NPAA {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH NPAA < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_PPAA {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH PPAA < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_AR_H {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH AR_H < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_AR_V {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH AR_V < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_DIOMK1 {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH DIOMK1 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_ESDIO1 {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH ESDIO1 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_MTFUSE {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH MTFUSE < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_CTOP {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCCDFH CTOP < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_SVT_N {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = OCCDFH AND ((SIZE SVT_N BY 1.8) NOT (SIZE SVT_N BY -1.8))
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_SVT_P {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = OCCDFH AND ((SIZE SVT_P BY 1.8) NOT (SIZE SVT_P BY -1.8))
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_HVT_N {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = OCCDFH AND ((SIZE HVT_N BY 1.8) NOT (SIZE HVT_N BY -1.8))
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_HVT_P {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = OCCDFH AND ((SIZE HVT_P BY 1.8) NOT (SIZE HVT_P BY -1.8))
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_LVT_N {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = OCCDFH AND ((SIZE LVT_N BY 1.8) NOT (SIZE LVT_N BY -1.8))
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_LVT_P {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = OCCDFH AND ((SIZE LVT_P BY 1.8) NOT (SIZE LVT_P BY -1.8))
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_ULVT_N {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = OCCDFH AND ((SIZE ULVT_N BY 1.8) NOT (SIZE ULVT_N BY -1.8))
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_ULVT_P {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = OCCDFH AND ((SIZE ULVT_P BY 1.8) NOT (SIZE ULVT_P BY -1.8))
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_LFN_N {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = OCCDFH AND ((SIZE LFN_N BY 1.8) NOT (SIZE LFN_N BY -1.8))
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCCD_S_10_LFN_P {
@ Space between OCCDFH and DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, M1, LOGO, INST, MARKS, MARKG, NODMF, OCOVL, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, M1DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = OCCDFH AND ((SIZE LFN_P BY 1.8) NOT (SIZE LFN_P BY -1.8))
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
A: 
OCCD_S_11_DUM_AA {
@ Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
 err1 = EXT OCCDFH DUM_AA < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
A: 
OCCD_S_11_DUM_AR {
@ Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
 err1 = EXT OCCDFH DUM_AR < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
A: 
OCCD_S_11_DUM_GT {
@ Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
 err1 = EXT OCCDFH DUM_GT < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
A: 
OCCD_S_11_DUM_P2 {
@ Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
 err1 = EXT OCCDFH DUM_P2 < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
A: 
OCCD_S_11_DUM_M0 {
@ Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
 err1 = EXT OCCDFH DUM_M0 < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
A: 
OCCD_S_11_DUM_M0C {
@ Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
 err1 = EXT OCCDFH DUM_M0C < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
A: 
OCCD_S_11_DUM_M0G {
@ Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
 err1 = EXT OCCDFH DUM_M0G < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
A: 
OCCD_S_11_DUM_V0 {
@ Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
 err1 = EXT OCCDFH DUM_V0 < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
A: 
OCCD_S_11_DUM_M1 {
@ Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
 err1 = EXT OCCDFH DUM_M1 < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
A: 
OCCD_S_11_SNDUM {
@ Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
 err1 = EXT OCCDFH SNDUM < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
A: 
OCCD_S_11_SPDUM {
@ Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
 err1 = EXT OCCDFH SPDUM < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
A: 
OCCD_S_11_AR_HDOP {
@ Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
 err1 = EXT OCCDFH AR_HDOP < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
A: 
OCCD_S_11_AR_VDOP {
@ Space between OCCDFH and DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, DUM_M1, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.2um
 err1 = EXT OCCDFH AR_VDOP < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q:  Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
A: 
OCCD_S_12_M1 {
@ Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
 err1 = EXT OCCDM1 M1 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
A: 
OCCD_S_12_INDMY {
@ Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
 err1 = EXT OCCDM1 INDMY < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
A: 
OCCD_S_12_INST {
@ Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
 err1 = EXT OCCDM1 INST < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q:  Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
A: 
OCCD_S_12_LOGO {
@ Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
 err1 = EXT OCCDM1 LOGO < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
A: 
OCCD_S_12_MARKS {
@ Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
 err1 = EXT OCCDM1 MARKS < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
A: 
OCCD_S_12_MARKG {
@ Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
 err1 = EXT OCCDM1 MARKG < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q:  Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
A: 
OCCD_S_12_NODMF {
@ Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
 err1 = EXT OCCDM1 NODMF < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
A: 
OCCD_S_12_OCOVL {
@ Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
 err1 = EXT OCCDM1 OCOVL < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
A: 
OCCD_S_12_M1DUB {
@ Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
 err1 = EXT OCCDM1 M1DUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
A: 
OCCD_S_12_MTFUSE {
@ Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
 err1 = EXT OCCDM1 MTFUSE < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
A: 
OCCD_S_12_MOMDMY {
@ Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
 err1 = EXT OCCDM1 MOMDMY < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
A: 
OCCD_S_12_FUSEMK1 {
@ Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
 err1 = EXT OCCDM1 FUSEMK1 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
A: 
OCCD_S_12_CTOP {
@ Space between OCCDM1 and M1, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, M1DUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
 err1 = EXT OCCDM1 CTOP < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDM1 and DUM_M1 >= 0.2um
A: 
OCCD_S_13 {
@ Space between OCCDM1 and DUM_M1 >= 0.2um
 err1 = EXT OCCDM1 DUM_M1 < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDMn (n = 2~8, respectively) and Mn, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, MnDUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
A: 
OCCD_S_14_OCCDM2 {
@ Space between OCCDMn (n = 2~8, respectively) and Mn, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, MnDUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
 err1 = EXT OCCDM2 M2 < 1.8 ABUT<90 SINGULAR REGION
 err2 = EXT OCCDM2 INDMY < 1.8 ABUT<90 SINGULAR REGION
 err3 = EXT OCCDM2 INST < 1.8 ABUT<90 SINGULAR REGION
 err4 = EXT OCCDM2 LOGO < 1.8 ABUT<90 SINGULAR REGION
 err5 = EXT OCCDM2 MARKS < 1.8 ABUT<90 SINGULAR REGION
 err6 = EXT OCCDM2 MARKG < 1.8 ABUT<90 SINGULAR REGION
 err7 = EXT OCCDM2 NODMF < 1.8 ABUT<90 SINGULAR REGION
 err8 = EXT OCCDM2 OCOVL < 1.8 ABUT<90 SINGULAR REGION
 err9 = EXT OCCDM2 M2DUB < 1.8 ABUT<90 SINGULAR REGION
 err10 = EXT OCCDM2 MTFUSE < 1.8 ABUT<90 SINGULAR REGION
 err11 = EXT OCCDM2 MOMDMY < 1.8 ABUT<90 SINGULAR REGION
 err12 = EXT OCCDM2 FUSEMK1 < 1.8 ABUT<90 SINGULAR REGION
 err13 = EXT OCCDM2 CTOP < 1.8 ABUT<90 SINGULAR REGION
 // 
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
 err6 NOT INSIDE SealR_NOT_BULK
 err7 NOT INSIDE SealR_NOT_BULK
 err8 NOT INSIDE SealR_NOT_BULK
 err9 NOT INSIDE SealR_NOT_BULK
 err10 NOT INSIDE SealR_NOT_BULK
 err11 NOT INSIDE SealR_NOT_BULK
 err12 NOT INSIDE SealR_NOT_BULK
 err13 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDMn (n = 2~8, respectively) and DUM_Mn >= 0.2um
A: 
OCCD_S_15_OCCDM2 {
@ Space between OCCDMn (n = 2~8, respectively) and DUM_Mn >= 0.2um
 err1 = EXT OCCDM2 DUM_M2 < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDMn (n = 2~8, respectively) and Mn, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, MnDUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
A: 
OCCD_S_14_OCCDM3 {
@ Space between OCCDMn (n = 2~8, respectively) and Mn, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, MnDUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
 err1 = EXT OCCDM3 M3 < 1.8 ABUT<90 SINGULAR REGION
 err2 = EXT OCCDM3 INDMY < 1.8 ABUT<90 SINGULAR REGION
 err3 = EXT OCCDM3 INST < 1.8 ABUT<90 SINGULAR REGION
 err4 = EXT OCCDM3 LOGO < 1.8 ABUT<90 SINGULAR REGION
 err5 = EXT OCCDM3 MARKS < 1.8 ABUT<90 SINGULAR REGION
 err6 = EXT OCCDM3 MARKG < 1.8 ABUT<90 SINGULAR REGION
 err7 = EXT OCCDM3 NODMF < 1.8 ABUT<90 SINGULAR REGION
 err8 = EXT OCCDM3 OCOVL < 1.8 ABUT<90 SINGULAR REGION
 err9 = EXT OCCDM3 M3DUB < 1.8 ABUT<90 SINGULAR REGION
 err10 = EXT OCCDM3 MTFUSE < 1.8 ABUT<90 SINGULAR REGION
 err11 = EXT OCCDM3 MOMDMY < 1.8 ABUT<90 SINGULAR REGION
 err12 = EXT OCCDM3 FUSEMK1 < 1.8 ABUT<90 SINGULAR REGION
 err13 = EXT OCCDM3 CTOP < 1.8 ABUT<90 SINGULAR REGION
 // 
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
 err6 NOT INSIDE SealR_NOT_BULK
 err7 NOT INSIDE SealR_NOT_BULK
 err8 NOT INSIDE SealR_NOT_BULK
 err9 NOT INSIDE SealR_NOT_BULK
 err10 NOT INSIDE SealR_NOT_BULK
 err11 NOT INSIDE SealR_NOT_BULK
 err12 NOT INSIDE SealR_NOT_BULK
 err13 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDMn (n = 2~8, respectively) and DUM_Mn >= 0.2um
A: 
OCCD_S_15_OCCDM3 {
@ Space between OCCDMn (n = 2~8, respectively) and DUM_Mn >= 0.2um
 err1 = EXT OCCDM3 DUM_M3 < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDMn (n = 2~8, respectively) and Mn, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, MnDUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
A: 
OCCD_S_14_OCCDM4 {
@ Space between OCCDMn (n = 2~8, respectively) and Mn, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, MnDUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
 err1 = EXT OCCDM4 M4 < 1.8 ABUT<90 SINGULAR REGION
 err2 = EXT OCCDM4 INDMY < 1.8 ABUT<90 SINGULAR REGION
 err3 = EXT OCCDM4 INST < 1.8 ABUT<90 SINGULAR REGION
 err4 = EXT OCCDM4 LOGO < 1.8 ABUT<90 SINGULAR REGION
 err5 = EXT OCCDM4 MARKS < 1.8 ABUT<90 SINGULAR REGION
 err6 = EXT OCCDM4 MARKG < 1.8 ABUT<90 SINGULAR REGION
 err7 = EXT OCCDM4 NODMF < 1.8 ABUT<90 SINGULAR REGION
 err8 = EXT OCCDM4 OCOVL < 1.8 ABUT<90 SINGULAR REGION
 err9 = EXT OCCDM4 M4DUB < 1.8 ABUT<90 SINGULAR REGION
 err10 = EXT OCCDM4 MTFUSE < 1.8 ABUT<90 SINGULAR REGION
 err11 = EXT OCCDM4 MOMDMY < 1.8 ABUT<90 SINGULAR REGION
 err12 = EXT OCCDM4 FUSEMK1 < 1.8 ABUT<90 SINGULAR REGION
 err13 = EXT OCCDM4 CTOP < 1.8 ABUT<90 SINGULAR REGION
 // 
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
 err6 NOT INSIDE SealR_NOT_BULK
 err7 NOT INSIDE SealR_NOT_BULK
 err8 NOT INSIDE SealR_NOT_BULK
 err9 NOT INSIDE SealR_NOT_BULK
 err10 NOT INSIDE SealR_NOT_BULK
 err11 NOT INSIDE SealR_NOT_BULK
 err12 NOT INSIDE SealR_NOT_BULK
 err13 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDMn (n = 2~8, respectively) and DUM_Mn >= 0.2um
A: 
OCCD_S_15_OCCDM4 {
@ Space between OCCDMn (n = 2~8, respectively) and DUM_Mn >= 0.2um
 err1 = EXT OCCDM4 DUM_M4 < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDMn (n = 2~8, respectively) and Mn, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, MnDUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
A: 
OCCD_S_14_OCCDM5 {
@ Space between OCCDMn (n = 2~8, respectively) and Mn, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, MnDUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
 err1 = EXT OCCDM5 M5 < 1.8 ABUT<90 SINGULAR REGION
 err2 = EXT OCCDM5 INDMY < 1.8 ABUT<90 SINGULAR REGION
 err3 = EXT OCCDM5 INST < 1.8 ABUT<90 SINGULAR REGION
 err4 = EXT OCCDM5 LOGO < 1.8 ABUT<90 SINGULAR REGION
 err5 = EXT OCCDM5 MARKS < 1.8 ABUT<90 SINGULAR REGION
 err6 = EXT OCCDM5 MARKG < 1.8 ABUT<90 SINGULAR REGION
 err7 = EXT OCCDM5 NODMF < 1.8 ABUT<90 SINGULAR REGION
 err8 = EXT OCCDM5 OCOVL < 1.8 ABUT<90 SINGULAR REGION
 err9 = EXT OCCDM5 M5DUB < 1.8 ABUT<90 SINGULAR REGION
 err10 = EXT OCCDM5 MTFUSE < 1.8 ABUT<90 SINGULAR REGION
 err11 = EXT OCCDM5 MOMDMY < 1.8 ABUT<90 SINGULAR REGION
 err12 = EXT OCCDM5 FUSEMK1 < 1.8 ABUT<90 SINGULAR REGION
 err13 = EXT OCCDM5 CTOP < 1.8 ABUT<90 SINGULAR REGION
 // 
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
 err6 NOT INSIDE SealR_NOT_BULK
 err7 NOT INSIDE SealR_NOT_BULK
 err8 NOT INSIDE SealR_NOT_BULK
 err9 NOT INSIDE SealR_NOT_BULK
 err10 NOT INSIDE SealR_NOT_BULK
 err11 NOT INSIDE SealR_NOT_BULK
 err12 NOT INSIDE SealR_NOT_BULK
 err13 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDMn (n = 2~8, respectively) and DUM_Mn >= 0.2um
A: 
OCCD_S_15_OCCDM5 {
@ Space between OCCDMn (n = 2~8, respectively) and DUM_Mn >= 0.2um
 err1 = EXT OCCDM5 DUM_M5 < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDMn (n = 2~8, respectively) and Mn, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, MnDUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
A: 
OCCD_S_14_OCCDM6 {
@ Space between OCCDMn (n = 2~8, respectively) and Mn, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, MnDUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
 err1 = EXT OCCDM6 M6 < 1.8 ABUT<90 SINGULAR REGION
 err2 = EXT OCCDM6 INDMY < 1.8 ABUT<90 SINGULAR REGION
 err3 = EXT OCCDM6 INST < 1.8 ABUT<90 SINGULAR REGION
 err4 = EXT OCCDM6 LOGO < 1.8 ABUT<90 SINGULAR REGION
 err5 = EXT OCCDM6 MARKS < 1.8 ABUT<90 SINGULAR REGION
 err6 = EXT OCCDM6 MARKG < 1.8 ABUT<90 SINGULAR REGION
 err7 = EXT OCCDM6 NODMF < 1.8 ABUT<90 SINGULAR REGION
 err8 = EXT OCCDM6 OCOVL < 1.8 ABUT<90 SINGULAR REGION
 err9 = EXT OCCDM6 M6DUB < 1.8 ABUT<90 SINGULAR REGION
 err10 = EXT OCCDM6 MTFUSE < 1.8 ABUT<90 SINGULAR REGION
 err11 = EXT OCCDM6 MOMDMY < 1.8 ABUT<90 SINGULAR REGION
 err12 = EXT OCCDM6 FUSEMK1 < 1.8 ABUT<90 SINGULAR REGION
 err13 = EXT OCCDM6 CTOP < 1.8 ABUT<90 SINGULAR REGION
 // 
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
 err6 NOT INSIDE SealR_NOT_BULK
 err7 NOT INSIDE SealR_NOT_BULK
 err8 NOT INSIDE SealR_NOT_BULK
 err9 NOT INSIDE SealR_NOT_BULK
 err10 NOT INSIDE SealR_NOT_BULK
 err11 NOT INSIDE SealR_NOT_BULK
 err12 NOT INSIDE SealR_NOT_BULK
 err13 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDMn (n = 2~8, respectively) and DUM_Mn >= 0.2um
A: 
OCCD_S_15_OCCDM6 {
@ Space between OCCDMn (n = 2~8, respectively) and DUM_Mn >= 0.2um
 err1 = EXT OCCDM6 DUM_M6 < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDMn (n = 2~8, respectively) and Mn, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, MnDUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
A: 
OCCD_S_14_OCCDM7 {
@ Space between OCCDMn (n = 2~8, respectively) and Mn, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, MnDUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
 err1 = EXT OCCDM7 M7 < 1.8 ABUT<90 SINGULAR REGION
 err2 = EXT OCCDM7 INDMY < 1.8 ABUT<90 SINGULAR REGION
 err3 = EXT OCCDM7 INST < 1.8 ABUT<90 SINGULAR REGION
 err4 = EXT OCCDM7 LOGO < 1.8 ABUT<90 SINGULAR REGION
 err5 = EXT OCCDM7 MARKS < 1.8 ABUT<90 SINGULAR REGION
 err6 = EXT OCCDM7 MARKG < 1.8 ABUT<90 SINGULAR REGION
 err7 = EXT OCCDM7 NODMF < 1.8 ABUT<90 SINGULAR REGION
 err8 = EXT OCCDM7 OCOVL < 1.8 ABUT<90 SINGULAR REGION
 err9 = EXT OCCDM7 M7DUB < 1.8 ABUT<90 SINGULAR REGION
 err10 = EXT OCCDM7 MTFUSE < 1.8 ABUT<90 SINGULAR REGION
 err11 = EXT OCCDM7 MOMDMY < 1.8 ABUT<90 SINGULAR REGION
 err12 = EXT OCCDM7 FUSEMK1 < 1.8 ABUT<90 SINGULAR REGION
 err13 = EXT OCCDM7 CTOP < 1.8 ABUT<90 SINGULAR REGION
 // 
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
 err6 NOT INSIDE SealR_NOT_BULK
 err7 NOT INSIDE SealR_NOT_BULK
 err8 NOT INSIDE SealR_NOT_BULK
 err9 NOT INSIDE SealR_NOT_BULK
 err10 NOT INSIDE SealR_NOT_BULK
 err11 NOT INSIDE SealR_NOT_BULK
 err12 NOT INSIDE SealR_NOT_BULK
 err13 NOT INSIDE SealR_NOT_BULK
}
 
Q: Space between OCCDMn (n = 2~8, respectively) and DUM_Mn >= 0.2um
A: 
OCCD_S_15_OCCDM7 {
@ Space between OCCDMn (n = 2~8, respectively) and DUM_Mn >= 0.2um
 err1 = EXT OCCDM7 DUM_M7 < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between OCCDBn (n = 1~2, respectively) and Bn, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, BnDUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
A: 
OCCD_S_16_OCCDB1 {
@ Space between OCCDBn (n = 1~2, respectively) and Bn, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, BnDUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
 err1 = EXT OCCDB1 B1i < 1.8 ABUT<90 SINGULAR REGION
 err2 = EXT OCCDB1 INDMY < 1.8 ABUT<90 SINGULAR REGION
 err3 = EXT OCCDB1 INST < 1.8 ABUT<90 SINGULAR REGION
 err4 = EXT OCCDB1 LOGO < 1.8 ABUT<90 SINGULAR REGION
 err5 = EXT OCCDB1 MARKS < 1.8 ABUT<90 SINGULAR REGION
 err6 = EXT OCCDB1 MARKG < 1.8 ABUT<90 SINGULAR REGION
 err7 = EXT OCCDB1 NODMF < 1.8 ABUT<90 SINGULAR REGION
 err8 = EXT OCCDB1 OCOVL < 1.8 ABUT<90 SINGULAR REGION
 err9 = EXT OCCDB1 B1DUB < 1.8 ABUT<90 SINGULAR REGION
 err10 = EXT OCCDB1 MTFUSE < 1.8 ABUT<90 SINGULAR REGION
 err11 = EXT OCCDB1 MOMDMY < 1.8 ABUT<90 SINGULAR REGION
 err12 = EXT OCCDB1 FUSEMK1 < 1.8 ABUT<90 SINGULAR REGION
 err13 = EXT OCCDB1 CTOP < 1.8 ABUT<90 SINGULAR REGION

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
 err6 NOT INSIDE SealR_NOT_BULK
 err7 NOT INSIDE SealR_NOT_BULK
 err8 NOT INSIDE SealR_NOT_BULK
 err9 NOT INSIDE SealR_NOT_BULK
 err10 NOT INSIDE SealR_NOT_BULK
 err11 NOT INSIDE SealR_NOT_BULK
 err12 NOT INSIDE SealR_NOT_BULK
 err13 NOT INSIDE SealR_NOT_BULK
}

Q: Space between OCCDBn (n = 1~2, respectively) and Bn, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, BnDUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
A: 
OCCD_S_16_OCCDB2 {
@ Space between OCCDBn (n = 1~2, respectively) and Bn, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCOVL, BnDUB, MTFUSE, MOMDMY, FUSEMK1, CTOP >= 1.8um
 err1 = EXT OCCDB2 B2i < 1.8 ABUT<90 SINGULAR REGION
 err2 = EXT OCCDB2 INDMY < 1.8 ABUT<90 SINGULAR REGION
 err3 = EXT OCCDB2 INST < 1.8 ABUT<90 SINGULAR REGION
 err4 = EXT OCCDB2 LOGO < 1.8 ABUT<90 SINGULAR REGION
 err5 = EXT OCCDB2 MARKS < 1.8 ABUT<90 SINGULAR REGION
 err6 = EXT OCCDB2 MARKG < 1.8 ABUT<90 SINGULAR REGION
 err7 = EXT OCCDB2 NODMF < 1.8 ABUT<90 SINGULAR REGION
 err8 = EXT OCCDB2 OCOVL < 1.8 ABUT<90 SINGULAR REGION
 err9 = EXT OCCDB2 B2DUB < 1.8 ABUT<90 SINGULAR REGION
 err10 = EXT OCCDB2 MTFUSE < 1.8 ABUT<90 SINGULAR REGION
 err11 = EXT OCCDB2 MOMDMY < 1.8 ABUT<90 SINGULAR REGION
 err12 = EXT OCCDB2 FUSEMK1 < 1.8 ABUT<90 SINGULAR REGION
 err13 = EXT OCCDB2 CTOP < 1.8 ABUT<90 SINGULAR REGION

 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
 err5 NOT INSIDE SealR_NOT_BULK
 err6 NOT INSIDE SealR_NOT_BULK
 err7 NOT INSIDE SealR_NOT_BULK
 err8 NOT INSIDE SealR_NOT_BULK
 err9 NOT INSIDE SealR_NOT_BULK
 err10 NOT INSIDE SealR_NOT_BULK
 err11 NOT INSIDE SealR_NOT_BULK
 err12 NOT INSIDE SealR_NOT_BULK
 err13 NOT INSIDE SealR_NOT_BULK
}

Q: Space between OCCDBn (n = 1~2, respectively) and DUM_Bn >= 0.2um
A: 
OCCD_S_17_OCCDB1 {
@ Space between OCCDBn (n = 1~2, respectively) and DUM_Bn >= 0.2um
 err1 = EXT OCCDB1 DUM_B1i < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between OCCDBn (n = 1~2, respectively) and DUM_Bn >= 0.2um
A: 
OCCD_S_17_OCCDB2 {
@ Space between OCCDBn (n = 1~2, respectively) and DUM_Bn >= 0.2um
 err1 = EXT OCCDB2 DUM_B2i < 0.2 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//OCOVL

Q: Space between OCOVL >= 100um
A: 
OCOVL_S_1 {
@ Space between OCOVL >= 100um
 err1 = EXT OCOVL < 100 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_DNW {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL DNW < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_NW {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL NW < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_PSUB {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL PSUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_AA {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL AA < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_AR {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL AR < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_GT {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL GT < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_GT_P96 {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL GT_P96 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_P2 {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL P2 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_SN {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL SN < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_SP {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL SP < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um\
A: 
OCOVL_S_2_DG {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL DG < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_M0 {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL M0 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um\
A: 
OCOVL_S_2_M0G {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL M0G < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_M0C {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL M0C < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_V0 {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL V0 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um\
A: 
OCOVL_S_2_LOGO {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL LOGO < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_INST {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL INST < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q:  OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_MARKS {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL MARKS < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_MARKG {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL MARKG < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_NODMF {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL NODMF < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_OCCD {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL OCCD < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_DUMBA {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL DUMBA < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_DUMBP {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL DUMBP < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_ARDUB {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL ARDUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_P2DUB {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL P2DUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_M0DUB {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL M0DUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_M0CDUB {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL M0CDUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_M0GDUB {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL M0GDUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_V0DUB {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL V0DUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_EFUSE {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL EFUSE < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_RESNW {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL RESNW < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_RESP1 {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL RESP1 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_RESP2 {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL RESP2 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_ESDIO2 {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL ESDIO2 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_DSTR {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL DSTR < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_DIOMK2 {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL DIOMK2 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_DMPNP {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL DMPNP < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_VARMOS {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL VARMOS < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_LDBK {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL LDBK < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_INDMY {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL INDMY < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_FUSEMK1 {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL FUSEMK1 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_NPAA {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL NPAA < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_PPAA {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL PPAA < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_AR_H {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL AR_H < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_AR_V {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL AR_V < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_DIOMK1 {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL DIOMK1 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_ESDIO1 {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL ESDIO1 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_MTFUSE {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL MTFUSE < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_CTOP {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = EXT OCOVL_FEOL CTOP < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_CELLB {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = OCOVL_FEOL AND ((SIZE CELLB BY 1.8) NOT (SIZE CELLB BY -1.8))
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_SVT_N {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = OCOVL_FEOL AND ((SIZE SVT_N BY 1.8) NOT (SIZE SVT_N BY -1.8))
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_SVT_P {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = OCOVL_FEOL AND ((SIZE SVT_P BY 1.8) NOT (SIZE SVT_P BY -1.8))
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_HVT_N {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = OCOVL_FEOL AND ((SIZE HVT_N BY 1.8) NOT (SIZE HVT_N BY -1.8))
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_HVT_P {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = OCOVL_FEOL AND ((SIZE HVT_P BY 1.8) NOT (SIZE HVT_P BY -1.8))
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_LVT_N {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = OCOVL_FEOL AND ((SIZE LVT_N BY 1.8) NOT (SIZE LVT_N BY -1.8))
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_LVT_P {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = OCOVL_FEOL AND ((SIZE LVT_P BY 1.8) NOT (SIZE LVT_P BY -1.8))
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_ULVT_N {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = OCOVL_FEOL AND ((SIZE ULVT_N BY 1.8) NOT (SIZE ULVT_N BY -1.8))
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_ULVT_P {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = OCOVL_FEOL AND ((SIZE ULVT_P BY 1.8) NOT (SIZE ULVT_P BY -1.8))
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_LFN_N {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = OCOVL_FEOL AND ((SIZE LFN_N BY 1.8) NOT (SIZE LFN_N BY -1.8))
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
A: 
OCOVL_S_2_LFN_P {
@ OCOVL_FEOL space to DNW, NW, PSUB, AA, AR, GT, GT_P96, P2, SN, SP, DG, M0, M0G, M0C, V0, LOGO, INST, MARKS, MARKG, NODMF, OCCD, DUMBA, DUMBP, ARDUB, P2DUB, M0DUB, M0CDUB, M0GDUB, V0DUB, EFUSE, RESNW, RESP1, RESP2, ESDIO2, DSTR, DIOMK2, DMPNP, VARMOS, LDBK, INDMY, FUSEMK1, NPAA, PPAA, AR_H, AR_V, CELLB edge, DIOMK1, ESDIO1, SVT_N edge, SVT_P edge, HVT_N edge, HVT_P edge, LVT_N edge, LVT_P edge, ULVT_N edge, ULVT_P edge, LFN_N edge, LFN_P edge, MTFUSE, CTOP >= 1.8um
 err1 = OCOVL_FEOL AND ((SIZE LFN_P BY 1.8) NOT (SIZE LFN_P BY -1.8))
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
A: 
OCOVL_S_3_DUM_AA {
@ OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
 err1 = EXT OCOVL_FEOL DUM_AA < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
A: 
OCOVL_S_3_DUM_AR {
@ OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
 err1 = EXT OCOVL_FEOL DUM_AR < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
A: 
OCOVL_S_3_DUM_GT {
@ OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
 err1 = EXT OCOVL_FEOL DUM_GT < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
A: 
OCOVL_S_3_DUM_P2 {
@ OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
 err1 = EXT OCOVL_FEOL DUM_P2 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
A: 
OCOVL_S_3_DUM_M0 {
@ OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
 err1 = EXT OCOVL_FEOL DUM_M0 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
A: 
OCOVL_S_3_DUM_M0C {
@ OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
 err1 = EXT OCOVL_FEOL DUM_M0C < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
A: 
OCOVL_S_3_DUM_M0G {
@ OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
 err1 = EXT OCOVL_FEOL DUM_M0G < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
A: 
OCOVL_S_3_DUM_V0 {
@ OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
 err1 = EXT OCOVL_FEOL DUM_V0 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
A: 
OCOVL_S_3_SNDUM {
@ OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
 err1 = EXT OCOVL_FEOL SNDUM < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
A: 
OCOVL_S_3_SPDUM {
@ OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
 err1 = EXT OCOVL_FEOL SPDUM < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
A: 
OCOVL_S_3_AR_HDOP {
@ OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
 err1 = EXT OCOVL_FEOL AR_HDOP < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
A: 
OCOVL_S_3_AR_VDOP {
@ OCOVL_FEOL space to DUM_AA, DUM_AR, DUM_GT, DUM_P2, DUM_M0, DUM_M0C, DUM_M0G, DUM_V0, SNDUM, SPDUM, AR_HDOP, AR_VDOP >= 0.4um
 err1 = EXT OCOVL_FEOL AR_VDOP < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_AA {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA AA < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_M1 {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA M1 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_M0 {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA M0 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_GT {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA GT < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_M0C {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA M0C < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_M0G {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA M0G < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_INDMY {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA INDMY < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_INST {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA INST < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_LOGO {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA LOGO < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_MARKS {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA MARKS < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_MARKG {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA MARKG < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_NODMF {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA NODMF < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_OCCD {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA OCCD < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_MTFUSE {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA MTFUSE < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_MOMDMY {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA MOMDMY < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_FUSEMK1 {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA FUSEMK1 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_DUMBA {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA DUMBA < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_M1DUB {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA M1DUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_M0DUB {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA M0DUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_DUMBP {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA DUMBP < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_M0CDUB {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA M0CDUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_M0GDUB {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA M0GDUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_4_CTOP {
@ OCOVLM1CA space to AA, M1, M0, GT, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, DUMBA, M1DUB, M0DUB, DUMBP, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = EXT OCOVLM1CA CTOP < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to DUM_AA, DUM_M1, DUM_M0, DUM_GT, DUM_M0C, DUM_M0G >= 0.4um\
A: 
OCOVL_S_5_DUM_AA {
@ OCOVLM1CA space to DUM_AA, DUM_M1, DUM_M0, DUM_GT, DUM_M0C, DUM_M0G >= 0.4um
 err1 = EXT OCOVLM1CA DUM_AA < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to DUM_AA, DUM_M1, DUM_M0, DUM_GT, DUM_M0C, DUM_M0G >= 0.4um
A: 
OCOVL_S_5_DUM_M1 {
@ OCOVLM1CA space to DUM_AA, DUM_M1, DUM_M0, DUM_GT, DUM_M0C, DUM_M0G >= 0.4um
 err1 = EXT OCOVLM1CA DUM_M1 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to DUM_AA, DUM_M1, DUM_M0, DUM_GT, DUM_M0C, DUM_M0G >= 0.4um
A: 
OCOVL_S_5_DUM_M0 {
@ OCOVLM1CA space to DUM_AA, DUM_M1, DUM_M0, DUM_GT, DUM_M0C, DUM_M0G >= 0.4um
 err1 = EXT OCOVLM1CA DUM_M0 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to DUM_AA, DUM_M1, DUM_M0, DUM_GT, DUM_M0C, DUM_M0G >= 0.4um
A: 
OCOVL_S_5_DUM_GT {
@ OCOVLM1CA space to DUM_AA, DUM_M1, DUM_M0, DUM_GT, DUM_M0C, DUM_M0G >= 0.4um
 err1 = EXT OCOVLM1CA DUM_GT < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to DUM_AA, DUM_M1, DUM_M0, DUM_GT, DUM_M0C, DUM_M0G >= 0.4um
A: 
OCOVL_S_5_DUM_M0C {
@ OCOVLM1CA space to DUM_AA, DUM_M1, DUM_M0, DUM_GT, DUM_M0C, DUM_M0G >= 0.4um
 err1 = EXT OCOVLM1CA DUM_M0C < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to DUM_AA, DUM_M1, DUM_M0, DUM_GT, DUM_M0C, DUM_M0G >= 0.4um
A: 
OCOVL_S_5_DUM_M0G {
@ OCOVLM1CA space to DUM_AA, DUM_M1, DUM_M0, DUM_GT, DUM_M0C, DUM_M0G >= 0.4um
 err1 = EXT OCOVLM1CA DUM_M0G < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_6_M1 {
@ OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = copy (EXT OCOVLM1CA M1 < 1.8 ABUT<90 SINGULAR REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_6_M0 {
@ OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = copy (EXT OCOVLM1CA M0 < 1.8 ABUT<90 SINGULAR REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_6_M0C {
@ OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = copy (EXT OCOVLM1CA M0C < 1.8 ABUT<90 SINGULAR REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_6_M0G {
@ OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = copy (EXT OCOVLM1CA M0G < 1.8 ABUT<90 SINGULAR REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_6_INDMY {
@ OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = copy (EXT OCOVLM1CA INDMY < 1.8 ABUT<90 SINGULAR REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_6_INST {
@ OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = copy (EXT OCOVLM1CA INST < 1.8 ABUT<90 SINGULAR REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_6_LOGO {
@ OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = copy (EXT OCOVLM1CA LOGO < 1.8 ABUT<90 SINGULAR REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_6_MARKS {
@ OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = copy (EXT OCOVLM1CA MARKS < 1.8 ABUT<90 SINGULAR REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_6_MARKG {
@ OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = copy (EXT OCOVLM1CA MARKG < 1.8 ABUT<90 SINGULAR REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_6_NODMF {
@ OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = copy (EXT OCOVLM1CA NODMF < 1.8 ABUT<90 SINGULAR REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_6_OCCD {
@ OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = copy (EXT OCOVLM1CA OCCD < 1.8 ABUT<90 SINGULAR REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_6_MTFUSE {
@ OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = copy (EXT OCOVLM1CA MTFUSE < 1.8 ABUT<90 SINGULAR REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_6_MOMDMY {
@ OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = copy (EXT OCOVLM1CA MOMDMY < 1.8 ABUT<90 SINGULAR REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_6_FUSEMK1 {
@ OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = copy (EXT OCOVLM1CA FUSEMK1 < 1.8 ABUT<90 SINGULAR REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_6_M1DUB {
@ OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = copy (EXT OCOVLM1CA M1DUB < 1.8 ABUT<90 SINGULAR REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_6_M0DUB {
@ OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = copy (EXT OCOVLM1CA M0DUB < 1.8 ABUT<90 SINGULAR REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_6_M0CDUB {
@ OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = copy (EXT OCOVLM1CA M0CDUB < 1.8 ABUT<90 SINGULAR REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_6_M0GDUB {
@ OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = copy (EXT OCOVLM1CA M0GDUB < 1.8 ABUT<90 SINGULAR REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
A: 
OCOVL_S_6_CTOP {
@ OCOVLM1CA space to M1, M0, M0C, M0G, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M0DUB, M0CDUB, M0GDUB, CTOP >= 1.8um
 err1 = copy (EXT OCOVLM1CA CTOP < 1.8 ABUT<90 SINGULAR REGION)
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CB space to DUM_M1, DUM_M0, DUM_M0C, DUM_M0G >= 0.4um
A: 
OCOVL_S_7_DUM_M1 {
@ OCOVLM1CB space to DUM_M1, DUM_M0, DUM_M0C, DUM_M0G >= 0.4um
 err1 = EXT OCOVLM1CB DUM_M1 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CB space to DUM_M1, DUM_M0, DUM_M0C, DUM_M0G >= 0.4um
A: 
OCOVL_S_7_DUM_M0 {
@ OCOVLM1CB space to DUM_M1, DUM_M0, DUM_M0C, DUM_M0G >= 0.4um
 err1 = EXT OCOVLM1CB DUM_M0 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CB space to DUM_M1, DUM_M0, DUM_M0C, DUM_M0G >= 0.4um
A: 
OCOVL_S_7_DUM_M0C {
@ OCOVLM1CB space to DUM_M1, DUM_M0, DUM_M0C, DUM_M0G >= 0.4um
 err1 = EXT OCOVLM1CB DUM_M0C < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM1CB space to DUM_M1, DUM_M0, DUM_M0C, DUM_M0G >= 0.4um
A: 
OCOVL_S_7_DUM_M0G {
@ OCOVLM1CB space to DUM_M1, DUM_M0, DUM_M0C, DUM_M0G >= 0.4um
 err1 = EXT OCOVLM1CB DUM_M0G < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_M1 {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA M1 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_M2 {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA M2 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_M0G {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA M0G < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_M0C {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA M0C < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_M0 {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA M0 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_V0 {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA V0 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_INDMY {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA INDMY < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_INST {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA INST < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_LOGO {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA LOGO < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_MARKS {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA MARKS < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_MARKG {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA MARKG < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_NODMF {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA NODMF < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_OCCD {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA OCCD < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_MTFUSE {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA MTFUSE < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_MOMDMY {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA MOMDMY < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_FUSEMK1 {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA FUSEMK1 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_M1DUB {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA M1DUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_M2DUB {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA M2DUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_M0GDUB {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA M0GDUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_M0CDUB {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA M0CDUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_M0DUB {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA M0DUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_V0DUB {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA V0DUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
A: 
OCOVL_S_8_CTOP {
@ OCOVLM2CA space to M1, M2, M0G, M0C, M0, V0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M0GDUB, M0CDUB, M0DUB, V0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM2CA CTOP < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to DUM_M1, DUM_M2, DUM_M0G, DUM_M0C, DUM_M0, DUM_V0 >= 0.4um
A: 
OCOVL_S_9_DUM_M1 {
@ OCOVLM2CA space to DUM_M1, DUM_M2, DUM_M0G, DUM_M0C, DUM_M0, DUM_V0 >= 0.4um
 err1 = EXT OCOVLM2CA DUM_M1 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to DUM_M1, DUM_M2, DUM_M0G, DUM_M0C, DUM_M0, DUM_V0 >= 0.4um
A: 
OCOVL_S_9_DUM_M2 {
@ OCOVLM2CA space to DUM_M1, DUM_M2, DUM_M0G, DUM_M0C, DUM_M0, DUM_V0 >= 0.4um
 err1 = EXT OCOVLM2CA DUM_M2 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to DUM_M1, DUM_M2, DUM_M0G, DUM_M0C, DUM_M0, DUM_V0 >= 0.4um
A: 
OCOVL_S_9_DUM_M0G {
@ OCOVLM2CA space to DUM_M1, DUM_M2, DUM_M0G, DUM_M0C, DUM_M0, DUM_V0 >= 0.4um
 err1 = EXT OCOVLM2CA DUM_M0G < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to DUM_M1, DUM_M2, DUM_M0G, DUM_M0C, DUM_M0, DUM_V0 >= 0.4um
A: 
OCOVL_S_9_DUM_M0C {
@ OCOVLM2CA space to DUM_M1, DUM_M2, DUM_M0G, DUM_M0C, DUM_M0, DUM_V0 >= 0.4um
 err1 = EXT OCOVLM2CA DUM_M0C < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to DUM_M1, DUM_M2, DUM_M0G, DUM_M0C, DUM_M0, DUM_V0 >= 0.4um
A: 
OCOVL_S_9_DUM_M0 {
@ OCOVLM2CA space to DUM_M1, DUM_M2, DUM_M0G, DUM_M0C, DUM_M0, DUM_V0 >= 0.4um
 err1 = EXT OCOVLM2CA DUM_M0 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM2CA space to DUM_M1, DUM_M2, DUM_M0G, DUM_M0C, DUM_M0, DUM_V0 >= 0.4um
A: 
OCOVL_S_9_DUM_V0 {
@ OCOVLM2CA space to DUM_M1, DUM_M2, DUM_M0G, DUM_M0C, DUM_M0, DUM_V0 >= 0.4um
 err1 = EXT OCOVLM2CA DUM_V0 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_M1 {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 M1 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_M2 {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 M2 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_M3 {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 M3 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_M4 {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 M4 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_V0 {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 V0 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_V1 {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 V1 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_V2 {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 V2 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_V3 {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 V3 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_INDMY {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 INDMY < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_INST {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 INST < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_LOGO {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 LOGO < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_MARKS {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 MARKS < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_MARKG {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 MARKG < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_NODMF {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 NODMF < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_OCCD {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 OCCD < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_MTFUSE {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 MTFUSE < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_MOMDMY {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 MOMDMY < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_FUSEMK1 {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 FUSEMK1 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_M1DUB {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 M1DUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_M2DUB {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 M2DUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_M3DUB {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 M3DUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_M4DUB {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 M4DUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: 
OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
A: 
OCOVL_S_10_CTOP {
@ OCOVLM4 space to M1, M2, M3, M4, V0, V1, V2, V3, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, M1DUB, M2DUB, M3DUB, M4DUB, CTOP >= 1.8um
 err1 = EXT OCOVLM4 CTOP < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to DUM_M1, DUM_M2, DUM_M3, DUM_M4, DUM_V0, DUM_V1, DUM_V2, DUM_V3 >= 0.4um
A: 
OCOVL_S_11_DUM_M1 {
@ OCOVLM4 space to DUM_M1, DUM_M2, DUM_M3, DUM_M4, DUM_V0, DUM_V1, DUM_V2, DUM_V3 >= 0.4um
 err1 = EXT OCOVLM4 DUM_M1 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to DUM_M1, DUM_M2, DUM_M3, DUM_M4, DUM_V0, DUM_V1, DUM_V2, DUM_V3 >= 0.4um
A: 
OCOVL_S_11_DUM_M2 {
@ OCOVLM4 space to DUM_M1, DUM_M2, DUM_M3, DUM_M4, DUM_V0, DUM_V1, DUM_V2, DUM_V3 >= 0.4um
 err1 = EXT OCOVLM4 DUM_M2 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to DUM_M1, DUM_M2, DUM_M3, DUM_M4, DUM_V0, DUM_V1, DUM_V2, DUM_V3 >= 0.4um
A: 
OCOVL_S_11_DUM_M3 {
@ OCOVLM4 space to DUM_M1, DUM_M2, DUM_M3, DUM_M4, DUM_V0, DUM_V1, DUM_V2, DUM_V3 >= 0.4um
 err1 = EXT OCOVLM4 DUM_M3 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to DUM_M1, DUM_M2, DUM_M3, DUM_M4, DUM_V0, DUM_V1, DUM_V2, DUM_V3 >= 0.4um
A: 
OCOVL_S_11_DUM_M4 {
@ OCOVLM4 space to DUM_M1, DUM_M2, DUM_M3, DUM_M4, DUM_V0, DUM_V1, DUM_V2, DUM_V3 >= 0.4um
 err1 = EXT OCOVLM4 DUM_M4 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to DUM_M1, DUM_M2, DUM_M3, DUM_M4, DUM_V0, DUM_V1, DUM_V2, DUM_V3 >= 0.4um
A: 
OCOVL_S_11_DUM_V0 {
@ OCOVLM4 space to DUM_M1, DUM_M2, DUM_M3, DUM_M4, DUM_V0, DUM_V1, DUM_V2, DUM_V3 >= 0.4um
 err1 = EXT OCOVLM4 DUM_V0 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to DUM_M1, DUM_M2, DUM_M3, DUM_M4, DUM_V0, DUM_V1, DUM_V2, DUM_V3 >= 0.4um
A: 
OCOVL_S_11_DUM_V1 {
@ OCOVLM4 space to DUM_M1, DUM_M2, DUM_M3, DUM_M4, DUM_V0, DUM_V1, DUM_V2, DUM_V3 >= 0.4um
 err1 = EXT OCOVLM4 DUM_V1 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to DUM_M1, DUM_M2, DUM_M3, DUM_M4, DUM_V0, DUM_V1, DUM_V2, DUM_V3 >= 0.4um
A: 
OCOVL_S_11_DUM_V2 {
@ OCOVLM4 space to DUM_M1, DUM_M2, DUM_M3, DUM_M4, DUM_V0, DUM_V1, DUM_V2, DUM_V3 >= 0.4um
 err1 = EXT OCOVLM4 DUM_V2 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLM4 space to DUM_M1, DUM_M2, DUM_M3, DUM_M4, DUM_V0, DUM_V1, DUM_V2, DUM_V3 >= 0.4um
A: 
OCOVL_S_11_DUM_V3 {
@ OCOVLM4 space to DUM_M1, DUM_M2, DUM_M3, DUM_M4, DUM_V0, DUM_V1, DUM_V2, DUM_V3 >= 0.4um
 err1 = EXT OCOVLM4 DUM_V3 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
A: 
OCOVL_S_12_V0 {
@ OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLV0 V0 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
A: 
OCOVL_S_12_M1 {
@ OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLV0 M1 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
A: 
OCOVL_S_12_M0G {
@ OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLV0 M0G < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
A: 
OCOVL_S_12_M0C {
@ OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLV0 M0C < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
A: 
OCOVL_S_12_M0 {
@ OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLV0 M0 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
A: 
OCOVL_S_12_INDMY {
@ OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLV0 INDMY < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
A: 
OCOVL_S_12_INST {
@ OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLV0 INST < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
A: 
OCOVL_S_12_LOGO {
@ OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLV0 LOGO < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
A: 
OCOVL_S_12_MARKS {
@ OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLV0 MARKS < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
A: 
OCOVL_S_12_MARKG {
@ OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLV0 MARKG < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
A: 
OCOVL_S_12_NODMF {
@ OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLV0 NODMF < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
A: 
OCOVL_S_12_OCCD {
@ OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLV0 OCCD < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
A: 
OCOVL_S_12_MTFUSE {
@ OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLV0 MTFUSE < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
A: 
OCOVL_S_12_MOMDMY {
@ OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLV0 MOMDMY < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
A: 
OCOVL_S_12_FUSEMK1 {
@ OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLV0 FUSEMK1 < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
A: 
OCOVL_S_12_V0DUB {
@ OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLV0 V0DUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
A: 
OCOVL_S_12_M1DUB {
@ OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLV0 M1DUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
A: 
OCOVL_S_12_M0GDUB {
@ OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLV0 M0GDUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
A: 
OCOVL_S_12_M0CDUB {
@ OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLV0 M0CDUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
A: 
OCOVL_S_12_M0DUB {
@ OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLV0 M0DUB < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
A: 
OCOVL_S_12_CTOP {
@ OCOVLV0 space to V0, M1, M0G, M0C, M0, INDMY, INST, LOGO, MARKS, MARKG, NODMF, OCCD, MTFUSE, MOMDMY, FUSEMK1, V0DUB, M1DUB, M0GDUB, M0CDUB, M0DUB, CTOP >= 1.8um
 err1 = EXT OCOVLV0 CTOP < 1.8 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to DUM_V0, DUM_M1, DUM_M0G, DUM_M0C, DUM_M0 >= 0.4um
A: 
OCOVL_S_13_DUM_V0 {
@ OCOVLV0 space to DUM_V0, DUM_M1, DUM_M0G, DUM_M0C, DUM_M0 >= 0.4um
 err1 = EXT OCOVLV0 DUM_V0 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to DUM_V0, DUM_M1, DUM_M0G, DUM_M0C, DUM_M0 >= 0.4um
A: 
OCOVL_S_13_DUM_M1 {
@ OCOVLV0 space to DUM_V0, DUM_M1, DUM_M0G, DUM_M0C, DUM_M0 >= 0.4um
 err1 = EXT OCOVLV0 DUM_M1 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to DUM_V0, DUM_M1, DUM_M0G, DUM_M0C, DUM_M0 >= 0.4um
A: 
OCOVL_S_13_DUM_M0G {
@ OCOVLV0 space to DUM_V0, DUM_M1, DUM_M0G, DUM_M0C, DUM_M0 >= 0.4um
 err1 = EXT OCOVLV0 DUM_M0G < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to DUM_V0, DUM_M1, DUM_M0G, DUM_M0C, DUM_M0 >= 0.4um
A: 
OCOVL_S_13_DUM_M0C {
@ OCOVLV0 space to DUM_V0, DUM_M1, DUM_M0G, DUM_M0C, DUM_M0 >= 0.4um
 err1 = EXT OCOVLV0 DUM_M0C < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}
 
Q: OCOVLV0 space to DUM_V0, DUM_M1, DUM_M0G, DUM_M0C, DUM_M0 >= 0.4um
A: 
OCOVL_S_13_DUM_M0 {
@ OCOVLV0 space to DUM_V0, DUM_M1, DUM_M0G, DUM_M0C, DUM_M0 >= 0.4um
 err1 = EXT OCOVLV0 DUM_M0 < 0.4 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//HR

Q: Space between (DIR OR DIRDMP) (DIR overlap with DIRDMP is not allowed) >= 0.192um
A: 
HR_S_1 {
@ Space between (DIR OR DIRDMP) (DIR overlap with DIRDMP is not allowed) >= 0.192um
 err1 = EXT ALL_DIR < 0.192 ABUT<90 SINGULAR REGION
 err2 = DIR AND DIRDMP
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between (DIR OR DIRDMP) at length direction when PRL >= 0um. >= 0.192um
A: 
HR_S_1_1 {
@ Space between (DIR OR DIRDMP) at length direction when PRL >= 0um. >= 0.192um
 err1 = EXT DIR_W_edges < 0.192 ABUT<90 PROJ>=0 REGION
 err2 = EXT DIRDMP_W_edges < 0.192 ABUT<90 PROJ>=0 REGION
 err3 = EXT DIR_W_edges DIRDMP_W_edges < 0.192 ABUT<90 PROJ>=0 REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between (DIR OR DIRDMP) and (M0G OR M0) (Overlap is not allowed, except M0G (Width = 0.06um) INTERACT DIR) >= 0.345um
A: 
HR_S_2 {
@ Space between (DIR OR DIRDMP) and (M0G OR M0) (Overlap is not allowed, except M0G (Width = 0.06um) INTERACT DIR) >= 0.345um
 err1_TMP = EXT ALL_DIR (M0G OR M0) < 0.345 ABUT<90 SINGULAR REGION INSIDE ALSO
 err1 = err1_TMP NOT INTERACT HR_M0G_60
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between (DIR OR DIRDMP) and (M0G INTERACT DIR) with width = 0.06um (M0G overlap with DIRDMP, DIR overlap with M0GDMP is not allowed) >= 0.178um
A: 
HR_S_3 {
@ Space between (DIR OR DIRDMP) and (M0G INTERACT DIR) with width = 0.06um (M0G overlap with DIRDMP, DIR overlap with M0GDMP is not allowed) >= 0.178um
 err1 = EXT ALL_DIR HR_M0G_60 < 0.178 ABUT<90 SINGULAR REGION MEASURE ALL
 err2 = ((OR M0G M0GDMP) AND DIRDMP) OR (DIR AND M0GDMP)  //; M0GDMP overlap DIRDMP is also forbidden based on HR_S_4
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between (DIR OR DIRDMP) and (M0GDMP OR M0DMP) (Overlap is not allowed, except DIRDMP space to M0GDMP) >= 0.11um
A: 
HR_S_4 {
@ Space between (DIR OR DIRDMP) and (M0GDMP OR M0DMP) (Overlap is not allowed, except DIRDMP space to M0GDMP) >= 0.11um
 err1 = EXT DIR (M0GDMP OR M0DMP) < 0.11 ABUT<90 SINGULAR REGION INSIDE ALSO
 err2 = EXT DIRDMP M0DMP < 0.11 ABUT<90 SINGULAR REGION INSIDE ALSO
 err3 = DIRDMP AND M0GDMP
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DIR and AOP_AA (Overlap is not allowed) >= 0.113um
A: 
HR_S_6_1 {
@ Space between DIR and AOP_AA (Overlap is not allowed) >= 0.113um
 err1 = EXT DIR AOP_AA < 0.113 ABUT<90 SINGULAR REGION INSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DIRDMP and AOP_AA (Overlap is not allowed) >= 0.078um
A: 
HR_S_6_2 {
@ Space between DIRDMP and AOP_AA (Overlap is not allowed) >= 0.078um
 err1 = EXT DIRDMP AOP_AA < 0.078 ABUT<90 SINGULAR REGION INSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DIR and AOP_GT (Overlap is not allowed) >= 0.07um
A: 
HR_S_7_1 {
@ Space between DIR and AOP_GT (Overlap is not allowed) >= 0.07um
 err1 = EXT DIR AOP_GT < 0.07 ABUT<90 SINGULAR REGION INSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DIRDMP and GT (Overlap is not allowed) >= 0.07um
A: 
HR_S_7_2 {
@ Space between DIRDMP and GT (Overlap is not allowed) >= 0.07um
 err1 = EXT DIRDMP GT < 0.07 ABUT<90 SINGULAR REGION INSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between RESP1 and AOP_AA (Overlap with AA, cut with AADMP is not allowed) >= 0.065um
A: 
HR_S_8 {
@ Space between RESP1 and AOP_AA (Overlap with AA, cut with AADMP is not allowed) >= 0.065um
 err1 = EXT RESP1 AOP_AA < 0.065 ABUT<90 SINGULAR REGION
 err2 = RESP1 AND AA
 err3 = AADMP CUT RESP1
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DIRDMP and GTDMP (overlap is not allowed) >= 0.035um
A: 
HR_S_9 {
@ Space between DIRDMP and GTDMP (overlap is not allowed) >= 0.035um
 err1 = EXT DIRDMP GTDMP < 0.035 ABUT<90 SINGULAR REGION INSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DIR and RESP1 >= 0.257um
A: 
HR_S_10 {
@ Space between DIR and RESP1 >= 0.257um
 err1 = EXT DIR RESP1 < 0.257 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

//RESNW

Q: Space between Resistor NW and Resistor NW or NW >= 0.90um
A: 
RESNW_S_1 {
@ Space between Resistor NW and Resistor NW or NW >= 0.90um
 err1 = EXT NWR NW < 0.9 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between RESNW and ALL_AA (Overlap is not allowed) >= 0.432um
A: 
RESNW_S_2 {
@ Space between RESNW and ALL_AA (Overlap is not allowed) >= 0.432um
 err1 = EXT (ALL_AA NOT INTERACT NWRT) RESNW < 0.432 ABUT<90 SINGULAR REGION INSIDE ALSO
 err1 NOT INSIDE SealR_NOT_BULK
}

//DSTR

Q: DSTR space >= 0.192um
A: 
DSTR_S_1 {
@ DSTR space >= 0.192um
 err1 = EXT DSTR < 0.192 ABUT<90 REGION
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DSTR (INTERACT ACTIVE) and ACTIVE (ACTIVE CUT DSTR is not allowed) >= 0.048um
A: 
DSTR_S_2 {
@ Space between DSTR (INTERACT ACTIVE) and ACTIVE (ACTIVE CUT DSTR is not allowed) >= 0.048um
 err1 = EXT (DSTR INTERACT ACT) ACT < 0.048 ABUT<90 REGION
 err2 = (DSTR CUT ACT) INSIDE EDGE ACT
 err3 = ACT CUT DSTR  //; abnormal relationship
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DSTR (INTERACT ACTIVE) and ACTIVE (ACTIVE vertical edge expanding 1/2 GT width) in S/D direction, (ACTIVE CUT DSTR is not allowed) >= 0.065um
A: 
DSTR_S_2a {
@ Space between DSTR (INTERACT ACTIVE) and ACTIVE (ACTIVE vertical edge expanding 1/2 GT width) in S/D direction, (ACTIVE CUT DSTR is not allowed) >= 0.065um
 chk_ACT = edge_gate_AA_act NOT OUTSIDE ACT
 chk_DSTR = ANGLE (DSTR INTERACT chk_ACT) == 90
 err1 = EXT chk_DSTR chk_ACT < 0.065 ABUT<90 OPPOSITE REGION
 err2 = (DSTR CUT chk_ACT) INSIDE EDGE chk_ACT
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between DSTR and ALL_GT >= 0.035um
A: 
DSTR_S_3 {
@ Space between DSTR and ALL_GT >= 0.035um
 err1 = EXT DSTR ALL_GT < 0.035 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}


//GATED

Q: Space between DIOMK2 and AA >= 0.048um
A: 
GATED_S_1 {
@ Space between DIOMK2 and AA >= 0.048um
 err1 = EXT DIOMK2 AA < 0.048 ABUT<90 SINGULAR REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DIOMK2 and AA (AA vertical edge expanding 1/2 GT width) in S/D direction >= 0.065um
A: 
GATED_S_2 {
@ Space between DIOMK2 and AA (AA vertical edge expanding 1/2 GT width) in S/D direction >= 0.065um
 err1 = EXT DIOMK2 edge_gate_AA_all_v_edges < 0.065 ABUT<90 REGION MEASURE ALL
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: GATE space on the same AA INSIDE DIOMK2 region = 0.118um
A: 
GATED_S_3 {
@ GATE space on the same AA INSIDE DIOMK2 region = 0.118um
 chk_GATE = GATE_DIOMK2 INSIDE EDGE AA
 err1 = EXT (chk_GATE) == 0.118 ABUT<90 OPPOSITE
 err1 NOT INSIDE EDGE SealR_NOT_BULK
}

Q: Space between DIOMK2 and (ALL_GT NOT P2) >= 0.059um
A: 
GATED_S_4 {
@ Space between DIOMK2 and (ALL_GT NOT P2) >= 0.059um
 err1 = EXT ALL_GT_NOT_P2 DIOMK2 < 0.059 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
}


//BJT

Q: Space between Collector AA and Base AA in ENDCAP direction = 0.24um
A: 
BJT_S_1 {
@ Space between Collector AA and Base AA in ENDCAP direction = 0.24um
 CAA_h_edges = Collector_AA_h_edges COIN EDGE Collector_AA
 BAA_h_edges_good = EXT [Base_AA_merged] CAA_h_edges == 0.24 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 CAA_h_edges_good = EXT Base_AA_merged [CAA_h_edges] == 0.24 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 err1 = ((Base_AA NOT BIPOLA) INTERACT M0G) NOT WITH EDGE BAA_h_edges_good  //;M0G only used in Base AA, exclude BASE AA in emitter
 err2 = (Base_AA WITH EDGE BAA_h_edges_good) NOT INTERACT M0G   //; base AA without M0G
 err3 = (Collector_AA WITH EDGE CAA_h_edges_good) NOT INTERACT M0G   //; base AA without M0G
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
}

Q: Space between Emitter AA and Base AA in ENDCAP direction for (DMPNP NOT DG) = 0.48um
A: 
BJT_S_2a {
@ Space between Emitter AA and Base AA in ENDCAP direction for (DMPNP NOT DG) = 0.48um
 EAA_CORE_check = Emitter_AA_h_edges COIN EDGE Emitter_AA_CORE
 BAA_CORE_block = Base_AA_CORE_merged INSIDE (HOLES Collector_AA_CORE_merged)
 BAA_CORE_check = Base_AA_CORE INTERACT (NOT RECTANGLE BAA_CORE_block)
 BAA_CORE_good = EXT EAA_CORE_check [Base_AA_CORE_merged] == 0.48 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 err1 = (BAA_CORE_check INTERACT M0G) NOT WITH EDGE BAA_CORE_good
 err2 = (Base_AA_CORE WITH EDGE BAA_CORE_good) NOT INTERACT M0G
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}

Q: Space between Emitter AA and Base AA in ENDCAP direction for (DMPNP INSIDE DG) = 0.192um
A: 
BJT_S_2b {
@ Space between Emitter AA and Base AA in ENDCAP direction for (DMPNP INSIDE DG) = 0.192um
 BAA_IO_h_edges = Emitter_AA_h_edges COIN EDGE Emitter_AA_IO
 BAA_IO_OU_h_edges_good = EXT BAA_IO_h_edges [Base_AA_IO_OU_Emitter] == 0.192 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 BAA_IO_IN_h_edges_good = EXT BAA_IO_h_edges [Base_AA_IO_IN_Emitter] == 0.192 ABUT<90 OPPOSITE EXCLUDE SHIELDED
 BAA_IO_OU_Emitter_err1 = Base_AA_IO_OU_Emitter NOT WITH EDGE BAA_IO_OU_h_edges_good
 BAA_IO_IN_Emitter_err2 = Base_AA_IO_IN_Emitter NOT WITH EDGE BAA_IO_IN_h_edges_good == 2
 err1 = BAA_IO_OU_Emitter_err1 NOT INTERACT (HOLES Collector_AA_merged)
 err2 = BAA_IO_IN_Emitter_err2 NOT INTERACT (HOLES Collector_AA_merged)
 err3 = (Base_AA_IO_OU_Emitter WITH EDGE BAA_IO_OU_h_edges_good) NOT INTERACT M0G  //; base AA without M0G
 err4 = (Base_AA_IO_IN_Emitter WITH EDGE BAA_IO_IN_h_edges_good) NOT INTERACT M0G  //; base AA without M0G
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
}

Q: Space between Collector AA and Base AA in S/D direction = 0.408um
A: 
BJT_S_3 {
@ Space between Collector AA and Base AA in S/D direction = 0.408um
 BAA_CORE_loop = Base_AA_CORE_merged INSIDE (HOLES Collector_AA_CORE_merged)
 BAA_CORE_good = EXT [Base_AA_CORE_merged] Collector_AA_v_edges == 0.408 ABUT<90 OPPOSITE EXTENDED 0.12 EXCLUDE SHIELDED
 BAA_CORE_check = Base_AA_CORE INTERACT BAA_CORE_loop
 err1 = (BAA_CORE_check NOT INTERACT M0G) NOT WITH EDGE BAA_CORE_good
 err1 NOT INSIDE SealR_NOT_BULK
}

discrete_base_AA_merged = Base_AA_CORE_merged INSIDE (HOLES Collector_AA_CORE_merged)  //; merge the discrete base AA (redue false)
discrete_base_AA_merged_v_edges = ANGLE discrete_base_AA_merged == 90
discrete_base_AA_merged_v_edges_good = EXT Emitter_AA [discrete_base_AA_merged_v_edges] == 0.612 ABUT<90 OPPOSITE EXCLUDE SHIELDED

Q: Space between Emitter AA and Base AA in S/D direction = 0.612um
A: 
BJT_S_4 {
@ Space between Emitter AA and Base AA in S/D direction = 0.612um
 err1 = (discrete_base_AA_merged_v_edges COIN EDGE (HOLES Base_AA_CORE_merged)) NOT TOUCH EDGE discrete_base_AA_merged_v_edges_good
 err2 = CONVEX EDGE Collector_AA_CORE_merged == 1  //;non-Rectangle collector AA
 err3 = CONVEX EDGE Base_AA_CORE_merged == 1  //;non-Rectangle base AA
 err1 NOT INSIDE EDGE SealR_NOT_BULK
 err2 NOT INSIDE EDGE SealR_NOT_BULK
 err3 NOT INSIDE EDGE SealR_NOT_BULK
}

Collector_AA_h_edges_IO = Collector_AA_h_edges COIN EDGE Collector_AA_IO
Collector_AA_h_edges_IO_good = EXT Base_AA_merged [Collector_AA_h_edges_IO] == 0.24 ABUT<90 OPPOSITE EXCLUDE SHIELDED
Collector_AA_outermost_TMP = CAKE_Collector_AA_h_edges COIN EDGE real_Collector_AA_h_edges
Collector_AA_outermost = Collector_AA_IO WITH EDGE (ENC [Collector_AA_outermost_TMP] DMPNP <= 1.0 ABUT<90 OPPOSITE EXCLUDE SHIELDED)  //;based on BJT_EN_1

Q: Space between two Collector AA (PRL > 0um) between different units in same DMPNP (different units can not share same Collector AA) = 0.768~0.96um
A: 
BJT_S_5 {
@ Space between two Collector AA (PRL > 0um) between different units in same DMPNP (different units can not share same Collector AA) = 0.768~0.96um
// CAA_joint_all = SIZE (Collector_AA NOT Collector_AA_outermost) BY 0.96/2 INSIDE OF DMPNP STEP 0.25
// CAA_diffC_IO = (DMPNP NOT INTERACT DG) INTERACT CAA_joint_all >= 2
// CAA_sameC_CR = (DMPNP INTERACT DG) INTERACT (CAA_joint_all INTERACT Collector_AA == 1)
// err1 = OR (CAA_joint_all INTERACT CAA_diffC_IO) ((CAA_joint_all INTERACT Collector_AA == 1) INTERACT CAA_sameC_CR)

 CAA_space_err = EXT real_Collector_AA < 0.768 ABUT<90 OPPOSITE REGION EXCLUDE SHIELDED
 err1_TMP = WITH WIDTH ((SIZE DMPNP BY -0.768) NOT (SIZE BJT_AA BY 0.35 OVERUNDER)) > 0.96  //;based on BJT.EN.1 BJT.S.**
 err1 = err1_TMP INTERACT real_Collector_AA > 1  //; remove fasle cased by pick-up in DMPNP
 err2 = (CAA_space_err NOT INSIDE SN) NOT INSIDE SP  //;exclude core BJT ring inner space
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK

 err3 = INT Collector_AA_h_edges_IO_good == 0.144 ABUT<90 OPPOSITE REGION  //;share same io Collector AA
 err4 = OR ((HOLES Collector_AA_merged) INTERACT (HOLES Base_AA_merged) > 1) (Collector_AA_merged INTERACT (HOLES Collector_AA_merged) > 1)  //;share same core Collector AA
 err3 NOT INSIDE SealR_NOT_BULK
 err4 NOT INSIDE SealR_NOT_BULK
}

Q: Space between DMPNP and ALL_GT >= 0.035um
A: 
BJT_S_6 {
@ Space between DMPNP and ALL_GT >= 0.035um
 err1 = EXT DMPNP ALL_GT < 0.035 ABUT<90 SINGULAR REGION
 err2 = EXT DMPNP ALL_GT < 0.035 ABUT<90 SINGULAR REGION
 err1 NOT INSIDE SealR_NOT_BULK
 err2 NOT INSIDE SealR_NOT_BULK
}


//VAR

Q: Space between VARMOS and ACTIVE >= 0.125um
A: 
VAR_S_1 {
@ Space between VARMOS and ACTIVE >= 0.125um
 err1 = EXT ACT VARMOS < 0.125 ABUT<90 SINGULAR REGION //MEASURE ALL based on VAR_EN_1
 err1 NOT INSIDE SealR_NOT_BULK
}

Q: Space between VARMOS and ACTIVE (ACTIVE vertical edge extend 1/2 GT width) in S/D direction >= 0.144um
A: 
VAR_S_1a {
@ Space between VARMOS and ACTIVE (ACTIVE vertical edge extend 1/2 GT width) in S/D direction >= 0.144um
 err1 = EXT edge_gate_AA_act VARMOS < 0.144 ABUT<90 SINGULAR REGION //MEASURE ALL based on VAR_EN_1
 err1 NOT INSIDE SealR_NOT_BULK
}
